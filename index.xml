<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andi Rückauer</title>
    <link>https://arueckauer.github.io/</link>
    <description>Recent content on Andi Rückauer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 21 May 2019 20:45:00 +0200</lastBuildDate>
    
	<atom:link href="https://arueckauer.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Day 2: Clean Expressive Skeleton</title>
      <link>https://arueckauer.github.io/posts/2019/05/day-2-clean-expressive-skeleton/</link>
      <pubDate>Tue, 21 May 2019 20:45:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/day-2-clean-expressive-skeleton/</guid>
      <description>Whenever starting a new Zend Expressive project, I use the handy zendframework/zend-expressive-skeleton. It creates an almost empty Expressive application structure with your choice of
 code structure, DI container, router, template engine and error handler.  It comes also with two exemplary handlers and conditions for various routers and template engines. I wondered, what a cleaned-up skeleton would look like and how many bits and pieces were actually there which could be removed.</description>
    </item>
    
    <item>
      <title>Day 1: Getting started with Terraform</title>
      <link>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</link>
      <pubDate>Mon, 20 May 2019 22:00:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</guid>
      <description>This year I attended the Global Azure Bootcamp in Zürich. It was a very well organized conference with lots of interesting sessions. I definitely will go again next year!
One of my favorites was Terraform and Azure - How to GitOps by Sandro Koechli and Jörn Stenkamp. They introduced the idea of managing infrastructure as code with Git. This concept was new to me and very exciting. Unfortunately time did not allow for some demo.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://arueckauer.github.io/about/</link>
      <pubDate>Mon, 20 May 2019 08:00:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/about/</guid>
      <description>Hi, my name is Andi Rückauer. I am an Application Engineer at Intelliact AG.
I&amp;rsquo;m originally from Stuttgart, Germany and am living in Switzerland, home of my beautiful wife, since 2014. We have two children who keep us on our toes.
Besides my interest in software development and technology in general, I greatly enjoy scuba diving and photography.</description>
    </item>
    
    <item>
      <title>100 Days of Code</title>
      <link>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</link>
      <pubDate>Mon, 20 May 2019 06:00:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</guid>
      <description>Lately quite a few posts on the #100DaysOfCode challenge have come up on my Twitter timeline. I was curious what it is all about. So, I started to do some research and I really liked what I was reading.
In this post I am writing about my own commitment to the challenge. If you want to know more about it yourself, start reading the initial article on medium or go straight to the official website.</description>
    </item>
    
    <item>
      <title>From Flat to Modular</title>
      <link>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</link>
      <pubDate>Fri, 17 May 2019 06:30:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</guid>
      <description>Transforming of a flat application structure to a modular one in a Zend Expressive project
In an Expressive project I ran into the issue, where the application grew much larger than initially expected. How about that? The project got initialized with a flat code structure, which is the default selection of the Expressive Skeleton. Flat basically means the application is organized in a single module in contrast to endless modules in the modular structure.</description>
    </item>
    
    <item>
      <title>Just do it</title>
      <link>https://arueckauer.github.io/posts/2019/05/just-do-it/</link>
      <pubDate>Thu, 16 May 2019 13:00:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/just-do-it/</guid>
      <description>The idea of starting my own blog has accompanied me for years. Since I was afraid, it would not see regular updates and quickly become a lonesome tumbleweed, I&amp;rsquo;ve never put it to action.
However I could never set aside having a tool to record and contain my thought. So here goes nothing.
Reasons to start and (not) to end My main motivation of starting this blog is to have a</description>
    </item>
    
  </channel>
</rss>