<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andi Rückauer</title>
    <link>https://arueckauer.github.io/</link>
    <description>Recent content on Andi Rückauer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 01 May 2020 07:09:07 +0200</lastBuildDate>
    
	<atom:link href="https://arueckauer.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Replace Crlf With Lf in Bash</title>
      <link>https://arueckauer.github.io/posts/2020/05/replace-crlf-with-lf-in-bash/</link>
      <pubDate>Fri, 01 May 2020 07:09:07 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2020/05/replace-crlf-with-lf-in-bash/</guid>
      <description>While installing a new crontab from a file, an error occured.
Error in cron: bad minute errors in crontab file, can&#39;t install  Since the file was previously edited on Windows, line breaks consisted of a CRLF, which breaks the crontab impoort. To convert thes to LF, I used a command taken from here.
cat input.file | sed &#39;s/\r$//&#39; &amp;gt; output.file  </description>
    </item>
    
    <item>
      <title>Install Composer on Linux</title>
      <link>https://arueckauer.github.io/posts/2020/04/install-composer-on-linux/</link>
      <pubDate>Thu, 30 Apr 2020 08:06:13 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2020/04/install-composer-on-linux/</guid>
      <description>A self-reminde ron how to install on Linux. Instruction taken from here.
curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer   Note: If the above fails due to permissions, run the mv line again with sudo.
 curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer  </description>
    </item>
    
    <item>
      <title>How to Setup passwordless SSH Login to Nine Server</title>
      <link>https://arueckauer.github.io/posts/2020/04/how-to-setup-passwordless-ssh-login-to-nine-server/</link>
      <pubDate>Wed, 29 Apr 2020 09:30:00 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2020/04/how-to-setup-passwordless-ssh-login-to-nine-server/</guid>
      <description>Add fingerprint to known_hosts andi@arueckauer:~$ ssh-keyscan -H arueckauer01.nine.ch &amp;gt;&amp;gt; ~/.ssh/known_hosts  Add key to server andi@arueckauer:~$ cat ~/.ssh/id_rsa.pub | ssh www-data@arueckauer01.nine.ch &#39;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&#39; www-data@arueckauer01.nine.ch&#39;s password:  SSH Configuration ~/.ssh/config
Host arueckauer01 arueckauer01.nine.ch HostName arueckauer01.nine.ch IdentityFile ~/.ssh/id_rsa User www-data LocalForward 3310 localhost:3306  Alias ~/.bashrc
alias arueckauer01=&#39;ssh arueckauer01&#39;  </description>
    </item>
    
    <item>
      <title>Generate SSH Keys for Windows System account</title>
      <link>https://arueckauer.github.io/posts/2020/04/generate-ssh-keys-for-windows-system-account/</link>
      <pubDate>Tue, 21 Apr 2020 10:27:32 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2020/04/generate-ssh-keys-for-windows-system-account/</guid>
      <description>Windows services usually run under the System account. In cases where a service needs SSH access like cloning a Git repository, a SSH key pair might be required. But how do you generate these keys for the System account?
The Sysinternals Process Utilities provide PowerShell tools. Among these is PsExec, which can be used to invoke a process on a remote machine. But it also allows executing a process on the same machine under a different user.</description>
    </item>
    
    <item>
      <title>How to minimize Signal desktop app to system try</title>
      <link>https://arueckauer.github.io/posts/2020/01/how-to-minimize-signal-desktop-app-to-system-try/</link>
      <pubDate>Mon, 20 Jan 2020 10:45:25 +0100</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2020/01/how-to-minimize-signal-desktop-app-to-system-try/</guid>
      <description>Unfortunately the Signal desktop app does not offer any configuration in the GUI to allow minimization to the system tray. But there are start parameters, with which the application behavior can be controlled.
 --use-tray-icon will minimize the app to the system tray when hitting the close button --start-in-tray will start the app already minimized to the tray  To use a features, adding the wanted parameters to the shortcut.</description>
    </item>
    
    <item>
      <title>Stream Zip in Zend Expressive</title>
      <link>https://arueckauer.github.io/posts/2019/12/stream-zip-in-zend-expressive/</link>
      <pubDate>Wed, 11 Dec 2019 14:16:25 +0100</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/12/stream-zip-in-zend-expressive/</guid>
      <description>A feature request in a customer project was to zip multiple files</description>
    </item>
    
    <item>
      <title>self vs. static</title>
      <link>https://arueckauer.github.io/posts/2019/11/self-vs.-static/</link>
      <pubDate>Mon, 04 Nov 2019 06:41:23 +0100</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/11/self-vs.-static/</guid>
      <description>I get confused with self and static. Then I research and learn it. Then I forget it again. And so on.
TLDR  self refers to the same class in which the new keyword is actually written.
static, in PHP 5.3&#39;s late static bindings, refers to whatever class in the hierarchy you called the method on.
 By BoltClock on Stack Overflow
An example &amp;lt;?php class Foo { public function __invoke() { echo &#39;self: &#39; .</description>
    </item>
    
    <item>
      <title>Console Commands in an Expressive Applicaton II</title>
      <link>https://arueckauer.github.io/posts/2019/10/console-commands-in-an-expressive-applicaton-ii/</link>
      <pubDate>Fri, 18 Oct 2019 07:23:59 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/10/console-commands-in-an-expressive-applicaton-ii/</guid>
      <description>This is an addition to my previous post Console Commands in an Expressive Applicaton. It provides two more real-world examples for Console Commands in Expressive applications.
mwop&#39;s blog #!/usr/bin/env php &amp;lt;?php /** * @license http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause * @copyright Copyright (c) Matthew Weier O&#39;Phinney */ namespace Mwop; use Symfony\Component\Console\Application; use Symfony\Component\Console\CommandLoader\ContainerCommandLoader; chdir(__DIR__ . &#39;/../&#39;); require_once &#39;vendor/autoload.php&#39;; $container = require &#39;config/container.php&#39;; $application = new Application(&#39;mwop.net&#39;); $application-&amp;gt;setCommandLoader(new ContainerCommandLoader($container, [ &#39;asset:copy-symlinks&#39; =&amp;gt; Console\CopyAssetSymlinks::class, &#39;asset:create-symlinks&#39; =&amp;gt; Console\CreateAssetSymlinks::class, &#39;asset:use-dist-templates&#39; =&amp;gt; Console\UseDistTemplates::class, &#39;blog:clear-cache&#39; =&amp;gt; Blog\Console\ClearCache::class, &#39;blog:feed-generator&#39; =&amp;gt; Blog\Console\FeedGenerator::class, &#39;blog:generate-search-data&#39; =&amp;gt; Blog\Console\GenerateSearchData::class, &#39;blog:seed-db&#39; =&amp;gt; Blog\Console\SeedBlogDatabase::class, &#39;blog:tag-cloud&#39; =&amp;gt; Blog\Console\TagCloud::class, &#39;clear-cache&#39; =&amp;gt; Console\ClearCache::class, &#39;github:fetch-activity&#39; =&amp;gt; Github\Console\Fetch::class, &#39;homepage-feeds&#39; =&amp;gt; Console\FeedAggregator::class, ])); $application-&amp;gt;setDefaultCommand(&#39;list&#39;); $application-&amp;gt;run();  Source</description>
    </item>
    
    <item>
      <title>Logical Operator and Operator Precedence</title>
      <link>https://arueckauer.github.io/posts/2019/10/logical-operator-and-operator-precedence/</link>
      <pubDate>Thu, 17 Oct 2019 09:20:19 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/10/logical-operator-and-operator-precedence/</guid>
      <description>@MichalBundyra tweeted yesterday:
 TIL &amp;amp;&amp;amp; and AND are not the same&amp;hellip; https://3v4l.org/dVVYc Thanks @geerteltink
 Honestly, I never use(d) and. But it is interesting to learn that there is an actual difference and not just a flavor.
Michal compares the output of and and &amp;amp;&amp;amp;.
&amp;lt;?php $a = 2 and 3; $b = 2 &amp;amp;&amp;amp; 3; var_dump($a, $b);  Result int(2) bool(true)  Wait what?
Logical Operator &amp;ldquo;and&amp;rdquo; and &amp;ldquo;&amp;amp;&amp;amp;&amp;rdquo; are not identical Logical Operators The documentation for the Logical Operators states:</description>
    </item>
    
    <item>
      <title>MySQL utf8mb4 Unicode</title>
      <link>https://arueckauer.github.io/posts/2019/08/mysql-utf8mb4-unicode/</link>
      <pubDate>Tue, 06 Aug 2019 16:15:08 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/08/mysql-utf8mb4-unicode/</guid>
      <description>In MySQL UTF-8 does not actually mean UTF-8. If you&#39;re curious to see why, there is an excellent post by Mathias explaining in detail why you should choose utf8mb4 over utf8.
While Mathias nicely covers the upgrade and configuration for MySQL 5.5.3+ on a Unix-Like system, I needed to configure MySQL 8.0.15 on Windows. Now, I won&#39;t tell the whole story of how I finally ended up with this configuration, leaving this just here for my future self.</description>
    </item>
    
    <item>
      <title>JSON-RPC call as Invoke-WebRequest</title>
      <link>https://arueckauer.github.io/posts/2019/08/json-rpc-call-as-invoke-webrequest/</link>
      <pubDate>Mon, 05 Aug 2019 16:56:17 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/08/json-rpc-call-as-invoke-webrequest/</guid>
      <description>Lately I needed to execute a JSON-RPC call, but had neither Postman nor Insomnia available. I wondered, if Invoke-WebRequest could do the job.
Requesting the SMD is as simple as:
Invoke-WebRequest -Uri &#39;https://localhost/api/json-rpc/authentication&#39;  Now I needed to send a POST request with some parameters. That needed some further research. After some trial and error I ended up with the following.
$Body = @{ jsonrpc = &#39;2.0&#39;; method = &#39;authenticate&#39;; params = @{ username = &#39;arueckauer&#39;; password = &#39;F^YgtU)p9Pd3ANTqm@F^sNWFSf9PU}OCg0N0xCC&amp;amp;C8P&amp;gt;=x^6)Hasdh]HHtXQ#dLg&#39; }; id = [guid]::NewGuid() } | ConvertTo-Json Invoke-WebRequest -Uri &#39;https://localhost/api/json-rpc/authentication&#39; -Method &#39;POST&#39; -Body $Body  With the help of [guid]::NewGuid() a new UUIDv4 is created for each request.</description>
    </item>
    
    <item>
      <title>Console Commands in an Expressive Applicaton</title>
      <link>https://arueckauer.github.io/posts/2019/07/console-commands-in-an-expressive-applicaton/</link>
      <pubDate>Thu, 04 Jul 2019 16:09:13 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/07/console-commands-in-an-expressive-applicaton/</guid>
      <description>In a current customer project, I needed the ability to run commands from the CLI.
Symfony provides a console component which is, among others, used by zendframework/zend-expressive-tooling. The documentation got me off to a quick start and I got my first Hello command running within minutes.
I wanted to provide a re-usable package, where the implementation can provide the definition of a command list.
Since I am not using the package within a Symfony application, I needed somehow access to the Service Container of the Expressive application.</description>
    </item>
    
    <item>
      <title>Format Seconds as Time in PHP</title>
      <link>https://arueckauer.github.io/posts/2019/06/format-seconds-as-time-in-php/</link>
      <pubDate>Fri, 28 Jun 2019 09:04:39 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/format-seconds-as-time-in-php/</guid>
      <description>Somewhat over ten years ago I was working on a project, where we measured execution time and memory consumption of PHP scripts. To display the execution time in a human-readable way, we used a function to format the timestamp provided by microtime().
&amp;lt;?php class Application__Helper_Timer { /** * Calculates the execution time of a script * @param float $executionTime * @return string */ public static function formatExecutionTime($executionTime) { $seconds = $this-&amp;gt;executionTime; $hours = 0; $minutes = 0; while (($seconds - 3600) &amp;gt; 0) { $hours++; $seconds -= 3600; } while (($seconds - 60) &amp;gt; 0) { $minutes++; $seconds -= 60; } if (1 === strlen((string) $hours)) { $hours = &#39;0&#39; .</description>
    </item>
    
    <item>
      <title>Intermediate Status</title>
      <link>https://arueckauer.github.io/posts/2019/06/intermediate-status/</link>
      <pubDate>Mon, 17 Jun 2019 16:45:52 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/intermediate-status/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D25
 25 % of my #100DaysOfCode and #100DaysOfBlogging challenges are completed. Time for an intermediate status review.
Just do it As mentioned in my starting post, I wanted this to be a fun and learning experience. I am very happy to see that I&#39;ve reached all of my goals so far. My greatest concern was that I would get tired of writing (almost) every day.</description>
    </item>
    
    <item>
      <title>Robot Simulator Chapter 2</title>
      <link>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</link>
      <pubDate>Sat, 15 Jun 2019 20:57:36 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D24
 After a mentor left some feedback:
 I like that you&#39;ve split out the direction and position. I think you can go a bit further though.
 I went back to the drawing board. 😊 Seriously, I read the feedback on my mobile and let the thought process do its work. Then I took pen and paper and outlined an improved structure.</description>
    </item>
    
    <item>
      <title>Robot Simulator</title>
      <link>https://arueckauer.github.io/posts/2019/06/robot-simulator/</link>
      <pubDate>Fri, 14 Jun 2019 21:30:50 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D23
 Instructions Today&#39;s challenge is to write a robot simulator. A robot is placed on a hypothetical infinite grid phasing either north, east, south or west. It has three possible movements:
 turn right, turn left and advance.  A robot can also follow instructions on how to proceed.
  The letter-string &amp;ldquo;RAALAL&amp;rdquo; means:  Turn right Advance twice Turn left Advance once Turn left yet again   Say a robot starts at {7, 3} facing north.</description>
    </item>
    
    <item>
      <title>Use return types as much as possible?</title>
      <link>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</link>
      <pubDate>Thu, 13 Jun 2019 23:42:55 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D22
 A mentor commented on my yesterday&#39;s solution to the Grade School exercise.
 Good solution
Awesome! using strict_types
It&#39;s approved for me but try to use return types as much as possible, I&#39;m missing initGradeIfItDoesNotExist
 This post will reflect some of my personal thoughts. Since the mentor&#39;s suggestion could be just some personal preference, I will not name the mentor.</description>
    </item>
    
    <item>
      <title>Grade School</title>
      <link>https://arueckauer.github.io/posts/2019/06/grade-school/</link>
      <pubDate>Wed, 12 Jun 2019 23:32:10 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/grade-school/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D21
 This Exercism exercise is straight forward.
An extract from the instructions:
 Given students&amp;rsquo; names along with the grade that they are in, create a roster for the school.
In the end, you should be able to:
 Add a student&#39;s name to the roster for a grade Get a list of all students enrolled in a grade Get a sorted list of all students in all grades.</description>
    </item>
    
    <item>
      <title>Meetup (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</link>
      <pubDate>Tue, 11 Jun 2019 21:29:52 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D20
 Next up in the PHP sidetrack is the Meetup exercise.
A function is provided with the arguments
 (int) year, (int) month, (string) descriptor and (string) weekday  and expected to process the input and return an instance of DateTime with the corresponding date.
While year, month and weekday are an exact representation of their values, the descriptor is a bit more complicated.</description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</link>
      <pubDate>Mon, 10 Jun 2019 21:31:48 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D19
 Today I am solving the Sieve of Eratosthenes side exercise of the Exercism PHP track.
 In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2.</description>
    </item>
    
    <item>
      <title>120(ish) HTML Elements</title>
      <link>https://arueckauer.github.io/posts/2019/06/120ish-html-elements/</link>
      <pubDate>Sat, 08 Jun 2019 20:32:34 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/120ish-html-elements/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D18
 Bruce Lawson gave an outstanding keynote called How to make Loveliness: an HTML Treasure Hunt at the IPC 2019.
He shared that most 2-year-olds can say about 100 words and with 2 ½ years they know close to 300 words.
One of his challenges was to
 Learn the semantics of HTML. There are 120(ish) elements, that&#39;s all!</description>
    </item>
    
    <item>
      <title>To JWT or not to JWT</title>
      <link>https://arueckauer.github.io/posts/2019/06/to-jwt-or-not-to-jwt/</link>
      <pubDate>Fri, 07 Jun 2019 19:34:43 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/to-jwt-or-not-to-jwt/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D17
 At the IPC 2019 Authentication and Authorization was one of the two most interesting topics (event sourcing being the second). Sessions were comparing the usage of traditional authentication with the usage of JWT, maybe the future technology WebAuthn requiring no passwords for registration or login processes, using an identity provider instead of implementing our own processes over and over again, and not so quite common applications of web tokens - like physically opening doors.</description>
    </item>
    
    <item>
      <title>IPC 2019: Day Three</title>
      <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-three/</link>
      <pubDate>Thu, 06 Jun 2019 20:49:38 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-three/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D16
 Pragmatic Queue Processing at Scale By Arne Blankerts, Principal Consultant at thePHP.cc and Sebastian Heuer, Developer Advocate at kartenmacherei.de
Arne and Sebastian deliver messages from real world problems they tackled together. It&#39;s not the first presentation of the duo. These sessions belong to the highlights of the conference (Casino night is still #1 😋). The talk gave a wonderful narrative overview of queue pressing, further readings of what might be of interest as well as learnings from their experience.</description>
    </item>
    
    <item>
      <title>IPC 2019: Day Two</title>
      <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-two/</link>
      <pubDate>Wed, 05 Jun 2019 21:32:35 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-two/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D15
 I have to say that I am surprised by the overall high-quality sessions. This is one of the best conferences I attended. Thanks to all the speakers and their effort and time they put into preparation. You rock!
Modern SQL: Evolution of a Dinosaur By Markus Winand, &amp;ldquo;SQL renaissance ambassador&amp;rdquo;, independent author, trainer, and consultant on all things SQL</description>
    </item>
    
    <item>
      <title>IPC 2019: Day One</title>
      <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-one/</link>
      <pubDate>Tue, 04 Jun 2019 22:53:29 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-one/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D14
 This was a great first day
How to make Loveliness: an HTML Treasure Hunt Keynote by Bruce Lawson, one of the editors of the W3C’s HTML5.3 specification
To me, this was the best keynote I have ever attended. He presented a topic that could easily be boring and dry in a way that captured the audience&#39;s (well at least my) full attention.</description>
    </item>
    
  </channel>
</rss>