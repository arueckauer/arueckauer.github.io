<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Andi Rückauer</title>
        <link>https://arueckauer.github.io/posts/</link>
        <description>Recent content in Posts on Andi Rückauer</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Mon, 20 May 2019 22:00:00 +0200</lastBuildDate>
        <atom:link href="https://arueckauer.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Day 1: Getting started with Terraform</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</link>
            <pubDate>Mon, 20 May 2019 22:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</guid>
            <description>This year I attended the Global Azure Bootcamp in Zürich. It was a very well organized conference with lots of interesting sessions. I definitely will go again next year!
One of my favorites was Terraform and Azure - How to GitOps by Sandro Koechli and Jörn Stenkamp. They introduced the idea of managing infrastructure as code with Git. This concept was new to me and very exciting. Unfortunately time did not allow for some demo.</description>
            <content type="html"><![CDATA[<p>This year I attended the <a href="https://www.zurich.azurebootcamp.net/" target="_blank">Global Azure Bootcamp in Zürich</a>. It was a very well organized conference with lots of interesting sessions. I definitely will go again next year!</p>

<p>One of my favorites was <em><a href="https://speakerdeck.com/azurezurich/gabc2019-terraform-and-azure-how-to-gitops-by-sandro-kochli-and-jorn-stenkamp" target="_blank">Terraform and Azure - How to GitOps</a></em> by <a href="https://www.linkedin.com/in/sandro-koechli/" target="_blank">Sandro Koechli</a> and <a href="https://www.linkedin.com/in/joern-stenkamp-732b58100/" target="_blank">Jörn Stenkamp</a>. They introduced the idea of managing infrastructure as code with Git. This concept was new to me and very exciting. Unfortunately time did not allow for some demo.</p>

<p>Today I worked through the <a href="https://learn.hashicorp.com/terraform/getting-started/build" target="_blank">Getting Started</a> chapter for <a href="https://www.terraform.io/" target="_blank">Terraform</a>. I set up an AWS account and wrote my first Terraform configuration. Via the CLI an infrastructure can be initialized, applied, changed and destroyed (among other commands like plan and show).</p>

<p>I gained a basic understanding of how Terraform works. The configuration of <a href="https://www.terraform.io/docs/providers/index.html" target="_blank">Providers</a> and Resources is still very overwhelming.</p>
]]></content>
        </item>
        
        <item>
            <title>100 Days of Code</title>
            <link>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</link>
            <pubDate>Mon, 20 May 2019 06:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</guid>
            <description>Lately quite a few posts on the #100DaysOfCode challenge have come up on my Twitter timeline. I was curious what it is all about. So, I started to do some research and I really liked what I was reading.
In this post I am writing about my own commitment to the challenge. If you want to know more about it yourself, start reading the initial article on medium or go straight to the official website.</description>
            <content type="html"><![CDATA[

<p>Lately quite a few posts on the <a href="https://twitter.com/search?q=%23100DaysOfCode" target="_blank">#100DaysOfCode</a> challenge have come up on my Twitter timeline. I was curious what it is all about. So, I started to do some research and I really liked what I was reading.</p>

<p>In this post I am writing about my own commitment to the challenge. If you want to know more about it yourself, start reading the initial article on <a href="https://medium.freecodecamp.org/join-the-100daysofcode-556ddb4579e4" target="_blank">medium</a> or go straight to the <a href="https://www.100daysofcode.com/" target="_blank">official website</a>.</p>

<h2 id="official-rules">Official rules</h2>

<p>The <a href="https://www.100daysofcode.com/" target="_blank">#100DaysOfCode</a> challenge outlines two main rules:</p>

<blockquote>
<ol>
<li>Code minimum an hour every day for the next 100 days.</li>
<li>Tweet your progress every day with the #100DaysOfCode hashtag.</li>
</ol>
</blockquote>

<p>It also talks about other <a href="https://www.100daysofcode.com/rules/" target="_blank">considerations</a> like reaching out to others who are also doing the challenge or keeping a <a href="https://github.com/Kallaway/100-days-of-code" target="_blank">100 days journal</a>.</p>

<h2 id="my-rules">My rules</h2>

<p>My personal motivation is to keep learning and dive into subjects other than what is required at my current job. I have a broad interest and would like to use this challenge to study, experience and learn. To accomplish these goals, I will adapt the rules a little.</p>

<h3 id="1-code-almost-every-day-for-the-next-100-days">1. Code (almost) every day for the next 100 days</h3>

<p>With <em>almost</em> I am not intending to create a loophole or justify slacking off. Sunday is a day of rest where I do not work and try to spend time with my family and spiritual matters. So, I am committing to 6 days of coding a week.</p>

<p>On a coding day I do not require myself to spend at least one hour on the challenge. Rather I am committing myself to making meaningful use of the time. It should be first a learning experience (even challenging) and second fun as well.</p>

<h3 id="2-blog-about-it">2. Blog about it</h3>

<p>This might be a second challenge I am trying to accomplish at the same time. Instead of just tweet about it, I want to record my learnings in a blog post. The latter is more of a habit-forming challenge than the initial.</p>

<h2 id="topic">Topic</h2>

<p>One of the most productive factors for me is focus. Being able to focus on just one task helps me work very effectively. In more of a natural way I am living a clean desk, zero inbox and other policies or principles.</p>

<p>Just recently I switched from the old beloved <a href="https://www.wunderlist.com/" target="_blank">Wunderlist</a> to a new and shiny <a href="https://todo.microsoft.com/" target="_blank">Microsoft To-Do</a> to keep track of ideas and work that needs to be done. In a list called <em>Play.Fail.Succeed.</em> I keep a collection of topics, technologies, methods and so on which I want to study and learn more about it.</p>

<p>Secondly, I use <a href="https://getpocket.com/" target="_blank">Pocket</a> to keep track of resources of interest, articles I want to read later and so forth.</p>

<p>Both tools provide excellent resources for my #100DaysOfCode challenge.</p>

<p>In this challenge I will focus on DevOps. I am very interested in automating things and decrease the amount of time spent in repetitive tasks. By doing this challenge I hope to advance my knowledge and skills greatly. I want to gain a better understanding of</p>

<ul>
<li>Provisioning,</li>
<li>Orchestration,</li>
<li>Configuration Management,</li>
<li>Deployment and</li>
<li>Automation in general.</li>
</ul>

<h2 id="commitment">Commitment</h2>

<p>Starting today I&rsquo;m publicly committing to the 100DaysOfCode Challenge with the here outlined rules! Learn more and join me!</p>

<p>Gude Laune</p>
]]></content>
        </item>
        
        <item>
            <title>From Flat to Modular</title>
            <link>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</link>
            <pubDate>Fri, 17 May 2019 06:30:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</guid>
            <description>Transforming of a flat application structure to a modular one in a Zend Expressive project
In an Expressive project I ran into the issue, where the application grew much larger than initially expected. How about that? The project got initialized with a flat code structure, which is the default selection of the Expressive Skeleton. Flat basically means the application is organized in a single module in contrast to endless modules in the modular structure.</description>
            <content type="html"><![CDATA[

<p><em>Transforming of a flat application structure to a modular one in a Zend Expressive project</em></p>

<p>In an <a href="https://docs.zendframework.com/zend-expressive/" target="_blank">Expressive</a> project I ran into the issue, where the application grew much larger than initially expected. How about that? The project got initialized with a flat code structure, which is the default selection of the <a href="https://github.com/zendframework/zend-expressive-skeleton" target="_blank">Expressive Skeleton</a>. Flat basically means the application is organized in a single module in contrast to endless modules in the modular structure. It also means not only having separate modules but also separate namespaces. This makes handling class names much easier.</p>

<p>Looking back on it now I tend to always choose a modular structure. The only use case for a flat structure would be a micro application with very little backend code. Even then it is questionable as to why not using a modular structure, since the difference between the two are not that big and converting the structure later on is much more effort. But I am getting ahead of myself.</p>

<p>So the single module horded a ton of classes with their factories. This got quite heavy and sometimes confusing. To clear up all the confusion I decided to convert the code structure from flat to modular.</p>

<h2 id="flat-vs-modular-the-comparison">Flat vs. modular: the comparison</h2>

<p>I could not find any documentation or user contributions on how to convert the structure. To find out what the differences are, I decided to create two new projects: one with a flat and one with a modular structure and then compare the two.</p>

<p>I create a new project with flat code structure. All default selections were chosen.</p>

<pre><code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive-flat
</code></pre>

<p>For modular structure first question <em>What type of installation would you like?</em> was answered with 3 - Modular. For all other options the default selections where chosen.</p>

<pre><code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive-modular
</code></pre>

<p><img src="/img/from-flat-to-modular/create-project-with-modular-code-structure.png" alt="Create project with modular code structure" /></p>

<p>The structural differences of the two projects are (1) the location of the source file within the <code>App</code> module, (2) a template folder and (3) the autoloading configuration.</p>

<table>
<thead>
<tr>
<th></th>
<th>Flat</th>
<th>Modular</th>
</tr>
</thead>

<tbody>
<tr>
<td>Source App Module</td>
<td><code>src/App</code></td>
<td><code>src/App/src</code></td>
</tr>

<tr>
<td>Template Ordner</td>
<td><em>n/a</em></td>
<td><code>src/App/templates</code></td>
</tr>

<tr>
<td>Autoload configuration</td>
<td><code>&quot;App\\&quot;: &quot;src/App/&quot;</code></td>
<td><code>&quot;App\\&quot;: &quot;src/App/src/&quot;</code></td>
</tr>
</tbody>
</table>

<h2 id="making-the-transition">Making the transition</h2>

<p>Consequently, I needed to make the following changes to convert the project structure:</p>

<ol>
<li>Move contents of <code>src/App</code> to <code>src/App/src</code></li>
<li><em>Optional:</em> Move the templates from within the <code>App</code> folder to <code>src /App/templates</code> and adjust the configured templates path (in my case in <code>config/autoload/application.global.php</code>)</li>
<li>Update the autoload configuration in <code>composer.json</code> to <code>&quot;App\\&quot;: &quot;src/App/src/&quot;</code></li>
<li>Execute <code>composer dump-autoload</code> to update the autoloading classes</li>
</ol>

<p>That&rsquo;s it, the transition is made.</p>

<p>But my initial issue was not solved. I went ahead and re-organized the <code>App</code> module, moving various folders into their own module. For each folder I repeated the following steps.</p>

<ol>
<li>Create a new module <code>$ composer expressive module:create {ModuleName}</code></li>
<li>Moved classes from <code>src/App/src/{ModuleName}/</code> to <code>src/{ModuleName}/src/</code></li>
<li>Updated namespace of classes and imports from <code>App\{ModuleName}</code> to <code>{ModuleName}</code></li>
<li>Moved dependencies definitions from <code>backend/App/src/ConfigProvider.php</code> to <code>backend/{ModuleName}/src/ConfigProvider.php</code></li>
</ol>

<p>Tadaa! Now the setup is much cleaner and simpler. Mission accomplished.</p>

<p>Gude Laune!</p>
]]></content>
        </item>
        
        <item>
            <title>Just do it</title>
            <link>https://arueckauer.github.io/posts/2019/05/just-do-it/</link>
            <pubDate>Thu, 16 May 2019 13:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/just-do-it/</guid>
            <description>The idea of starting my own blog has accompanied me for years. Since I was afraid, it would not see regular updates and quickly become a lonesome tumbleweed, I&amp;rsquo;ve never put it to action.
However I could never set aside having a tool to record and contain my thought. So here goes nothing.
Reasons to start and (not) to end My main motivation of starting this blog is to have a</description>
            <content type="html"><![CDATA[

<p>The idea of starting my own blog has accompanied me for years. Since I was afraid, it would not see regular updates and quickly become a lonesome tumbleweed, I&rsquo;ve never put it to action.</p>

<p>However I could never set aside having a tool to record and contain my thought. So here goes nothing.</p>

<h2 id="reasons-to-start-and-not-to-end">Reasons to start and (not) to end</h2>

<p>My main motivation of starting this blog is to have a</p>

<ul>
<li>journal to record my personal progress in software-development and possibly other topics of interest,</li>
<li>notepad for my learnings to go back to and</li>
<li>container for thoughts in gerneral.</li>
</ul>

<p>These are purely personal reasons and writing for an audience other than myself is not a priority at the moment. Also I am not getting payed for it, so this should be fun!</p>

<blockquote>
<p>Can we just have some fun?</p>
</blockquote>

<p><em>David Picciuto</em> from <a href="https://makesomething.com/" target="_blank">Make Something</a></p>

<p>I definitely do not want to pressure myself to create content on a defined regularity or to set any expectations on quality (which will be difficult).</p>

<h2 id="do-it">Do it</h2>

<p><a href="https://en.wikipedia.org/wiki/Spencer_W._Kimball" target="_blank">Spencer W. Kimball</a>, an American business, civic, and religious leader, is said to have had a sign on his desk saying:</p>

<blockquote>
<p>Do it. Do it right. Do it right now.</p>
</blockquote>

<p>What I believe he meant with it is: The opportunity to get something accomplished will never be better or easier than right now. Putting something off will make it more difficult as time passes.</p>

<p>I&rsquo;m really looking forward to this adventure, Gude Laune!</p>
]]></content>
        </item>
        
    </channel>
</rss>
