<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Andi Rückauer</title>
        <link>https://arueckauer.github.io/posts/</link>
        <description>Recent content in Posts on Andi Rückauer</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 29 Apr 2020 09:30:00 +0200</lastBuildDate>
        <atom:link href="https://arueckauer.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>How to Setup passwordless SSH Login to Nine Server</title>
            <link>https://arueckauer.github.io/posts/2020/04/how-to-setup-passwordless-ssh-login-to-nine-server/</link>
            <pubDate>Wed, 29 Apr 2020 09:30:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2020/04/how-to-setup-passwordless-ssh-login-to-nine-server/</guid>
            <description>Add fingerprint to known_hosts andi@arueckauer:~$ ssh-keyscan -H arueckauer01.nine.ch &amp;gt;&amp;gt; ~/.ssh/known_hosts  Add key to server andi@arueckauer:~$ cat ~/.ssh/id_rsa.pub | ssh www-data@arueckauer01.nine.ch &#39;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&#39; www-data@arueckauer01.nine.ch&#39;s password:  SSH Configuration ~/.ssh/config
Host arueckauer01 arueckauer01.nine.ch HostName arueckauer01.nine.ch IdentityFile ~/.ssh/id_rsa User www-data LocalForward 3310 localhost:3306  Alias ~/.bashrc
alias arueckauer01=&#39;ssh arueckauer01&#39;  </description>
            <content type="html"><![CDATA[<h2 id="add-fingerprint-to-known_hosts">Add fingerprint to <code>known_hosts</code></h2>
<pre><code class="language-bash">andi@arueckauer:~$ ssh-keyscan -H arueckauer01.nine.ch &gt;&gt; ~/.ssh/known_hosts
</code></pre>
<h2 id="add-key-to-server">Add key to server</h2>
<pre><code class="language-bash">andi@arueckauer:~$ cat ~/.ssh/id_rsa.pub | ssh www-data@arueckauer01.nine.ch 'cat &gt;&gt; ~/.ssh/authorized_keys'
www-data@arueckauer01.nine.ch's password:
</code></pre>
<h2 id="ssh-configuration">SSH Configuration</h2>
<p><code>~/.ssh/config</code></p>
<pre><code class="language-bash">Host arueckauer01 arueckauer01.nine.ch
    HostName arueckauer01.nine.ch
    IdentityFile ~/.ssh/id_rsa
    User www-data
    LocalForward 3310 localhost:3306
</code></pre>
<h2 id="alias">Alias</h2>
<p><code>~/.bashrc</code></p>
<pre><code class="language-bash">alias arueckauer01='ssh arueckauer01'
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Generate SSH Keys for Windows System account</title>
            <link>https://arueckauer.github.io/posts/2020/04/generate-ssh-keys-for-windows-system-account/</link>
            <pubDate>Tue, 21 Apr 2020 10:27:32 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2020/04/generate-ssh-keys-for-windows-system-account/</guid>
            <description>Windows services usually run under the System account. In cases where a service needs SSH access like cloning a Git repository, a SSH key pair might be required. But how do you generate these keys for the System account?
The Sysinternals Process Utilities provide PowerShell tools. Among these is PsExec, which can be used to invoke a process on a remote machine. But it also allows executing a process on the same machine under a different user.</description>
            <content type="html"><![CDATA[<p>Windows services usually run under the System account. In cases where a service needs SSH access like cloning a Git repository, a SSH key pair might be required. But how do you generate these keys for the System account?</p>
<p>The Sysinternals Process Utilities provide PowerShell tools. Among these is <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psexec">PsExec</a>, which can be used to invoke a process on a remote machine. But it also allows executing a process on the same machine under a different user. A detailed description on how to download and use this tool is provided in the above linked article.</p>
<h2 id="start-a-powershell-in-the-system-account">Start a PowerShell in the System account</h2>
<p>For our purpose, we open an elevated PowerShell and start another PowerShell which is then run with the System account.</p>
<pre><code class="language-powershell">PsExec.exe -ids powershell.exe
</code></pre>
<ul>
<li><code>-i</code> Runs the process in the console session</li>
<li><code>-d</code> Start the process non-interactive - do not wait for the process to end</li>
<li><code>-s</code> Runs the process in the System account</li>
</ul>
<h2 id="generate-ssh-keys">Generate SSH keys</h2>
<p>In the new PowerShell keys can be generated as usual, e.g.</p>
<pre><code class="language-powershell">ssh-keygen.exe -t rsa
</code></pre>
<h2 id="location-of-systems-account-ssh-keys">Location of System's account SSH keys</h2>
<p>Other than human user accounts, the user's home path is not located in <code>C:\Users</code>. The SSH keys of the System account are in <code>C:\WINDOWS\system32\config\systemprofile\.ssh</code>. Since other users cannot access this path, it is a good idea to copy the public key now to a path which is accessible.</p>
]]></content>
        </item>
        
        <item>
            <title>How to minimize Signal desktop app to system try</title>
            <link>https://arueckauer.github.io/posts/2020/01/how-to-minimize-signal-desktop-app-to-system-try/</link>
            <pubDate>Mon, 20 Jan 2020 10:45:25 +0100</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2020/01/how-to-minimize-signal-desktop-app-to-system-try/</guid>
            <description>Unfortunately the Signal desktop app does not offer any configuration in the GUI to allow minimization to the system tray. But there are start parameters, with which the application behavior can be controlled.
 --use-tray-icon will minimize the app to the system tray when hitting the close button --start-in-tray will start the app already minimized to the tray  To use these features, by adding the wanted parameters to the shortcut.</description>
            <content type="html"><![CDATA[<p>Unfortunately the Signal desktop app does not offer any configuration in the GUI to allow minimization to the system tray. But there are start parameters, with which the application behavior can be controlled.</p>
<ul>
<li><code>--use-tray-icon</code> will minimize the app to the system tray when hitting the close button</li>
<li><code>--start-in-tray</code> will start the app already minimized to the tray</li>
</ul>
<p>To use these features, by adding the wanted parameters to the shortcut.</p>
<p><a href="https://github.com/signalapp/Signal-Desktop/issues/1480#issuecomment-369331290">Source</a></p>
]]></content>
        </item>
        
        <item>
            <title>Stream Zip in Zend Expressive</title>
            <link>https://arueckauer.github.io/posts/2019/12/stream-zip-in-zend-expressive/</link>
            <pubDate>Wed, 11 Dec 2019 14:16:25 +0100</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/12/stream-zip-in-zend-expressive/</guid>
            <description>A feature request in a customer project was to zip multiple files</description>
            <content type="html"><![CDATA[<p>A feature request in a customer project was to zip multiple files</p>
]]></content>
        </item>
        
        <item>
            <title>self vs. static</title>
            <link>https://arueckauer.github.io/posts/2019/11/self-vs.-static/</link>
            <pubDate>Mon, 04 Nov 2019 06:41:23 +0100</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/11/self-vs.-static/</guid>
            <description>I get confused with self and static. Then I research and learn it. Then I forget it again. And so on.
TLDR  self refers to the same class in which the new keyword is actually written.
static, in PHP 5.3&#39;s late static bindings, refers to whatever class in the hierarchy you called the method on.
 By BoltClock on Stack Overflow
An example &amp;lt;?php class Foo { public function __invoke() { echo &#39;self: &#39; .</description>
            <content type="html"><![CDATA[<p>I get confused with <code>self</code> and <code>static</code>. Then I research and learn it. Then I forget it again. And so on.</p>
<h2 id="tldr">TLDR</h2>
<blockquote>
<p><code>self</code> refers to the same class in which the new keyword is actually written.</p>
<p><code>static</code>, in PHP 5.3's late static bindings, refers to whatever class in the hierarchy you called the method on.</p>
</blockquote>
<p><a href="https://stackoverflow.com/a/5197655/9364246">By BoltClock on Stack Overflow</a></p>
<h2 id="an-example">An example</h2>
<pre><code class="language-php">&lt;?php

class Foo
{
    public function __invoke()
    {
        echo 'self: ' . self::class . PHP_EOL;
        echo 'static: ' . static::class . PHP_EOL;
        echo 'get_class(): ' . get_class() . PHP_EOL;
        echo 'get_class($this): ' . get_class($this) . PHP_EOL;
        echo 'get_called_class(): ' . get_called_class() . PHP_EOL;
    }
}

class Bar extends Foo
{
}

(new Bar())();
</code></pre>
<p>Output</p>
<pre><code>self: Foo
static: Bar
get_class(): Foo
get_class($this): Bar
get_called_class(): Bar
</code></pre>
<p>Test it on <a href="https://3v4l.org/PpZA6">3v4l.org</a>.</p>
<h2 id="see-also">See also</h2>
<ul>
<li><a href="https://www.leaseweb.com/labs/2014/04/static-versus-self-php/">Using static:: versus self:: in object oriented PHP</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Console Commands in an Expressive Applicaton II</title>
            <link>https://arueckauer.github.io/posts/2019/10/console-commands-in-an-expressive-applicaton-ii/</link>
            <pubDate>Fri, 18 Oct 2019 07:23:59 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/10/console-commands-in-an-expressive-applicaton-ii/</guid>
            <description>This is an addition to my previous post Console Commands in an Expressive Applicaton. It provides two more real-world examples for Console Commands in Expressive applications.
mwop&#39;s blog #!/usr/bin/env php &amp;lt;?php /** * @license http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause * @copyright Copyright (c) Matthew Weier O&#39;Phinney */ namespace Mwop; use Symfony\Component\Console\Application; use Symfony\Component\Console\CommandLoader\ContainerCommandLoader; chdir(__DIR__ . &#39;/../&#39;); require_once &#39;vendor/autoload.php&#39;; $container = require &#39;config/container.php&#39;; $application = new Application(&#39;mwop.net&#39;); $application-&amp;gt;setCommandLoader(new ContainerCommandLoader($container, [ &#39;asset:copy-symlinks&#39; =&amp;gt; Console\CopyAssetSymlinks::class, &#39;asset:create-symlinks&#39; =&amp;gt; Console\CreateAssetSymlinks::class, &#39;asset:use-dist-templates&#39; =&amp;gt; Console\UseDistTemplates::class, &#39;blog:clear-cache&#39; =&amp;gt; Blog\Console\ClearCache::class, &#39;blog:feed-generator&#39; =&amp;gt; Blog\Console\FeedGenerator::class, &#39;blog:generate-search-data&#39; =&amp;gt; Blog\Console\GenerateSearchData::class, &#39;blog:seed-db&#39; =&amp;gt; Blog\Console\SeedBlogDatabase::class, &#39;blog:tag-cloud&#39; =&amp;gt; Blog\Console\TagCloud::class, &#39;clear-cache&#39; =&amp;gt; Console\ClearCache::class, &#39;github:fetch-activity&#39; =&amp;gt; Github\Console\Fetch::class, &#39;homepage-feeds&#39; =&amp;gt; Console\FeedAggregator::class, ])); $application-&amp;gt;setDefaultCommand(&#39;list&#39;); $application-&amp;gt;run();  Source</description>
            <content type="html"><![CDATA[<p>This is an addition to my previous post <a href="https://arueckauer.github.io/posts/2019/07/console-commands-in-an-expressive-applicaton/">Console Commands in an Expressive Applicaton</a>. It provides two more real-world examples for Console Commands in Expressive applications.</p>
<h2 id="mwops-blog">mwop's blog</h2>
<pre><code class="language-php">#!/usr/bin/env php
&lt;?php
/**
 * @license http://opensource.org/licenses/BSD-2-Clause BSD-2-Clause
 * @copyright Copyright (c) Matthew Weier O'Phinney
 */

namespace Mwop;

use Symfony\Component\Console\Application;
use Symfony\Component\Console\CommandLoader\ContainerCommandLoader;

chdir(__DIR__ . '/../');
require_once 'vendor/autoload.php';

$container = require 'config/container.php';

$application = new Application('mwop.net');
$application-&gt;setCommandLoader(new ContainerCommandLoader($container, [
    'asset:copy-symlinks'       =&gt; Console\CopyAssetSymlinks::class,
    'asset:create-symlinks'     =&gt; Console\CreateAssetSymlinks::class,
    'asset:use-dist-templates'  =&gt; Console\UseDistTemplates::class,
    'blog:clear-cache'          =&gt; Blog\Console\ClearCache::class,
    'blog:feed-generator'       =&gt; Blog\Console\FeedGenerator::class,
    'blog:generate-search-data' =&gt; Blog\Console\GenerateSearchData::class,
    'blog:seed-db'              =&gt; Blog\Console\SeedBlogDatabase::class,
    'blog:tag-cloud'            =&gt; Blog\Console\TagCloud::class,
    'clear-cache'               =&gt; Console\ClearCache::class,
    'github:fetch-activity'     =&gt; Github\Console\Fetch::class,
    'homepage-feeds'            =&gt; Console\FeedAggregator::class,
]));
$application-&gt;setDefaultCommand('list');
$application-&gt;run();

</code></pre>
<p><a href="https://github.com/weierophinney/mwop.net/blob/master/bin/mwop.net.php">Source</a></p>
<h2 id="zend-framework-3-website">Zend Framework 3 website</h2>
<pre><code class="language-php">#!/usr/bin/env php
&lt;?php
declare(strict_types=1);

use LongTermSupport\Command\FetchRepoVersionDataCommand;
use LongTermSupport\Command\PackageListBuilderCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\CommandLoader\FactoryCommandLoader;

require __DIR__ . '/../vendor/autoload.php';

$container = require __DIR__ . '/../config/container.php';

$loader = new FactoryCommandLoader([
    'lts:build' =&gt; function () use ($container) {
        return $container-&gt;get(PackageListBuilderCommand::class);
    },
    'lts:fetch-tag-data' =&gt; function () use ($container) {
        return $container-&gt;get(FetchRepoVersionDataCommand::class);
    },
]);

$application = new Application();
$application-&gt;setCommandLoader($loader);
$application-&gt;run();

</code></pre>
<p><a href="https://github.com/zendframework/zf3-web/blob/master/bin/zfweb.php">Source</a></p>
]]></content>
        </item>
        
        <item>
            <title>Logical Operator and Operator Precedence</title>
            <link>https://arueckauer.github.io/posts/2019/10/logical-operator-and-operator-precedence/</link>
            <pubDate>Thu, 17 Oct 2019 09:20:19 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/10/logical-operator-and-operator-precedence/</guid>
            <description>@MichalBundyra tweeted yesterday:
 TIL &amp;amp;&amp;amp; and AND are not the same&amp;hellip; https://3v4l.org/dVVYc Thanks @geerteltink
 Honestly, I never use(d) and. But it is interesting to learn that there is an actual difference and not just a flavor.
Michal compares the output of and and &amp;amp;&amp;amp;.
&amp;lt;?php $a = 2 and 3; $b = 2 &amp;amp;&amp;amp; 3; var_dump($a, $b);  Result int(2) bool(true)  Wait what?
Logical Operator &amp;ldquo;and&amp;rdquo; and &amp;ldquo;&amp;amp;&amp;amp;&amp;rdquo; are not identical Logical Operators The documentation for the Logical Operators states:</description>
            <content type="html"><![CDATA[<p><a href="https://twitter.com/MichalBundyra">@MichalBundyra</a> <a href="https://twitter.com/MichalBundyra/status/1184533617600544770">tweeted</a> yesterday:</p>
<blockquote>
<p>TIL &amp;&amp; and AND are not the same&hellip; <a href="https://3v4l.org/dVVYc">https://3v4l.org/dVVYc</a> Thanks <a href="https://twitter.com/geerteltink">@geerteltink</a></p>
</blockquote>
<p>Honestly, I never use(d) <code>and</code>. But it is interesting to learn that there is an actual difference and not just a flavor.</p>
<p>Michal compares the output of <code>and</code> and <code>&amp;&amp;</code>.</p>
<pre><code class="language-php">&lt;?php

$a = 2 and 3;
$b = 2 &amp;&amp; 3;

var_dump($a, $b);
</code></pre>
<h4 id="result">Result</h4>
<pre><code>int(2)
bool(true)
</code></pre>
<p>Wait what?</p>
<h2 id="logical-operator-and-and--are-not-identical">Logical Operator &ldquo;and&rdquo; and &ldquo;&amp;&amp;&rdquo; are not identical</h2>
<h3 id="logical-operators">Logical Operators</h3>
<p>The documentation for the <a href="https://www.php.net/manual/en/language.operators.logical.php">Logical Operators</a> states:</p>
<blockquote>
<p>The reason for the two different variations of &ldquo;and&rdquo; and &ldquo;or&rdquo; operators is that they operate at different precedences. (See Operator Precedence.)</p>
</blockquote>
<h3 id="short-circuiting-operators">Short-circuiting operators</h3>
<pre><code class="language-php">&lt;?php

// foo() will never get called as those operators are short-circuited

$a = (false &amp;&amp; foo());
$b = (false and foo());

var_dump($a, $b);

</code></pre>
<h4 id="result-1">Result</h4>
<pre><code>bool(false)
bool(false)
</code></pre>
<h3 id="-has-a-greater-precedence-than-and">&ldquo;&amp;&amp;&rdquo; has a greater precedence than &ldquo;and&rdquo;</h3>
<pre><code class="language-php">&lt;?php

// The result of the expression (true &amp;&amp; false) is assigned to $c
// Acts like: ($c = (true &amp;&amp; false))
$c = true &amp;&amp; false;

// The constant true is assigned to $d before the &quot;and&quot; operation occurs
// Acts like: (($d = true) and false)
$d = true and false;

var_dump($c, $d);
</code></pre>
<h4 id="result-2">Result</h4>
<pre><code>bool(false)
bool(true)
</code></pre>
<h3 id="operator-precedence">Operator Precedence</h3>
<p>Furthermore, the documentation for <a href="https://www.php.net/manual/en/language.operators.precedence.php">Operator Precedence</a> suggests the usage of parentheses to improve readability.</p>
<blockquote>
<p>The precedence of an operator specifies how &ldquo;tightly&rdquo; it binds two expressions together.</p>
<p>[..]</p>
<p>Use of parentheses, even when not strictly necessary, can often increase readability of the code by making grouping explicit rather than relying on the implicit operator precedence and associativity.</p>
</blockquote>
<h2 id="conclusion">Conclusion</h2>
<p>So, <code>and</code> can lead to unexpected results (unless you really know how it works). On the top of my head, I cannot think of a scenario, where <code>and</code> would be required.</p>
<p>To prevent unwanted surprises, one can either put <code>and</code> comparison in parentheses or even better use the <code>&amp;&amp;</code> operator.</p>
<pre><code class="language-php">&lt;?php

$a = (2 and 3);
$b = 2 &amp;&amp; 3;

var_dump($a, $b);
</code></pre>
<h4 id="result-3">Result</h4>
<pre><code>bool(true)
bool(true)
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>MySQL utf8mb4 Unicode</title>
            <link>https://arueckauer.github.io/posts/2019/08/mysql-utf8mb4-unicode/</link>
            <pubDate>Tue, 06 Aug 2019 16:15:08 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/08/mysql-utf8mb4-unicode/</guid>
            <description>In MySQL UTF-8 does not actually mean UTF-8. If you&#39;re curious to see why, there is an excellent post by Mathias explaining in detail why you should choose utf8mb4 over utf8.
While Mathias nicely covers the upgrade and configuration for MySQL 5.5.3+ on a Unix-Like system, I needed to configure MySQL 8.0.15 on Windows. Now, I won&#39;t tell the whole story of how I finally ended up with this configuration, leaving this just here for my future self.</description>
            <content type="html"><![CDATA[<p>In MySQL UTF-8 does not actually mean UTF-8. If you're curious to see why, there is an excellent <a href="https://mathiasbynens.be/notes/mysql-utf8mb4">post</a> by <a href="https://twitter.com/mathias">Mathias</a> explaining in detail why you should choose utf8mb4 over utf8.</p>
<p>While Mathias nicely covers the upgrade and configuration for MySQL 5.5.3+ on a Unix-Like system, I needed to configure MySQL 8.0.15 on Windows. Now, I won't tell the whole story of how I finally ended up with this configuration, leaving this just here for my future self.</p>
<pre><code class="language-ini">[client]
default-character-set=utf8mb4

[mysql]
default-character-set=utf8mb4
character-set-server=utf8mb4
collation-server=utf8mb4_unicode_ci

</code></pre>
<p>To check the server settings after changes are applied and the MySQL service restarted, I executed&hellip;</p>
<pre><code class="language-sql">SHOW VARIABLES WHERE Variable_name LIKE 'character\_set\_%' OR Variable_name LIKE 'collation%';
</code></pre>
<p>&hellip;with the result being&hellip;</p>
<table>
<thead>
<tr>
<th>Variable_name</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>character_set_client</td>
<td>utf8mb4</td>
</tr>
<tr>
<td>character_set_connection</td>
<td>utf8mb4</td>
</tr>
<tr>
<td>character_set_database</td>
<td>utf8mb4</td>
</tr>
<tr>
<td>character_set_filesystem</td>
<td>binary</td>
</tr>
<tr>
<td>character_set_results</td>
<td>utf8mb4</td>
</tr>
<tr>
<td>character_set_server</td>
<td>utf8mb4</td>
</tr>
<tr>
<td>character_set_system</td>
<td>utf8</td>
</tr>
<tr>
<td>collation_connection</td>
<td>utf8mb4_0900_ai_ci</td>
</tr>
<tr>
<td>collation_database</td>
<td>utf8mb4_unicode_ci</td>
</tr>
<tr>
<td>collation_server</td>
<td>utf8mb4_unicode_ci</td>
</tr>
</tbody>
</table>
<p>&hellip;alright except for the <code>collation_connection</code> parameter. Now, I am stil unsure, whether that can be set as server variable or not. Trying to set in in <code>my.ini</code>.</p>
<pre><code class="language-ini">[mysqld]
collation-connection=utf8mb4_unicode_ci

</code></pre>
<p>The service no longer started. ☹</p>
<pre><code class="language-log">2019-08-06T15:02:14.009170Z 0 [System] [MY-010910] [Server] C:\Program Files\MySQL\MySQL Server 8.0\bin\mysqld.exe: Shutdown complete (mysqld 8.0.15)  MySQL Community Server - GPL.
2019-08-06T15:02:40.403776Z 0 [Warning] [MY-010915] [Server] 'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.
2019-08-06T15:02:40.406958Z 0 [System] [MY-010116] [Server] C:\Program Files\MySQL\MySQL Server 8.0\bin\mysqld.exe (mysqld 8.0.15) starting as process 26140
2019-08-06T15:02:47.154232Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
2019-08-06T15:02:47.165349Z 0 [ERROR] [MY-000067] [Server] unknown variable 'collation-connection=utf8mb4_unicode_ci'.
2019-08-06T15:02:47.165375Z 0 [Warning] [MY-010952] [Server] The privilege system failed to initialize correctly. If you have upgraded your server, make sure you're executing mysql_upgrade to correct the issue.
2019-08-06T15:02:47.181314Z 0 [ERROR] [MY-010119] [Server] Aborting
</code></pre>
<p>For right now, I am happy with the setup and will leave it there. If you have any clue about the <code>collation-connection</code>, I am more than happy to hear about it.</p>
<h2 id="resources">Resources</h2>
<ul>
<li><a href="https://mathiasbynens.be/notes/mysql-utf8mb4">How to support full Unicode in MySQL databases</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/charset-server.html">MySQL Documentation: 10.3.2 Server Character Set and Collation</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/charset-database.html">MySQL Documentation: 10.3.3 Database Character Set and Collation</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/charset-connection.html">MySQL Documentation: 10.4 Connection Character Sets and Collations</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/charset-configuration.html">MySQL Documentation: 10.14 Character Set Configuration</a></li>
</ul>
<h3 id="options">Options</h3>
<ul>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/mysql-command-options.html#option_mysql_default-character-set">MySQL Documentation: default-character-set</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_character_set_system">MySQL Documentation: character_set_system [utf8]</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_character_set_server">MySQL Documentation: character_set_server [utf8mb4]</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_character_set_client">MySQL Documentation: character_set_client [utf8mb4]</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>JSON-RPC call as Invoke-WebRequest</title>
            <link>https://arueckauer.github.io/posts/2019/08/json-rpc-call-as-invoke-webrequest/</link>
            <pubDate>Mon, 05 Aug 2019 16:56:17 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/08/json-rpc-call-as-invoke-webrequest/</guid>
            <description>Lately I needed to execute a JSON-RPC call, but had neither Postman nor Insomnia available. I wondered, if Invoke-WebRequest could do the job.
Requesting the SMD is as simple as:
Invoke-WebRequest -Uri &#39;https://localhost/api/json-rpc/authentication&#39;  Now I needed to send a POST request with some parameters. That needed some further research. After some trial and error I ended up with the following.
$Body = @{ jsonrpc = &#39;2.0&#39;; method = &#39;authenticate&#39;; params = @{ username = &#39;arueckauer&#39;; password = &#39;F^YgtU)p9Pd3ANTqm@F^sNWFSf9PU}OCg0N0xCC&amp;amp;C8P&amp;gt;=x^6)Hasdh]HHtXQ#dLg&#39; }; id = [guid]::NewGuid() } | ConvertTo-Json Invoke-WebRequest -Uri &#39;https://localhost/api/json-rpc/authentication&#39; -Method &#39;POST&#39; -Body $Body  With the help of [guid]::NewGuid() a new UUIDv4 is created for each request.</description>
            <content type="html"><![CDATA[<p>Lately I needed to execute a JSON-RPC call, but had neither <a href="https://www.getpostman.com/">Postman</a> nor <a href="https://insomnia.rest/">Insomnia</a> available. I wondered, if <code>Invoke-WebRequest</code> could do the job.</p>
<p>Requesting the SMD is as simple as:</p>
<pre><code class="language-powershell">Invoke-WebRequest -Uri 'https://localhost/api/json-rpc/authentication'
</code></pre>
<p>Now I needed to send a POST request with some parameters. That needed some further research. After some trial and error I ended up with the following.</p>
<pre><code class="language-powershell">$Body = @{
    jsonrpc = '2.0';
    method  = 'authenticate';
    params  = @{
        username = 'arueckauer';
        password = 'F^YgtU)p9Pd3ANTqm@F^sNWFSf9PU}OCg0N0xCC&amp;C8P&gt;=x^6)Hasdh]HHtXQ#dLg'
    };
    id      = [guid]::NewGuid()
} | ConvertTo-Json
Invoke-WebRequest -Uri 'https://localhost/api/json-rpc/authentication' -Method 'POST' -Body $Body
</code></pre>
<p>With the help of <code>[guid]::NewGuid()</code> a new UUIDv4 is created for each request. And piping the body object to <code>ConvertTo-Json</code> returns the necessary JSON representation.</p>
<p>Et voilà!</p>
]]></content>
        </item>
        
        <item>
            <title>Console Commands in an Expressive Applicaton</title>
            <link>https://arueckauer.github.io/posts/2019/07/console-commands-in-an-expressive-applicaton/</link>
            <pubDate>Thu, 04 Jul 2019 16:09:13 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/07/console-commands-in-an-expressive-applicaton/</guid>
            <description>In a current customer project, I needed the ability to run commands from the CLI.
Symfony provides a console component which is, among others, used by zendframework/zend-expressive-tooling. The documentation got me off to a quick start and I got my first Hello command running within minutes.
I wanted to provide a re-usable package, where the implementation can provide the definition of a command list.
Since I am not using the package within a Symfony application, I needed somehow access to the Service Container of the Expressive application.</description>
            <content type="html"><![CDATA[<p>In a current customer project, I needed the ability to run commands from the CLI.</p>
<p>Symfony provides a console component which is, among others, used by <a href="zendframework/zend-expressive-tooling"><code>zendframework/zend-expressive-tooling</code></a>. The <a href="https://symfony.com/doc/current/console.html">documentation</a> got me off to a quick start and I got my first <code>Hello</code> command running within minutes.</p>
<p>I wanted to provide a re-usable package, where the implementation can provide the definition of a command list.</p>
<p>Since I am not using the package within a Symfony application, I needed somehow access to the Service Container of the Expressive application. I quick search on the internet did not show up any useful results and I was left to use my own brain.</p>
<p>My starting point was the <a href="https://github.com/zendframework/zend-expressive-skeleton/blob/master/public/index.php"><code>public/index.php</code></a> provided by Expressive. From there it was just a small step of adjustments and I could access the configuration by simply loading the service container via <code>$container = require 'config/container.php';</code>.</p>
<p>The next task was to use a factory service for commands that have dependencies. Since I already have the service container, I can simply get the command from it.</p>
<p>The end-result looks like so:</p>
<pre><code class="language-php">#!/usr/bin/env php
&lt;?php

declare(strict_types = 1);

namespace Arueckauer\Console;

use PackageVersions\Versions;
use Psr\Container\ContainerInterface;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Command\Command;

require 'vendor/autoload.php';

/** @var ContainerInterface $container */
$container = require 'config/container.php';

$commandsConfig = require 'config/autoload/commands.global.php';
$commandList = [];
foreach ($commandsConfig[CommandList::class] as $command) {
    if ($command instanceof Command) {
        $commandList[] = $command;
    } else {
        $commandList[] = $container-&gt;get($command);
    }
}

$application = new Application('Console');
$application-&gt;addCommands($commandList);
$application-&gt;run();

</code></pre>
<p>The configuration of commands is placed in a configuration file like <code>config/autoload/commands.global.php</code>.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

use Command\Hello;
use Command\NeedSomeDependencies;
use Elstr\Console\CommandList;

return [
    CommandList::class =&gt; [
        new Hello(),
        NeedSomeDependencies::class,
    ],
];

</code></pre>
<p>A day after I completed my implementation, two users mentioned an interesting post by Geert Eltink (aka <a href="https://twitter.com/xtreamwayz">@xtreamwayz</a>) from 2016 <a href="https://www.xtreamwayz.com/blog/2016-02-07-zend-expressive-console-cli-commands">zend-expressive console cli commands</a> and the <a href="https://github.com/zfcampus/zf-console">zfcampus/zf-console</a> library.</p>
<p><img src="/img/console-commands-in-an-expressive-applicaton/slack-thread.jpg" alt="Conversation on Slack"></p>
<p><em>(I blacked out the usernames, since I do not have their permission to use them.)</em></p>
<p>Update 2019-10-18: In an <a href="https://arueckauer.github.io/posts/2019/10/console-commands-in-an-expressive-applicaton-ii/">additional post</a>, I show two more real-world examples.</p>
]]></content>
        </item>
        
        <item>
            <title>Format Seconds as Time in PHP</title>
            <link>https://arueckauer.github.io/posts/2019/06/format-seconds-as-time-in-php/</link>
            <pubDate>Fri, 28 Jun 2019 09:04:39 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/format-seconds-as-time-in-php/</guid>
            <description>Somewhat over ten years ago I was working on a project, where we measured execution time and memory consumption of PHP scripts. To display the execution time in a human-readable way, we used a function to format the timestamp provided by microtime().
&amp;lt;?php class Application__Helper_Timer { /** * Calculates the execution time of a script * @param float $executionTime * @return string */ public static function formatExecutionTime($executionTime) { $seconds = $this-&amp;gt;executionTime; $hours = 0; $minutes = 0; while (($seconds - 3600) &amp;gt; 0) { $hours++; $seconds -= 3600; } while (($seconds - 60) &amp;gt; 0) { $minutes++; $seconds -= 60; } if (1 === strlen((string) $hours)) { $hours = &#39;0&#39; .</description>
            <content type="html"><![CDATA[<p>Somewhat over ten years ago I was working on a project, where we measured execution time and memory consumption of PHP scripts. To display the execution time in a human-readable way, we used a function to format the timestamp provided by <a href="https://php.net/microtime">microtime()</a>.</p>
<pre><code class="language-php">&lt;?php

class Application__Helper_Timer
{
    /**
     * Calculates the execution time of a script
     * @param float $executionTime
     * @return string
     */
    public static function formatExecutionTime($executionTime)
    {
        $seconds = $this-&gt;executionTime;
        $hours   = 0;
        $minutes = 0;
        while (($seconds - 3600) &gt; 0) {
            $hours++;
            $seconds -= 3600;
        }
        while (($seconds - 60) &gt; 0) {
            $minutes++;
            $seconds -= 60;
        }
        if (1 === strlen((string) $hours)) {
            $hours = '0' . $hours;
        }
        if (1 === strlen((string) $minutes)) {
            $minutes = '0' . $minutes;
        }
        $seconds = round($seconds, 4);
        if (false !== strpos($seconds, '.')) {
            list($seconds, $milliseconds) = explode('.', $seconds);
            if (1 === strlen((string) $seconds)) {
                $seconds = '0' . $seconds;
            }
        } else {
            $milliseconds = 0;
        }

        if ('00' !== $hours) {
            return sprintf('%s:%s:%s,%s', $hours, $minutes, $seconds, $milliseconds);
        }

        return sprintf('%s:%s,%s', $minutes, $seconds, $milliseconds);
    }
}

</code></pre>
<p>It served the purpose well and I used it in other projects as well.</p>
<p>Today, I needed again a way to format seconds in a way that was easily readable. Remembering that I used that many times before, I pulled it out of the archives, looked at it and started thinking how complicated it was written. There must be an easier way.</p>
<p>So, after pulling up my sleeves and getting to work, I came up with this solution:</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace Formatter;

class SecondsAsTime
{
    public function __invoke(float $seconds) : string
    {
        $hours   = (int) ($seconds / 3600);
        $minutes = (int) (($seconds - $hours * 3600) / 60);
        $seconds -= ($hours * 3600 + $minutes * 60);

        return sprintf('%02d:%02d:%07.4F', $hours, $minutes, $seconds);
    }
}

</code></pre>
<p>Very simple and readable.</p>
<p>Also, I tested test, which greatly helped in the development process.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace FormatterTest;

use Formatter\SecondsAsTime;
use PHPUnit\Framework\TestCase;

class SecondsAsTimeTest extends TestCase
{
    public function test1PicoSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.0000', $formatter(10 ** -12));
    }

    public function test1NanoSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.0000', $formatter(10 ** -9));
    }

    public function test1MicroSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.0000', $formatter(10 ** -6));
    }

    public function test1MilliSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.0010', $formatter(10 ** -3));
    }

    public function test1CentiSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.0100', $formatter(10 ** -2));
    }

    public function test1DeciSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:00.1000', $formatter(10 ** -1));
    }

    public function test1Second() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:01.0000', $formatter(1));
    }

    public function test1DecaSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:00:10.0000', $formatter(10 ** 1));
    }

    public function test1HectoSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:01:40.0000', $formatter(10 ** 2));
    }

    public function test1KiloSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('00:16:40.0000', $formatter(10 ** 3));
    }

    public function test1MegaSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('277:46:40.0000', $formatter(10 ** 6));
    }

    public function test1GigaSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('277777:46:40.0000', $formatter(10 ** 9));
    }

    public function test1TeraSecond() : void
    {
        $formatter = new SecondsAsTime();
        $this-&gt;assertEquals('277777777:46:40.0000', $formatter(10 ** 12));
    }
}

</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Intermediate Status</title>
            <link>https://arueckauer.github.io/posts/2019/06/intermediate-status/</link>
            <pubDate>Mon, 17 Jun 2019 16:45:52 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/intermediate-status/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D25
 25 % of my #100DaysOfCode and #100DaysOfBlogging challenges are completed. Time for an intermediate status review.
Just do it As mentioned in my starting post, I wanted this to be a fun and learning experience. I am very happy to see that I&#39;ve reached all of my goals so far. My greatest concern was that I would get tired of writing (almost) every day.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D25</em></p>
<hr>
<p>25 % of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenges are completed. Time for an intermediate status review.</p>
<h2 id="just-do-it">Just do it</h2>
<p>As mentioned in my <a href="/posts/2019/05/just-do-it/">starting post</a>, I wanted this to be a fun and learning experience. I am very happy to see that I've reached all of my goals so far. My greatest concern was that I would get tired of writing (almost) every day. But this has been good practice and writing becomes easier every day.</p>
<h2 id="learnings">Learnings</h2>
<p>Making time for reading an interesting article or trying something out from my to-do list, has been a wonderful achievement experience. Usually those items tend to linger around in lists forever. Now I actually engage in things of personal interest (well, for the most part).</p>
<h2 id="improvements">Improvements</h2>
<p>The thing that bothers me the most is, when I lose focus and just try to accomplish my daily goal to create a new post. The content has little value and writing it lacks fun. Also writing a blog post is a huge time consumer. From the little time I have each night after kids are in bed, I would like to focus more on the actual learnings rather than writing about it.</p>
<p>This is why I want to adjust my <a href="/posts/2019/05/100-days-of-code/">rules</a> in the #100DaysOfBlogging challenge starting today.</p>
<p>Instead of forcing me to blog every day, I want to focus and make time to study, code and learn. My new goal for blogging is to write a blog post once a week. If time and content permits than more often.</p>
<p>To another 75 days!</p>
]]></content>
        </item>
        
        <item>
            <title>Robot Simulator Chapter 2</title>
            <link>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</link>
            <pubDate>Sat, 15 Jun 2019 20:57:36 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D24
 After a mentor left some feedback:
 I like that you&#39;ve split out the direction and position. I think you can go a bit further though.
 I went back to the drawing board. 😊 Seriously, I read the feedback on my mobile and let the thought process do its work. Then I took pen and paper and outlined an improved structure.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D24</em></p>
<hr>
<p>After a mentor left some feedback:</p>
<blockquote>
<p>I like that you've split out the direction and position. I think you can go a bit further though.</p>
</blockquote>
<p>I went back to the drawing board. 😊 Seriously, I read the feedback on my mobile and let the thought process do its work. Then I took pen and paper and outlined an improved structure. The result can be found on <a href="https://github.com/arueckauer/exercism-php/tree/master/robot-simulator">GitHub</a>. Where I might upload all my solutions.</p>
<blockquote>
<p>Thanks for the feedback.</p>
<p>I gave it some more thought and came up with the now submitted solution.</p>
<ul>
<li><code>Direction</code> knows current direction and is able to turn either left or right</li>
<li><code>Position</code> is now solely responsible for the movement (depending on given <code>Direction</code>)</li>
<li><code>Robot</code> has a <code>Direction</code> and <code>Position</code> and is able to follow instructions.</li>
</ul>
<p>I thought about implementing a separate <code>Move</code> class. Which would turn the direction and advance the position. That approach would tighten the coupling between classes and add complexity.</p>
<p>Also a <code>Map</code> would IMO only make sense to place n Robots on it.</p>
<p>I'm pretty happy with the outcome. One improvement I would add is either making <code>Robot</code> properties private and adding getters and setters or declare type properties. Now it would be possible to mutate them to whatever.</p>
<p>Looking forward to hearing from you.</p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>Robot Simulator</title>
            <link>https://arueckauer.github.io/posts/2019/06/robot-simulator/</link>
            <pubDate>Fri, 14 Jun 2019 21:30:50 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D23
 Instructions Today&#39;s challenge is to write a robot simulator. A robot is placed on a hypothetical infinite grid phasing either north, east, south or west. It has three possible movements:
 turn right, turn left and advance.  A robot can also follow instructions on how to proceed.
  The letter-string &amp;ldquo;RAALAL&amp;rdquo; means:  Turn right Advance twice Turn left Advance once Turn left yet again   Say a robot starts at {7, 3} facing north.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D23</em></p>
<hr>
<h2 id="instructions">Instructions</h2>
<p>Today's challenge is to write a robot simulator. A robot is placed on a hypothetical infinite grid phasing either north, east, south or west. It has three possible movements:</p>
<ul>
<li>turn right,</li>
<li>turn left and</li>
<li>advance.</li>
</ul>
<p>A robot can also follow instructions on how to proceed.</p>
<blockquote>
<ul>
<li>The letter-string &ldquo;RAALAL&rdquo; means:
<ul>
<li>Turn right</li>
<li>Advance twice</li>
<li>Turn left</li>
<li>Advance once</li>
<li>Turn left yet again</li>
</ul>
</li>
<li>Say a robot starts at {7, 3} facing north. Then running this stream of instructions should leave it at {9, 4} facing west.</li>
</ul>
</blockquote>
<h2 id="roll-up-my-sleeves">Roll up my sleeves</h2>
<p>First, I provide a structure that is syntactical correct.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

class Robot
{
    public const DIRECTION_NORTH = 'NORTH';

    public const DIRECTION_EAST = 'EAST';

    public const DIRECTION_SOUTH = 'SOUTH';

    public const DIRECTION_WEST = 'WEST';

    public $position;

    public $direction;

    public function __construct(array $position, string $direction)
    {
        $this-&gt;position  = $position;
        $this-&gt;direction = $direction;
    }

    public function turnLeft() : Robot
    {
        return $this;
    }

    public function turnRight() : Robot
    {
        return $this;
    }

    public function advance() : Robot
    {
        return $this;
    }

    public function instructions(string $path) : void
    {
    }
}

</code></pre>
<p>Next, I implement the <code>instructions</code> method. It's a command chain where each character is providing a movement instruction. Only three valid commands are available. Everything else will throw an <code>InvalidArgumentException</code>.</p>
<pre><code class="language-php">public function instructions(string $path) : void
{
    foreach (str_split($path) as $direction) {
        switch ($direction) {
            case 'A':
                $this-&gt;advance();
                break;

            case 'L':
                $this-&gt;turnLeft();
                break;


            case 'R':
                $this-&gt;turnRight();
                break;

            default:
                throw new InvalidArgumentException(&quot;Provided instruction '$direction' is not supported.'&quot;);
                break;
        }
    }
}
</code></pre>
<p>The <code>turnLeft</code> method will simply mutate the current direction. <code>turnRight</code> is the same logic in the other direction.</p>
<pre><code class="language-php">public function turnLeft() : Robot
{
    switch ($this-&gt;direction) {
        case self:: DIRECTION_NORTH:
            $this-&gt;direction = self::DIRECTION_WEST;
            break;

        case self:: DIRECTION_EAST:
            $this-&gt;direction = self::DIRECTION_NORTH;
            break;

        case self:: DIRECTION_SOUTH:
            $this-&gt;direction = self::DIRECTION_EAST;
            break;

        case self:: DIRECTION_WEST:
            $this-&gt;direction = self::DIRECTION_SOUTH;
            break;
    }

    return $this;
}

public function turnRight() : Robot
{
    switch ($this-&gt;direction) {
        case self:: DIRECTION_NORTH:
            $this-&gt;direction = self::DIRECTION_EAST;
            break;

        case self:: DIRECTION_EAST:
            $this-&gt;direction = self::DIRECTION_SOUTH;
            break;

        case self:: DIRECTION_SOUTH:
            $this-&gt;direction = self::DIRECTION_WEST;
            break;

        case self:: DIRECTION_WEST:
            $this-&gt;direction = self::DIRECTION_NORTH;
            break;
    }

    return $this;
}
</code></pre>
<h2 id="improve-turning-methods-and-direction-constants">Improve turning methods and direction constants</h2>
<p>I'm not happy with the look of it. Since the instructions and tests are not specifying the value of the geographic direction, I simplify them as follows.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

class Robot
{
    public const DIRECTION_NORTH = 1;

    public const DIRECTION_EAST = 2;

    public const DIRECTION_SOUTH = 3;

    public const DIRECTION_WEST = 4;

    public $position;

    public $direction;

    public function __construct(array $position, int $direction)
    {
        $this-&gt;position  = $position;
        $this-&gt;direction = $direction;
    }

    public function turnLeft() : Robot
    {
        --$this-&gt;direction;

        if (0 === $this-&gt;direction) {
            $this-&gt;direction = 4;
        }

        return $this;
    }

    public function turnRight() : Robot
    {
        ++$this-&gt;direction;

        if (5 === $this-&gt;direction) {
            $this-&gt;direction = 1;
        }

        return $this;
    }

    public function advance() : Robot
    {
        return $this;
    }

    public function instructions(string $path) : void
    {
        foreach (str_split($path) as $direction) {
            switch ($direction) {
                case 'A':
                    $this-&gt;advance();
                    break;

                case 'L':
                    $this-&gt;turnLeft();
                    break;


                case 'R':
                    $this-&gt;turnRight();
                    break;

                default:
                    throw new InvalidArgumentException(&quot;Provided instruction '$direction' is not supported.'&quot;);
                    break;
            }
        }
    }
}

</code></pre>
<h2 id="advance">Advance</h2>
<p>Now to the last method.</p>
<pre><code class="language-php">public function advance() : Robot
{
    switch ($this-&gt;direction) {
        case self:: DIRECTION_NORTH:
            ++$this-&gt;position[1];
            break;

        case self:: DIRECTION_EAST:
            ++$this-&gt;position[0];
            break;

        case self:: DIRECTION_SOUTH:
            --$this-&gt;position[1];
            break;

        case self:: DIRECTION_WEST:
            --$this-&gt;position[0];
            break;
    }

    return $this;
}

</code></pre>
<hr>
<h2 id="splitting-up-into-classes">Splitting up into classes</h2>
<p>I am not happy with how everything is squeezed into the <code>Robot</code> class. I will separate <code>Direction</code> and <code>Position</code> from it.</p>
<h3 id="advance-tests">Advance tests</h3>
<p>First, I adjust the test suite.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

include_once 'Direction.php';
include_once 'Position.php';
include_once 'Robot.php';

use Exercism\RobotSimulator\Direction;
use Exercism\RobotSimulator\Position;
use Exercism\RobotSimulator\Robot;

class RobotSimulatorTest extends PHPUnit\Framework\TestCase
{
    /**
     * A robot is created with a position and a direction
     */
    public function testCreate()
    {
        // Robots are created with a position and direction
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_NORTH, $robot-&gt;direction-&gt;getDirection());

        // Negative positions are allowed
        $robot = $this-&gt;initRobot([-1, -1], Direction::DIRECTION_SOUTH);
        $this-&gt;assertEquals([-1, -1], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_SOUTH, $robot-&gt;direction-&gt;getDirection());
    }

    /**
     * Rotate the robot's direction 90 degrees clockwise
     */
    public function testTurnRight()
    {
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);

        // Change the direction from north to east
        $robot-&gt;turnRight();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_EAST, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from east to south
        $robot-&gt;turnRight();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_SOUTH, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from south to west
        $robot-&gt;turnRight();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_WEST, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from west to north
        $robot-&gt;turnRight();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_NORTH, $robot-&gt;direction-&gt;getDirection());
    }

    /*
     * Rotate the robot's direction 90 degrees counterclockwise
     */
    public function testTurnLeft()
    {
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);

        // Change the direction from north to west
        $robot-&gt;turnLeft();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_WEST, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from west to south
        $robot-&gt;turnLeft();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_SOUTH, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from south to east
        $robot-&gt;turnLeft();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_EAST, $robot-&gt;direction-&gt;getDirection());

        // Change the direction from east to north
        $robot-&gt;turnLeft();
        $this-&gt;assertEquals([0, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_NORTH, $robot-&gt;direction-&gt;getDirection());
    }

    /**
     * Move the robot forward 1 space in the direction it is pointing
     */
    public function testAdvance()
    {
        // Increases the y coordinate by one when facing north
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);
        $robot-&gt;advance();
        $this-&gt;assertEquals([0, 1], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_NORTH, $robot-&gt;direction-&gt;getDirection());

        // Decreases the y coordinate by one when facing south
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_SOUTH);
        $robot-&gt;advance();
        $this-&gt;assertEquals([0, -1], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_SOUTH, $robot-&gt;direction-&gt;getDirection());

        // Increases the x coordinate by one when facing east
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_EAST);
        $robot-&gt;advance();
        $this-&gt;assertEquals([1, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_EAST, $robot-&gt;direction-&gt;getDirection());

        // Decreases the x coordinate by one when facing west
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_WEST);
        $robot-&gt;advance();
        $this-&gt;assertEquals([-1, 0], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_WEST, $robot-&gt;direction-&gt;getDirection());
    }

    /**
     * Where R = Turn Right, L = Turn Left and A = Advance,
     * the robot can follow a series of instructions
     * and end up with the correct position and direction
     */
    public function testInstructions()
    {
        // Instructions to move west and north
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);
        $robot-&gt;instructions('LAAARALA');
        $this-&gt;assertEquals([-4, 1], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_WEST, $robot-&gt;direction-&gt;getDirection());

        // Instructions to move west and south
        $robot = $this-&gt;initRobot([2, -7], Direction::DIRECTION_EAST);
        $robot-&gt;instructions('RRAAAAALA');
        $this-&gt;assertEquals([-3, -8], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_SOUTH, $robot-&gt;direction-&gt;getDirection());

        // Instructions to move east and north
        $robot = $this-&gt;initRobot([8, 4], Direction::DIRECTION_SOUTH);
        $robot-&gt;instructions('LAAARRRALLLL');
        $this-&gt;assertEquals([11, 5], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_NORTH, $robot-&gt;direction-&gt;getDirection());
    }

    public function testMalformedInstructions()
    {
        $this-&gt;expectException(InvalidArgumentException::class);

        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);
        $robot-&gt;instructions('LARX');
    }

    /**
     * Optional instructions chaining
     */
    public function testInstructionsChaining()
    {
        $robot = $this-&gt;initRobot([0, 0], Direction::DIRECTION_NORTH);
        $robot-&gt;turnLeft()
            -&gt;advance()
            -&gt;advance()
            -&gt;advance()
            -&gt;turnRight()
            -&gt;advance()
            -&gt;turnLeft()
            -&gt;advance();
        $this-&gt;assertEquals([-4, 1], $robot-&gt;position-&gt;toArray());
        $this-&gt;assertEquals(Direction::DIRECTION_WEST, $robot-&gt;direction-&gt;getDirection());
    }

    public function testMalformedDirectionMinusOne()
    {
        $this-&gt;expectException(InvalidArgumentException::class);

        $this-&gt;initRobot([0, 0], -1);
    }

    public function testMalformedDirectionFive()
    {
        $this-&gt;expectException(InvalidArgumentException::class);

        $this-&gt;initRobot([0, 0], 5);
    }

    private function initRobot(array $position, int $direction) : Robot
    {
        return new Robot(new Position($position[0], $position[1]), new Direction($direction));
    }
}

</code></pre>
<h3 id="split-up-classes">Split up classes</h3>
<p>&hellip;and then separate direction and position from <code>Robot</code>.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace Exercism\RobotSimulator;

use InvalidArgumentException;

class Direction
{
    public const DIRECTION_NORTH = 1;

    public const DIRECTION_EAST = 2;

    public const DIRECTION_SOUTH = 3;

    public const DIRECTION_WEST = 4;

    private static $allowableDirections = [
        self::DIRECTION_NORTH,
        self::DIRECTION_EAST,
        self::DIRECTION_SOUTH,
        self::DIRECTION_WEST,
    ];

    private $direction;

    public function __construct(int $direction)
    {
        $this-&gt;setDirection($direction);
    }

    public function turnLeft() : Direction
    {
        --$this-&gt;direction;

        if (0 === $this-&gt;direction) {
            $this-&gt;direction = 4;
        }

        return $this;
    }

    public function turnRight() : Direction
    {
        ++$this-&gt;direction;

        if (5 === $this-&gt;direction) {
            $this-&gt;direction = 1;
        }

        return $this;
    }

    public function getDirection() : int
    {
        return $this-&gt;direction;
    }

    public function setDirection(int $direction) : Direction
    {
        if (! in_array($direction, static::$allowableDirections, true)) {
            throw new InvalidArgumentException('Given direction is not valid.');
        }

        $this-&gt;direction = $direction;

        return $this;
    }
}

</code></pre>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace Exercism\RobotSimulator;

class Position
{
    private $x;

    private $y;

    public function __construct(int $x, int $y)
    {
        $this-&gt;x = $x;
        $this-&gt;y = $y;
    }

    public function toArray() : array
    {
        return [
            $this-&gt;x,
            $this-&gt;y,
        ];
    }

    public function advanceX() : Position
    {
        ++$this-&gt;x;
        return $this;
    }

    public function revertX() : Position
    {
        --$this-&gt;x;
        return $this;
    }

    public function advanceY() : Position
    {
        ++$this-&gt;y;
        return $this;
    }

    public function revertY() : Position
    {
        --$this-&gt;y;
        return $this;
    }
}

</code></pre>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace Exercism\RobotSimulator;

use InvalidArgumentException;

class Robot
{
    public $position;

    public $direction;

    public function __construct(Position $position, Direction $direction)
    {
        $this-&gt;position  = $position;
        $this-&gt;direction = $direction;
    }

    public function turnLeft() : Robot
    {
        $this-&gt;direction-&gt;turnLeft();
        return $this;
    }

    public function turnRight() : Robot
    {
        $this-&gt;direction-&gt;turnRight();
        return $this;
    }

    public function advance() : Robot
    {
        switch ($this-&gt;direction-&gt;getDirection()) {
            case Direction::DIRECTION_NORTH:
                $this-&gt;position-&gt;advanceY();
                break;

            case Direction::DIRECTION_EAST:
                $this-&gt;position-&gt;advanceX();
                break;

            case Direction::DIRECTION_SOUTH:
                $this-&gt;position-&gt;revertY();
                break;

            case Direction::DIRECTION_WEST:
                $this-&gt;position-&gt;revertX();
                break;
        }

        return $this;
    }

    public function instructions(string $path) : void
    {
        foreach (str_split($path) as $direction) {
            switch ($direction) {
                case 'A':
                    $this-&gt;advance();
                    break;

                case 'L':
                    $this-&gt;turnLeft();
                    break;


                case 'R':
                    $this-&gt;turnRight();
                    break;

                default:
                    throw new InvalidArgumentException(&quot;Provided instruction '$direction' is not supported.'&quot;);
                    break;
            }
        }
    }
}

</code></pre>
<h2 id="conclusion">Conclusion</h2>
<p>Tests are passing and the exercise is complete. This looks much cleaner now. There might still be some more improvements to make, but I am ready for a break for now. Looking forward to the mentor's feedback.</p>
]]></content>
        </item>
        
        <item>
            <title>Use return types as much as possible?</title>
            <link>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</link>
            <pubDate>Thu, 13 Jun 2019 23:42:55 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D22
 A mentor commented on my yesterday&#39;s solution to the Grade School exercise.
 Good solution
Awesome! using strict_types
It&#39;s approved for me but try to use return types as much as possible, I&#39;m missing initGradeIfItDoesNotExist
 This post will reflect some of my personal thoughts. Since the mentor&#39;s suggestion could be just some personal preference, I will not name the mentor.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D22</em></p>
<hr>
<p>A mentor commented on my <a href="/posts/2019/06/grade-school/">yesterday's solution</a> to the Grade School exercise.</p>
<blockquote>
<p>Good solution</p>
<p>Awesome! using strict_types</p>
<p>It's approved for me but try to use return types as much as possible, I'm missing <strong>initGradeIfItDoesNotExist</strong></p>
</blockquote>
<p><em>This post will reflect some of my personal thoughts. Since the mentor's suggestion could be just some personal preference, I will not name the mentor.</em></p>
<p><em>I am very grateful for each one of them taking time and providing valuable feedback. This has been an awesome experience. And since I am doing these exercises to learn, the caused reflection is what I am looking for. Thank you!</em></p>
<h2 id="reflection">Reflection</h2>
<p>The suggestion to &ldquo;use return types as much as possible&rdquo; made me review my code.</p>
<pre><code class="language-php">private function initGradeIfItDoesNotExist(int $grade) : void
{
    if (! isset($this-&gt;students[$grade])) {
        $this-&gt;students[$grade] = [];
    }
}
</code></pre>
<p>So first off, <code>initGradeIfItDoesNotExist()</code> has a declared return type. Okay, it is <code>void</code>. And secondly, how could an actual return value improve the method and what should be returned?</p>
<p>A value should only be returned, if it is required. A returned value adds complexity. It is a dependency, to the code invoking the method. And it probably needs some validation, if the returned variable is what is expected.</p>
<p>Since <code>initGradeIfItDoesNotExist()</code> can mutate <code>$this-&gt;students</code>, it could return either that or <code>$this-&gt;students[$grade]</code>. Both variables are an array. The return type could be changed to <code>array</code>. And the caller could possibly check if the returned value is an array of at least <code>0</code> elements. Additionally the <code>if</code> condition could check, if <code>$this-&gt;students[$grade]</code> is set that is is an array. Ending up with:</p>
<pre><code class="language-php">private function initGradeIfItDoesNotExist(int $grade) : array
{
    if (! isset($this-&gt;students[$grade])
        || ! is_array($this-&gt;students[$grade])
    ) {
        $this-&gt;students[$grade] = [];
    }

    return $this-&gt;students[$grade];
}
</code></pre>
<p>Maybe I am missing something here, but that does not make any sense to me.</p>
<p>You have thoughts on that? Happy to hear about it on <a href="https://twitter.com/arueckauer">Twitter</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Grade School</title>
            <link>https://arueckauer.github.io/posts/2019/06/grade-school/</link>
            <pubDate>Wed, 12 Jun 2019 23:32:10 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/grade-school/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D21
 This Exercism exercise is straight forward.
An extract from the instructions:
 Given students&amp;rsquo; names along with the grade that they are in, create a roster for the school.
In the end, you should be able to:
 Add a student&#39;s name to the roster for a grade Get a list of all students enrolled in a grade Get a sorted list of all students in all grades.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D21</em></p>
<hr>
<p>This <a href="https://exercism.io">Exercism</a> exercise is straight forward.</p>
<p>An extract from the instructions:</p>
<blockquote>
<p>Given students&rsquo; names along with the grade that they are in, create a roster for the school.</p>
<p>In the end, you should be able to:</p>
<ul>
<li>Add a student's name to the roster for a grade</li>
<li>Get a list of all students enrolled in a grade</li>
<li>Get a sorted list of all students in all grades. Grades should sort as 1, 2, 3, etc., and students within a grade should be sorted alphabetically by name.</li>
</ul>
<p>Note that all our students only have one name. (It's a small town, what do you want?)</p>
</blockquote>
<h2 id="my-solution">My solution</h2>
<p>Although I am not happy with the usage of plain array in PHP, I used them here because of a closed setup where nothing will be added. In a regular project I would implement some custom collection class which checks allows type checking, since <a href="https://wiki.php.net/rfc/generics">Generic Types</a> are not (yet) available in PHP.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

class School
{
    private $students;

    public function add(string $name, int $grade) : void
    {
        $this-&gt;initGradeIfItDoesNotExist($grade);

        $this-&gt;students[$grade][] = $name;
        sort($this-&gt;students[$grade]);
    }

    public function grade(int $grade) : array
    {
        $this-&gt;initGradeIfItDoesNotExist($grade);
        return $this-&gt;students[$grade];
    }

    public function studentsByGradeAlphabetical() : array
    {
        asort($this-&gt;students);
        return $this-&gt;students;
    }

    private function initGradeIfItDoesNotExist(int $grade) : void
    {
        if (! isset($this-&gt;students[$grade])) {
            $this-&gt;students[$grade] = [];
        }
    }
}

</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Meetup (Side Exercise)</title>
            <link>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</link>
            <pubDate>Tue, 11 Jun 2019 21:29:52 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D20
 Next up in the PHP sidetrack is the Meetup exercise.
A function is provided with the arguments
 (int) year, (int) month, (string) descriptor and (string) weekday  and expected to process the input and return an instance of DateTime with the corresponding date.
While year, month and weekday are an exact representation of their values, the descriptor is a bit more complicated.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D20</em></p>
<hr>
<p>Next up in the PHP sidetrack is the <em>Meetup</em> exercise.</p>
<p>A function is provided with the arguments</p>
<ul>
<li>(int) year,</li>
<li>(int) month,</li>
<li>(string) descriptor and</li>
<li>(string) weekday</li>
</ul>
<p>and expected to process the input and return an instance of <code>DateTime</code> with the corresponding date.</p>
<p>While year, month and weekday are an exact representation of their values, the descriptor is a bit more complicated. It can hold one of the following values:</p>
<ul>
<li>teenth,</li>
<li>first,</li>
<li>second,</li>
<li>third,</li>
<li>fourth or</li>
<li>last</li>
</ul>
<p>Thus, making the actual date variable.</p>
<h2 id="function-signature">Function signature</h2>
<p>First, I create the required file <code>meetup.php</code> and declare the function <code>meetup_day()</code> with the known arguments.</p>
<pre><code class="language-php">function meetup_day(int $year, int $month, string $descriptor, string $weekday) : DateTime
{
    return new DateTime();
}
</code></pre>
<p>All tests are failing, but there are no syntax errors - perfect.</p>
<h2 id="year-month-time">Year, month, time</h2>
<p>Breaking this exercise up into pieces, I first comment out all but the first test method. That lets me focus on one feature/requirement at a time.</p>
<p>Since there is only a description of a date and the tests assert always against a time of 0, I can start by initializing a <code>DateTime</code> object and setting the time.</p>
<pre><code class="language-php">$date = new DateTime();
$date-&gt;setTime(0, 0);
</code></pre>
<p>Next, I add the year and month. Since <code>DateTime::setDate</code> is expecting also the day as third parameter and do not yet know it, I simply declare it as 1.</p>
<pre><code class="language-php">$date-&gt;setDate($year, $month, 1);
</code></pre>
<h2 id="modifier">Modifier</h2>
<p>Now I can use <code>DateTime::modify</code> to set the actual date. I start off by just simply using first as modifier.</p>
<pre><code class="language-php">$date-&gt;modify(&quot;first $weekday of this month&quot;);
</code></pre>
<p>With this implementation, all tests against the first weekday are passing. To handle the other possible values of the descriptor, I first check whether it is equal to <code>'teenth'</code> since I will need to know that later on again. Then I will use <code>'first'</code> as modifier for the <code>'teenth'</code> descriptor. And finally, pass it to the <code>modify()</code> method.</p>
<pre><code class="language-php">$isTeenth = 'teenth' === $descriptor;
$modifier = $isTeenth ? 'first' : $descriptor;

$date-&gt;modify(&quot;$modifier $weekday of this month&quot;);
</code></pre>
<p>Now all tests are passing except for the descriptors with a value of <code>'teenth'</code>.</p>
<h2 id="teenth">Teenth</h2>
<blockquote>
<p>Note that &ldquo;monteenth&rdquo;, &ldquo;tuesteenth&rdquo;, etc are all made up words. There was a meetup whose members realized that there are exactly 7 numbered days in a month that end in &lsquo;-teenth&rsquo;. Therefore, one is guaranteed that each day of the week (Monday, Tuesday, &hellip;) will have exactly one date that is named with &lsquo;-teenth&rsquo; in every month.</p>
</blockquote>
<p>From the exercise description I learn that the day of month for the <code>'teenth'</code> descriptor has to be between 13 and 19 inclusive. However, it is not possible to know without doing some math, whether it is the second or third <em>weekday</em> in the month.</p>
<p>The simplest solution that comes to my mind, is to add 1 week to the current date, while the day of the month in not in-between 12 and 20.</p>
<pre><code class="language-php">function modify_teenth_date(DateTime $date) : DateTime
{
    $teenthDays = [
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '19',
    ];
    while (! in_array($date-&gt;format('d'), $teenthDays, true)) {
        $date-&gt;modify('+1 week');
    }

    return $date;
}
</code></pre>
<p>Et voilà, all tests are passing.</p>
<h2 id="my-solution">My solution</h2>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

function meetup_day(int $year, int $month, string $descriptor, string $weekday) : DateTime
{
    $isTeenth = 'teenth' === $descriptor;
    $modifier = $isTeenth ? 'first' : $descriptor;

    $date = new DateTime();
    $date-&gt;setDate($year, $month, 1);
    $date-&gt;modify(&quot;$modifier $weekday of this month&quot;);
    $date-&gt;setTime(0, 0);

    if ($isTeenth) {
        modify_teenth_date($date);
    }

    return $date;
}

function modify_teenth_date(DateTime $date) : DateTime
{
    $teenthDays = [
        '13',
        '14',
        '15',
        '16',
        '17',
        '18',
        '19',
    ];
    while (! in_array($date-&gt;format('d'), $teenthDays, true)) {
        $date-&gt;modify('+1 week');
    }

    return $date;
}

</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Sieve of Eratosthenes (Side Exercise)</title>
            <link>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</link>
            <pubDate>Mon, 10 Jun 2019 21:31:48 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D19
 Today I am solving the Sieve of Eratosthenes side exercise of the Exercism PHP track.
 In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D19</em></p>
<hr>
<p>Today I am solving the Sieve of Eratosthenes side exercise of the <a href="https://exercism.io">Exercism</a> PHP track.</p>
<blockquote>
<p>In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit.
It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2. The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime. This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime.</p>
</blockquote>
<p>See <a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes">https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes</a>.</p>
<h2 id="my-solution">My solution</h2>
<p>The algorithm is straight forward. There are two exceptions to a default behavior.</p>
<ol>
<li>If the limit is less than 2, an empty array can be returned.</li>
<li>When removing multiples of a prime from an array, make sure to not remove the prime itself.</li>
</ol>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

function sieve(int $limit) : array
{
    if ($limit &lt; 2) {
        return [];
    }

    $prime = 2;
    $range = range($prime, $limit);

    for (; $prime &lt;= $limit; $prime++) {
        removeMultiplesFromRange($prime, $range);
    }

    return array_values($range);
}

function removeMultiplesFromRange(int $prime, array &amp;$range) : void
{
    foreach ($range as $key =&gt; $value) {
        if ($prime === $value) {
            continue;
        }

        if (0 === $value % $prime) {
            unset($range[$key]);
        }
    }
}

</code></pre>
]]></content>
        </item>
        
        <item>
            <title>120(ish) HTML Elements</title>
            <link>https://arueckauer.github.io/posts/2019/06/120ish-html-elements/</link>
            <pubDate>Sat, 08 Jun 2019 20:32:34 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/120ish-html-elements/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D18
 Bruce Lawson gave an outstanding keynote called How to make Loveliness: an HTML Treasure Hunt at the IPC 2019.
He shared that most 2-year-olds can say about 100 words and with 2 ½ years they know close to 300 words.
One of his challenges was to
 Learn the semantics of HTML. There are 120(ish) elements, that&#39;s all!</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D18</em></p>
<hr>
<p><a href="https://twitter.com/brucel">Bruce Lawson</a> gave an outstanding keynote called <a href="https://phpconference.com/web-development/how-to-make-loveliness-an-html-treasure-hunt/">How to make Loveliness: an HTML Treasure Hunt</a> at the IPC 2019.</p>
<p>He shared that <a href="https://speakerdeck.com/brucel/webinale-berlin-4-june-2019?slide=75">most 2-year-olds can say about 100 words</a> and with 2 ½ years they know close to 300 words.</p>
<p>One of his challenges was to</p>
<blockquote>
<p>Learn the semantics of HTML. There are 120(ish) elements, that's all!</p>
</blockquote>
<p>Bruce let us know that using HTML (and CSS) wherever possible, will be</p>
<blockquote>
<ul>
<li>more performant</li>
<li>more accessible</li>
<li>more robust</li>
<li>less code to write</li>
<li>less code to test</li>
<li>more time in the pub / playing CoD / seeing our kids</li>
</ul>
</blockquote>
<p>Well, if that is not motivation enough, I don't know what is. 😄</p>
<h2 id="challenge-accepted">Challenge accepted</h2>
<p>Today I am reading through the HTML elements, provided by the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element">Mozilla Developer</a> site.</p>
<p>While most elements seem familiar, there are some I've never heard of and would read what they could be useful for. For example, <code>&lt;hgroup&gt;</code> as well as many inline text semantics elements or image and multimedia and embedded content elements.</p>
<p>It was surprising to me to see that there is a purpose for both <code>&lt;i&gt;</code> and <code>&lt;em&gt;</code> as well as <code>&lt;b&gt;</code> and <code>&lt;strong&gt;</code>. Back in the day I thought the new elements were deprecating the older ones. That's not true. Today I learned that</p>
<blockquote>
<p>Their new use is to semantically represent styles (or intended presentation), whereas <code>&lt;strong&gt;</code> and <code>&lt;em&gt;</code> represent structure.</p>
</blockquote>
<p>See <a href="https://stackoverflow.com/questions/271743/whats-the-difference-between-b-and-strong-i-and-em#comment8254050_271776">comment</a> by Natan Yellin.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This was a great exercise which I need to repeat.</p>
<h2 id="further-readings">Further readings</h2>
<ul>
<li><a href="https://stellify.net/html5-b-and-i-tags-are-going-to-be-useful-read-semantic-again/">https://stellify.net/html5-b-and-i-tags-are-going-to-be-useful-read-semantic-again/</a></li>
<li><a href="https://www.w3.org/International/questions/qa-b-and-i-tags">https://www.w3.org/International/questions/qa-b-and-i-tags</a></li>
<li><a href="https://dev.w3.org/html5/spec-author-view/the-i-element.html#the-i-element">https://dev.w3.org/html5/spec-author-view/the-i-element.html#the-i-element</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>To JWT or not to JWT</title>
            <link>https://arueckauer.github.io/posts/2019/06/to-jwt-or-not-to-jwt/</link>
            <pubDate>Fri, 07 Jun 2019 19:34:43 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/to-jwt-or-not-to-jwt/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D17
 At the IPC 2019 Authentication and Authorization was one of the two most interesting topics (event sourcing being the second). Sessions were comparing the usage of traditional authentication with the usage of JWT, maybe the future technology WebAuthn requiring no passwords for registration or login processes, using an identity provider instead of implementing our own processes over and over again, and not so quite common applications of web tokens - like physically opening doors.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D17</em></p>
<hr>
<p>At the IPC 2019 Authentication and Authorization was one of the two most interesting topics (event sourcing being the second). Sessions were comparing the usage of traditional authentication with the usage of JWT, maybe the future technology WebAuthn requiring no passwords for registration or login processes, using an identity provider instead of implementing our own processes over and over again, and not so quite common applications of web tokens - like physically opening doors.</p>
<ul>
<li><a href="https://phpconference.com/performance-security/knock-knock-whos-there-authenticating-your-single-page-apps-using-json-web-tokens/">Knock knock, who’s there? Authenticating your Single Page Apps using JSON Web Tokens</a> by <a href="https://twitter.com/sambego">Sam Bellen</a></li>
<li><a href="https://phpconference.com/php-development/the-future-of-authentication-webauthn-with-php/">The Future of Authentication – WebAuthn with PHP</a> by <a href="https://twitter.com/arneblankerts">Arne Blankerts</a></li>
<li><a href="https://phpconference.com/performance-security/why-you-shouldnt-care-about-security/">Why you shouldn’t care about Security</a> by <a href="https://twitter.com/bendechrai">Ben Dechrai</a></li>
<li><a href="https://phpconference.com/performance-security/opening-doors-with-json-web-tokens/">Opening Doors with JSON Web Tokens</a> by <a href="https://twitter.com/bendechrai">Ben Dechrai</a></li>
</ul>
<h2 id="jwt---just-a-hype">JWT - just a hype?</h2>
<p>Today <a href="https://twitter.com/lyrixx">Gregoire Pineau</a> published an article <em><a href="https://jolicode.com/blog/why-you-dont-need-jwt">Why you don’t need JWT</a></em>, in which he basically declares JWT as hype and says Basic Auth provides a simpler solution to the same problem (in most scenarios).</p>
<blockquote>
<p>But most of the time, you don’t need JWT, and your project will be simpler if you can resist to hype by refusing to use it.</p>
</blockquote>
<h2 id="jwt-adds-complexity">JWT adds complexity</h2>
<p>Now, JWT is not something trivial. The process, purpose and usage of JWT, JWS, JWE as well as access tokens and refresh tokens take some time to grasp. Probably this complexity is why JWT is so often misused - one of the reasons which is used against the usage of JWT.</p>
<p>Gregoire lists in his post the following complexity points:</p>
<ul>
<li>Usage of private and public key.
<blockquote>
<p>Like all other secrets, it’s always hard to keep them really secret.</p>
</blockquote>
</li>
<li>No revocation of valid tokens, adding the need of e.g. white-/blacklisting.</li>
<li>Short validity requires reconnect via refresh tokens.</li>
<li>No native JWT implementation in Symfony.</li>
</ul>
<h2 id="alternatives">Alternatives</h2>
<p>In his post, Gregoire demoes an alternative solution by putting HTTP basic auth to work. In Symfony this can be done without any external dependencies. Another solution could be <a href="https://paseto.io/">PASETO (Platform-Agnostic Security Tokens)</a>.</p>
<h2 id="conclusion">Conclusion</h2>
<p>The article and <a href="https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid">security issues</a> make valid points on why to avoid JWT. I have to do some further reading, to fully understand whether the flaw is really in the design or implementation of JWT. What impresses me about JWT is a self-validating token and user storage which could make accessing the user database unnecessary in many scenarios.</p>
]]></content>
        </item>
        
        <item>
            <title>IPC 2019: Day Three</title>
            <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-three/</link>
            <pubDate>Thu, 06 Jun 2019 20:49:38 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-three/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D16
 Pragmatic Queue Processing at Scale By Arne Blankerts, Principal Consultant at thePHP.cc and Sebastian Heuer, Developer Advocate at kartenmacherei.de
Arne and Sebastian deliver messages from real world problems they tackled together. It&#39;s not the first presentation of the duo. These sessions belong to the highlights of the conference (Casino night is still #1 😋). The talk gave a wonderful narrative overview of queue pressing, further readings of what might be of interest as well as learnings from their experience.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D16</em></p>
<hr>
<h2 id="pragmatic-queue-processing-at-scale">Pragmatic Queue Processing at Scale</h2>
<p><em>By <a href="https://twitter.com/arneblankerts">Arne Blankerts</a>, Principal Consultant at thePHP.cc and <a href="https://twitter.com/belanur">Sebastian Heuer</a>, Developer Advocate at kartenmacherei.de</em></p>
<p>Arne and Sebastian deliver messages from real world problems they tackled together. It's not the first presentation of the duo. These sessions belong to the highlights of the conference (Casino night is still #1 😋). The talk gave a wonderful narrative overview of queue pressing, further readings of what might be of interest as well as learnings from their experience. It's always worthwhile to attend.</p>
<p>They showed how queue processing can improve performance on legacy applications without the need to refactor or rewrite the whole code base.</p>
<blockquote>
<p>Start with the simplest thing that could possibly work</p>
</blockquote>
<p>Instead of implementing the latest hype of technology, look at the stack you already have. If MySQL is part of your stack, that is okay for events. Though it will not scale infinitely. Take/chose a pragmatic path.</p>
<p>Scaling &amp; Concurrency</p>
<ul>
<li><a href="https://reactphp.org/">ReactPHP</a> for async I/O usage,</li>
<li><a href="https://www.php.net/manual/en/book.pthreads.php">PThreads</a> - do not use it [in production|at all],</li>
<li><a href="https://www.php.net/manual/en/book.parallel.php">Parallel</a></li>
</ul>
<p>Threading</p>
<ul>
<li>PHP with ZTS (Zend thread safety)</li>
<li>FPM</li>
</ul>
<p>Can PHP talk FastCGI?</p>
<p>The Event Listener starts a handler in its own FPM process. By using <a href="https://github.com/hollodotme/fast-cgi-client">FastCGI client</a>. You can even scale to multiple FPM servers.</p>
<p>FPM Pool configuration. Sequential processing of events. Controlled shutdown by <a href="https://www.php.net/manual/en/ref.pcntl.php">signal handling</a> (better than manually killing processes and ending up in an unknown state if handler has not finished).</p>
<h2 id="do-php-frameworks-still-make-sense-lets-go-frameworkless-to-focus-on-the-domain">Do PHP Frameworks still make Sense? Let’s go Frameworkless to focus on the Domain!</h2>
<p>By <a href="https://twitter.com/damiano_dev">Damiano Petrungaro</a></p>
<p>Damiano proved in this talk his expertise on the topic of framworkless and DDD.</p>
<p>In the beginning he described the importance of frameworks, like:</p>
<ul>
<li>Pushing for innovation</li>
<li>Not reinventing the wheel</li>
<li>Defining new standards</li>
<li>Eases start for newcomers</li>
</ul>
<blockquote>
<p>It's all about dependency
Framework = Dependency</p>
</blockquote>
<p>He gave a short introduction to frameworkless and the <a href="http://frameworklessmovement.org/">Frameworkless Movement</a>, also explained that Dependencies are bad and how to avoid them.</p>
<p>The last part of his talk covered DDD, strategic and tactical design.</p>
<blockquote>
<p>The domain is not a dependency! It enforces us to model the domain first and then adapts the framework to it.</p>
</blockquote>
<p>As a conclusion, I take from this talk: <em>Adapt the framework to your domain and not your domain to the framework.</em></p>
<h2 id="migrating-with-a-metal-background">Migrating, with a Metal Background</h2>
<p><em>By <a href="https://twitter.com/johannhartmann">Johann-Peter Hartmann</a>, found and CTO of Mayflower GmbH</em></p>
<p>With <em>metal</em> Johann-Peter is referring to the on-premise server back in the days, when our monolith applications were running on them. We were taken care of everything by ourselves.</p>
<p>In his talk he showed possible options when moving to the cloud - rehosting aka &ldquo;lift and shift&rdquo;. His presentation proved him as a competent speaker on the matter with a broad knowledge. In the following, just some very few notes from his talk.</p>
<ul>
<li>Scaling, reliability up. Operational costs down.</li>
</ul>
<blockquote>
<p>It's 10 % cheaper than on premise</p>
</blockquote>
<p><em>Amazon</em></p>
<blockquote>
<p>85 % of the time it's more expensive than on premise.</p>
</blockquote>
<p><em>Dell</em></p>
<p>Downside of serverless: Application lock-in. Platform-specific function is not as easy to move to another platform as running plain PHP on various environments.</p>
<p>Razor &amp; Blades Model (cheap razor, expensive blades. cheap printer, expensive ink)
Lambda is chap, but the APIGateway is expensive.</p>
<blockquote>
<p>Average lifetime of a container in orchestrated environments: 12 hours</p>
</blockquote>
<p>Ephemeral containers. Everything is temporary. Start it, stop it, destroy it, replicate it, replace it, scale it.</p>
<blockquote>
<p>If you have a container that is active when it is not handling data, it is a server.</p>
</blockquote>
<p>Great definition of what microservices really are.</p>
<blockquote>
<p>Move complexity to places where you can automate it.</p>
</blockquote>
<blockquote>
<p>External services are the new silo
Kubernetes is the new OS</p>
</blockquote>
<h2 id="web-with-sense-how-to-build-a-start-up-that-is-not-only-profitable-but-also-improves-the-world">Web with Sense: How to build a Start-up that is not only profitable, but also improves the World</h2>
<p><em>By Christian Kroll, founder of Ecosia</em></p>
<p>Christian is a self-less person, who started an initiative that might play a major role in stopping the climate change. With the revenue of his search engine <a href="https://www.ecosia.org/">Ecosia</a> he plants trees. The company has already planted nearly 60 million trees.</p>
<blockquote>
<p>You cannot solve the climate change without planting trees. But you can solve it by planting 1 trillion trees.</p>
</blockquote>
<p>A tree &ldquo;recycles&rdquo; ~50 kg of CO2 during its lifetime. The earth has currently a capacity for ~1.2 trillion trees. It would take 1 % of military budget for the next 20 years to plant 1 trillion trees.</p>
<p>4 years after launch, Ecosia planted their one millionth tree. Until then 80 % of revenue went into tree planting. Then they changed the business model and are now giving away 100 % of their revenue.</p>
<blockquote>
<p>For the sake of profit, we are destroying our planet.</p>
</blockquote>
<p>Christian is passionate about the climate change and sharing this compassion. He challenged the audience to (1) contemplate what personal changes can be made to contribute to a positive change and (2) share those ideas with the person you sit next to. What a great exercise! I want to purchase vegetables and fruits from local producers where possible.</p>
<p>A fun fact: Ecosia has a TPO - Tree plant officer! 😃</p>
<blockquote>
<p>Sometimes I do use Google, but don't tell anyone</p>
</blockquote>
<p><a href="https://twitter.com/Christian_KrolI">Twitter</a></p>
<h2 id="opening-doors-with-json-web-tokens">Opening Doors with JSON Web Tokens</h2>
<p><em>By <a href="https://twitter.com/bendechrai">Ben Dechrai</a>, Technologist, Presenter, <a href="https://auth0.com">Auth0</a> Developer Evangelist, Community Advocate</em></p>
<p>Ben gave an interesting presentation on a rather unusual way to use JSON Web Tokens: Opening doors. He elaborated on the Amazon Key Vulnerability. He then demoed the usage of JSON Web Tokens as a safer way which also prevents such attacks. I did not take much notes, but really enjoyed the demo. Thank you for even bringing a door all the way from Australia.</p>
<h2 id="branching-strategies-choose-wisely-to-minimize-costs">Branching Strategies: choose wisely to minimize Costs</h2>
<p><em>By <a href="https://twitter.com/gbtekkie">Georgiana Gligor</a>, Large-Scale Application Architect. Public Speaker. PhD Student.</em></p>
<p>Georgiana made extensive research on Branching Strategies. In this talk she presents her learnings with the audience, so they can</p>
<blockquote>
<p>Choose wisely to minimize costs.</p>
</blockquote>
<p>She gave a reading recommendation and an analogy on the book from HBR's 10 must read: On Change Management. Because our code basis is about change management.</p>
<p>In this presentation she did not provide a ready-to-use recipe for any situation, rather aimed for:</p>
<ul>
<li>a framework to make informed decisions,</li>
<li>highlight costs and</li>
<li>where to look when one needs help.</li>
</ul>
<p>She continued on talking about various VCS, their current approximate usage. And gave a recommendation to use git, because &ldquo;it is the best&rdquo;.</p>
<blockquote>
<p>It’s not like git got everything right, but it got all the really basic issues right in a way that no other SCM had ever done before.</p>
</blockquote>
<p><em>Linus Torvalds</em></p>
<p>She is referring to feature branches as topic branches, as it is more suitable in her opinion.</p>
<p>The Merge Workflow generates more noise in the history than the Rebase Workflow.</p>
<p>She compared stable trunk aka trunk-based development with unstable trunk. The latter making usage of release branches.</p>
<p>Strategies</p>
<ul>
<li>Lone wolf (one person working for a long period)</li>
<li>Git flow (high noise due to many branches) perfect in environments where clear rules are required</li>
<li>GitHub flow (stable trunk, pull requests with signoffs/approvals) great when deploying often (like daily)</li>
<li>simple git flow</li>
<li>workflow for agile teams (master as next release, qa branch for releasing)</li>
<li>Gitlab flow (master as next release, staging, production, 2-3 stable, cherry picking) agile approach</li>
<li>Gitworkflows (last stable release, next release, integration testbed, proposed updates, topic branches)</li>
</ul>
<blockquote>
<p>Men have become the tools of their tools</p>
</blockquote>
<p>Henry David Thoreau</p>
<blockquote>
<p>Don't become dependent on your tools.</p>
</blockquote>
<p>Because tools are there to help, not to block from being productive. They are just tools.</p>
]]></content>
        </item>
        
        <item>
            <title>IPC 2019: Day Two</title>
            <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-two/</link>
            <pubDate>Wed, 05 Jun 2019 21:32:35 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-two/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D15
 I have to say that I am surprised by the overall high-quality sessions. This is one of the best conferences I attended. Thanks to all the speakers and their effort and time they put into preparation. You rock!
Modern SQL: Evolution of a Dinosaur By Markus Winand, &amp;ldquo;SQL renaissance ambassador&amp;rdquo;, independent author, trainer, and consultant on all things SQL</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D15</em></p>
<hr>
<p>I have to say that I am surprised by the overall high-quality sessions. This is one of the best conferences I attended. Thanks to all the speakers and their effort and time they put into preparation. You rock!</p>
<h2 id="modern-sql-evolution-of-a-dinosaur">Modern SQL: Evolution of a Dinosaur</h2>
<p><em>By <a href="https://twitter.com/MarkusWinand">Markus Winand</a>, &ldquo;SQL renaissance ambassador&rdquo;, independent author, trainer, and consultant on all things SQL</em></p>
<p>It was a bliss listening to Markus share his expertise on SQL. The session was absolutely interesting and informative.</p>
<p>He started off by asking the rhetorical question</p>
<blockquote>
<p>Still Using Windows 3.1? So why stick to SQL-92?</p>
</blockquote>
<p>During the next 45 minutes he spoke about the various standards, which features were introduced, and the current state of which databases are supporting said features. He made it more than clear, that if one is still using MySQL 5, it is time to update to MySQL 8.</p>
<p>I was able to take notes of only a fraction of the session. If you get a chance to attend one of his talks, make sure you don't miss it!</p>
<p><strong>SQL:1999</strong></p>
<p>In 1999 recursive queries were added, which allows transitive closures like in child-parent-relations.
GROUPING SETS</p>
<p><strong>SQL:2003</strong></p>
<p>An important function was added: Windows Function aka the over clause.</p>
<blockquote>
<p>If you have SQL on you CV, but don't know Window Function, you need to cross it out. But you can add it again in 10 min, because I will teach it now!</p>
</blockquote>
<p>What a great guy. 😂</p>
<p><strong>SQL:2011</strong></p>
<blockquote>
<p>If you're using OFFSET for pagination, you're doing it wrong. It gives you the wrong result and is slow.</p>
</blockquote>
<p>Read more about it <a href="https://use-the-index-luke.com/no-offset">here</a>.</p>
<p>SQL:2011 introduces System Versioning, basically time traveling for data storage. <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code> are <code>DESTRUCTIVE</code>. Tables can be system versioned, application versioned or both.</p>
<p>System versioning</p>
<ul>
<li>Keeps track of changes as these are learned (sets timestamp for when change is known).</li>
<li>Validation columns updated by system.</li>
</ul>
<p>Application versioning</p>
<ul>
<li>Keeps track of changes when they actually happened (actual timestamp of when the change occurred).</li>
<li>Validation columns updated by application.</li>
</ul>
<p><strong>SQL:2016</strong></p>
<p><code>JSON_TABLE</code> allows consumption of JSON strings in SQL and can serve as a bridge between NoSQL and relational databases.</p>
<p><strong>Conclusion</strong></p>
<p>SQL has evolved beyond the relational idea; SQL has broken out of the relational cage.</p>
<blockquote>
<p>If you use SQL for CRUD operations only, you are doing it wrong.</p>
</blockquote>
<p>SQL was not designed to be a simple data store (row-by-row processing). You should collect all the data on the database, transform it into a form which is more useful and return it.</p>
<p>Further reading</p>
<ul>
<li><a href="https://modern-sql.com/">https://modern-sql.com/</a></li>
<li><a href="https://use-the-index-luke.com/">https://use-the-index-luke.com/</a></li>
</ul>
<h2 id="introduction-to-architectural-katas">Introduction to Architectural Katas</h2>
<p><em>By <a href="https://twitter.com/FrankS">Frank Sons</a>, a freelancing developer and consultant for agile software and code quality</em></p>
<p>Architectural Katas can bridge the gap between requirements and technical implementation.</p>
<blockquote>
<p>The software architecture are those decisions, that are hard to change.</p>
</blockquote>
<p><em>Martin Fowler</em></p>
<blockquote>
<p>The greatest teacher, failure is</p>
</blockquote>
<p>Since we can learn so much from failure, how could we fail more often.</p>
<blockquote>
<p>A kata is an exercise in karate where you repeat a form many, many times, making little improvements in each.</p>
</blockquote>
<p><em><a href="http://codekata.com/">Codekata.com</a></em></p>
<p>Code kata are very simple problems, which can be solved in 20 minutes to 1 hour. It helps training to look at solutions from other perspective on each iteration.</p>
<p>Basic idea</p>
<ul>
<li>Manageable in size and duration</li>
<li>Make mistakes, fail and gain experience</li>
<li>Get feedback in a group</li>
</ul>
<p>You put yourself in a situation, where you need to be prepared to fail. And take failing as a learning experience.</p>
<p>Two scenarios</p>
<ul>
<li>3 to 5 people in group (optimal being 3, since all are involved and challenged, allowing a lot of discussion)</li>
<li>4 to 10 groups vs max 3 groups (depending on available mentors)</li>
<li>Different Projects / Kata vs Same Project / Kata for each group (the latter allowing collaboration and discussion afterwards)</li>
</ul>
<p>How does it work?</p>
<p>Introduction &gt; Planning &gt; Presentation &gt; Feedback</p>
<p>Rules</p>
<p>The goal is not to come up with a concrete solution. The goal is to come up with a rough architectural vision of the project and defend questions about it. So, it is crucial to gain a common understanding of defined requirements. Assumptions about technologies have to be clearly defined and spelled out. You may not assume you have hiring/firing authority over the development team (sizing up the team to meet deadline) (what a bummer 😂). Any technology is fair game (but you must justify its use). Any other rules you may ask about.</p>
<p>If you ask a customer whether they want to a feature, the answer usually will be &ldquo;Yes&rdquo;. Your duty is to communicate the impact on the timeline and costs. The business decision is the customer's responsible.</p>
<p>How do I get from unclear requirements to an architectural structure?</p>
<p>Instead of rewriting specs in own words, use a structured language. As a communication tool, UML is fantastic.</p>
<ul>
<li>define user roles</li>
<li>define use cases</li>
<li>&hellip;</li>
</ul>
<p>The first version won't be good.</p>
<blockquote>
<p>Plan to throw one away</p>
</blockquote>
<p>Frederick P. Brooks - Mythical Man Month</p>
<p>Rapid Prototyping</p>
<p>What about iterating throwing away versions - throwing away the first three or four versions. Or iterate parts of the draft that don't work.</p>
<p>Work on a whiteboard. It makes easy to wipe things away. Flipcharts is the perfect example of what happens when you implement code. Once implemented it is very hard to erase or change.</p>
<p>Container diagram or <a href="https://c4model.com/">C4 Model</a>.</p>
<p>UML can be very confusing, C4 only uses the most four important. Makes usage easy and lets you focus on designing.</p>
<h2 id="why-you-shouldnt-care-about-security">Why you shouldn’t care about Security</h2>
<p><em>By <a href="https://twitter.com/bendechrai">Ben Dechrai</a>, Technologist, Presenter, <a href="https://auth0.com">Auth0</a> Developer Evangelist, Community Advocate</em></p>
<p>Ben's sessions are always fun to attend. He is an experienced speaker who quickly informs about all necessary details and also shows a great live demo bridging the gap between theory and practical use (at least the sessions I attended so far).</p>
<p>Traditional authentication and authorization can become complex quickly, especially when scaling.</p>
<p>As we don't implement our own payment service, but use a provider, we should not implement our own authentication mechanism, but use an identity provider for login process as user storage.</p>
<p>Live demo application of creating a PHP web application adding Auth0 as identity provider.</p>
<p>First impression: Very well documented, simple to implement, ready-to-go.</p>
<ul>
<li><a href="https://auth0.com/">Auth0</a></li>
<li><a href="https://github.com/auth0/auth0-PHP">auth0/auth0-PHP</a></li>
</ul>
<h2 id="php-to-hack-an-incrementally-typed-adventure-at-slack">PHP to Hack, an incrementally typed Adventure at Slack</h2>
<p><em>By Scott Sandler, a Senior Staff Engineer at <a href="https://slack.com">Slack</a></em></p>
<p>Awesome talk with Slack's journey on migrating from PHP to Hack. There was so much information, I could only take notes on a few thoughts. I definitely recommend viewing the slides.</p>
<ul>
<li>We came to Hack for performance but stayed for type safety.</li>
<li>hh_client Type Checker</li>
<li>Hack will drop PHP support</li>
<li>Inferred Union Types</li>
<li>Generics: Array, Hack Arrays, Shapes</li>
<li>Shapes allow type definitions of arrays with mixed values - But why not use a class instead?</li>
<li>Type refinement knows that a key is present within an if condition where you check Shapes::keyExists</li>
<li>Hack standard library improves standard functions.</li>
<li>Hack Pipeline with HSL</li>
<li>Type Checked Regex</li>
<li>XHP: Type safe HTML.</li>
<li>Greatest task in migrations: Type safety</li>
<li>You lose vendor libraries (incompatible to composer (PHP) packages)!!</li>
<li>Instead of performance measures etc. internal survey on how developers feel about the code base. Large majority confirmed it improves, because type checks help understand what the code is doing.</li>
</ul>
<p><a href="https://www.slideshare.net/ScottSandler1/php-to-hack-at-slack">Slides</a>
<a href="https://twitter.com/scott_sandler">Twitter</a></p>
<h2 id="getting-started-with-php-on-aws-lambda">Getting started with PHP on AWS Lambda</h2>
<p><em>By Thomas Bley, Senior PHP Developer at <a href="https://www.bringmeister.de/">Bringmeister</a></em></p>
<p>I'm new to AWS, so I tried following as much as I could. Thomas made a great and thorough job explaining each step to setup lambda functions on AWS. It looks very promising and interesting for the following use cases.</p>
<ul>
<li>cronjobs (don't pay for idle time)</li>
<li>websites with unknown traffic spikes (tv advertising)</li>
<li>event based workers (Kinesis, SQS, S3, etc.)</li>
<li>event based backend tasks (images resizing, creating PDFs, sending e-mails, etc.)</li>
<li>integration with database event, e.g. RDS Aurora</li>
</ul>
<p><a href="https://github.com/thomasbley/php-lambda">Slides</a></p>
<h2 id="in-fünf-jahren-wird-es-keine-tester-mehr-geben">In fünf Jahren wird es keine Tester mehr geben</h2>
<p><em>By <a href="https://twitter.com/phphatesme">Nils Langner</a>, Founder and CTO of <a href="https://www.leankoala.com">Leankoala</a> // Rethink Web Testing</em></p>
<p>In five years, there will be no more testers.</p>
<p>I remember Nils from his successful blog phphatesme, which later became <a href="https://www.thewebhatesme.com">the web hates me</a>. It used to be the most successful PHP blog in Germany. I liked it for the thought-provoking articles and excellent exchange among visitors.</p>
<p>Although the title is not meant (absolutely) seriously, again Nils delivers a message that encourages to reflect on common opinions and to exchange views on testing.</p>
<p>During his presentation he touched upon 10 reasons that could make testers (almost) obsolete. The following are just my notes and not necessarily a true representation of what Nils delivered.</p>
<ul>
<li>It is a boring job. Fewer and fewer developers decide to become a tester.</li>
<li>There is a risk-based approach in which tests cover only the most important components. Not everything is equally important.</li>
<li>The team, not the individual is testing.</li>
<li>Explorative testing for large releases rather than testing each release. One way to accomplish this, could be crowd-testing (Testbirds, test.io, Applause, Testival)</li>
<li>Static code analysis and the use of software metrics. Give a piece of code a qualitive number value. Linting, check for syntactical correctness.</li>
<li>Error costs dropped. When shipping code on CD, bugs were fatal. For web applications a fix is done much quicker. Especially with the help of monitoring (New Relic, Appdynamics, Instana, Tideways).</li>
<li>Your project is nothing special. In the early days everyone was writing their own framework or CMS. It was 90 % own code and 10 % 3-rd-party code. Nowadays it turned, 10 % being own code, 90 % being 3-rd-party.</li>
<li>Your project will not succeed. 9 out of 10 start-ups fail during the first year of operation. According to experience this could be applied to features. So instead of doing things right, try doing the right thing.</li>
<li>Fully automated tests. Click-path testing tools like Selenium are time consuming and complicated. Property-based testing where it checks for the presence of business-relevant elements could provide the same quality for much less cost.</li>
</ul>
<blockquote>
<p>If all business-relevant elements of a website are present, it is statistically likely, that there are no critical errors.</p>
</blockquote>
]]></content>
        </item>
        
        <item>
            <title>IPC 2019: Day One</title>
            <link>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-one/</link>
            <pubDate>Tue, 04 Jun 2019 22:53:29 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/ipc-2019-day-one/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D14
 This was a great first day
How to make Loveliness: an HTML Treasure Hunt Keynote by Bruce Lawson, one of the editors of the W3C’s HTML5.3 specification
To me, this was the best keynote I have ever attended. He presented a topic that could easily be boring and dry in a way that captured the audience&#39;s (well at least my) full attention.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D14</em></p>
<hr>
<p>This was a great first day</p>
<h2 id="how-to-make-loveliness-an-html-treasure-hunt">How to make Loveliness: an HTML Treasure Hunt</h2>
<p><em>Keynote by <a href="https://twitter.com/brucel">Bruce Lawson</a>, one of the editors of the W3C’s HTML5.3 specification</em></p>
<p>To me, this was the best keynote I have ever attended. He presented a topic that could easily be boring and dry in a way that captured the audience's (well at least my) full attention. Bruce managed to make this very informative and funny at the same time.</p>
<p>I left with a desire to get to know the 120-ish HTML elements better and use them for what they were designed. I learned that the <code>div</code> and <code>span</code> elements basically serve no special purpose. They are however misused, if there is a native HTML element covering that purpose but is not used. This will also break a11y.</p>
<p>Using proper HTML tags means</p>
<ul>
<li>more performant</li>
<li>more accessible</li>
<li>more robust</li>
<li>less code to write</li>
<li>less code to test</li>
<li>more time in the pub / playing CoD /seeing your kids</li>
</ul>
<p><a href="https://speakerdeck.com/brucel/webinale-berlin-4-june-2019">Slides</a></p>
<h2 id="a-happy-end-for-the-docker-for-development-drama">A Happy End for the Docker for Development Drama</h2>
<p><em>Talk by <a href="https://twitter.com/robertlemke">Robert Lemke</a>, founder of the Neos open source project</em></p>
<p>Maybe I did come with different expectations than what the speaker intended. It was difficult following along the presentation. Robert mentioned lots of problems his faced during the setup of a Docker development environment, but it was not always clear what the solution was and how he came to it.</p>
<p>His initial motivation to move from a &ldquo;traditional&rdquo; setup (all requirements are installed directly on the developer machine) and virtualization was</p>
<ul>
<li>to have a fast operating development environment,</li>
<li>which is easily to set up and</li>
<li>makes switching between project easy.</li>
</ul>
<p>He spent a lot of time addressing the performance issue of mounted drives under macOS and comparing possible solutions. In the end his setup is a mixture of mounted directories and rsync. An attendee also mentioned the usage of docker-sync.</p>
<p>I am leaving this session with a desire to look more into Docker containers.</p>
<h2 id="a-case-for-generics-in-php">A Case for Generics in PHP</h2>
<p><em>Talk by <a href="https://twitter.com/chrisholland">Chris Holland</a>, Team Lead at TriNet</em></p>
<p>Chris managed to prepare and present a well-structured talk on Generics in PHP, coming up with custom solutions where PHP does not (yet) provide native implementations and comparing implementations of Generics in other languages like Java and C#.</p>
<p>He also talked about the difficulties of implementing Generic Types in PHP. An <a href="https://wiki.php.net/rfc/generics">RFC</a> for this has been around since the beginning of 2016. Compiled languages will check types during compilation. Thus, fatal errors are thrown early. Whereas PHP will run type checks much later, after deployment during the actual run and compilation. The implementation would be a significant challenge and added workload during runtime.</p>
<p>In a conversation with <a href="https://twitter.com/SaraMG">Sara Goleman</a>, she mentioned to him a possible approach by</p>
<ul>
<li>Not checking Generic Types at runtime</li>
<li>Enhance syntax support, but &ldquo;throw it away&rdquo; at compile time</li>
<li>Rely upon static analyzers and IDEs</li>
</ul>
<p><a href="http://bit.ly/generics-slids">Slides</a></p>
<h2 id="knock-knock-whos-there-authenticating-your-single-page-apps-using-json-web-tokens">Knock knock, who’s there? Authenticating your Single Page Apps using JSON Web Tokens</h2>
<p><em>Talk by <a href="https://twitter.com/sambego">Sam Bellen</a>, Developer Evangelist at Auth0</em></p>
<p>This was a fully loaded talk with tons of information about JWT to process. Excellent!</p>
<p>The issue with Cookies is, that they don't like CORS, require state and are issued for a certain domain. A solution to that issue could be tokens. Sam explained the registration and login processes using backend authentication with session cookies and token-based authentication using JWT. He also talked about a possible solution of password-fee authentications with the W3C standard WebAuthn. He demoed it using an authenticator device.</p>
<p><a href="https://jwt.sambego.tech/">Slides</a></p>
<h2 id="an-introduction-to-symfony-messenger">An Introduction to Symfony Messenger</h2>
<p><em>By <a href="https://twitter.com/dbrumann">Denis Brumann</a>, Software Developer at Sensiolabs</em></p>
<p>This talk gave an excellent introduction to the Symfony messenger component in the brand new 4.3 release from last Friday. It's straight forward and easy to get started with. It comes with transporters for AMQP, Redis and Doctrine. Custom implementations are also possible. Denis also showed the most important CLI commands to manage the messenger.</p>
<p>On first impression it looks like there is less configuration (and also options available) than <a href="https://github.com/php-enqueue">Enqueue</a>.</p>
<h2 id="the-future-of-authentication--webauthn-with-php">The Future of Authentication – WebAuthn with PHP</h2>
<p><em>By <a href="https://twitter.com/arneblankerts">Arne Blankerts</a>, Principal Consultant at thePHP.cc</em></p>
<p>Again, Arne did not fall short of expectations by delivering an interesting presentation on WebAuthn. After making a well-prepared introduction to the challenges of password-based authentications, he went into detail on the WebAuthn specifications and finished with demoing registration and login with the PHP implementation <a href="https://github.com/lbuchs/WebAuthn">lbuchs/WebAuthn</a>. There is also a demo client available on [https://webauthn.lubu.ch/_test/client.html].</p>
<p>Arne made good experiences with the products of <a href="https://www.yubico.com/">Yubico</a>.</p>
<p>Further resources can be found at</p>
<ul>
<li><a href="https://webauthn.io/">https://webauthn.io/</a></li>
<li><a href="https://webauthn.me/">https://webauthn.me/</a></li>
<li><a href="https://webauthn.guide/">https://webauthn.guide/</a></li>
<li><a href="https://demo.yubico.com/webauthn">https://demo.yubico.com/webauthn</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Difference of Squares -Part II</title>
            <link>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</link>
            <pubDate>Mon, 03 Jun 2019 19:25:05 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D13
 In the meanwhile, dstockto reviewed and approved my solution. 🤘🏼 Funny story: He found my blog and saw my submission here before seeing it on Exercism.
He gave me an interesting additional challenge, to use &amp;ldquo;closed&amp;rdquo; form math-based solutions. This would also allow performance improvement, since the current implementation will take longer the larger $number is.
Square Of Sum For this function dstockto mentioned the Gauss formula.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D13</em></p>
<hr>
<p>In the meanwhile, <a href="https://twitter.com/dstockto">dstockto</a> reviewed and approved my solution. 🤘🏼 Funny story: He found my blog and saw my submission here before seeing it on Exercism.</p>
<p>He gave me an interesting additional challenge, to use &ldquo;closed&rdquo; form math-based solutions. This would also allow performance improvement, since the current implementation will take longer the larger <code>$number</code> is.</p>
<h2 id="square-of-sum">Square Of Sum</h2>
<p>For this function dstockto mentioned the <a href="https://de.wikipedia.org/wiki/Gau%C3%9Fsche_Summenformel">Gauss formula</a>. This is a form to sum the first n positive integers.</p>
<pre><code class="language-php">
function squareOfSum(int $number) : int
{
    $sum = ($number * $number + $number) / 2;
    return $sum \* \$sum;
}

</code></pre>
<h3 id="sum-of-squares">Sum Of Squares</h3>
<p>Now researching for a form to sum squares, I come across a wiki page on <a href="https://brilliant.org/wiki/sum-of-n-n2-or-n3/">Brillant</a>. Under the paragraph <em>Sum of the Squares of the First n Positive Integers</em> I find what I am looking for. Read the linked article, if you're interested in more.</p>
<p>This is the refactored function:</p>
<pre><code class="language-php">function sumOfSquares(int $number) : int
{
    return ($number * ($number + 1) * (2 * $number + 1)) / 6;
}

</code></pre>
<h3 id="completed">Completed</h3>
<p>The tests are all green and I am very happy to have taken the additional challenge. In my first solution, I made usage of PHP standard functions only. Now with a mathematical approach, the code became much more readable.</p>
]]></content>
        </item>
        
        <item>
            <title>Php Version Manager: First Idea</title>
            <link>https://arueckauer.github.io/posts/2019/06/php-version-manager-first-idea/</link>
            <pubDate>Sat, 01 Jun 2019 21:27:11 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/06/php-version-manager-first-idea/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D12
 With a working CLI PHP version switcher, it would be very neat to also have a CLI PHP version manager, which allows the automated installation of available PHP versions. As an inspiration I am looking with one eye toward the nvm. I am aware of the phpvm package. This package provided by Anthony Ferrara is far from stable and currently supports only Ubuntu.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D12</em></p>
<hr>
<p>With a working CLI PHP version switcher, it would be very neat to also have a CLI PHP version manager, which allows the automated installation of available PHP versions. As an inspiration I am looking with one eye toward the <a href="https://github.com/nvm-sh/nvm">nvm</a>. I am aware of the <a href="https://github.com/ircmaxell/phpvm">phpvm</a> package. This package provided by <a href="https://twitter.com/ircmaxell">Anthony Ferrara</a> is far from stable and currently supports only Ubuntu. My focus will be the Windows platform.</p>
<h2 id="functionality">Functionality</h2>
<p>Some commands that come in handy.</p>
<ul>
<li><code>list</code> to list (by <code>pvm</code>) locally installed PHP versions</li>
<li><code>list-remote</code> to list all available PHP versions</li>
<li><code>install &lt;version&gt;</code> to install given PHP version</li>
<li><code>use &lt;version&gt;</code> to switch to given PHP version</li>
<li><code>uninstall &lt;version&gt;</code> to uninstall given PHP version</li>
</ul>
<h2 id="retrieve-available-php-versions">Retrieve available PHP versions</h2>
<p>In order for this project to even work, I need to be able to fetch a list of available PHP versions. On <a href="https://windows.php.net/download">windows.php.net/download</a> the current releases are listed. Parsing that HTML is not too sexy. So, I am looking for anything else like a RSS feed or so. At first glance I cannot find anything. As I have a closer look on the download links, I notice there is a directory listing available for <a href="https://windows.php.net/downloads/releases/">releases</a>, <a href="https://windows.php.net/downloads/releases/archives/">archives</a> and <a href="https://windows.php.net/downloads/releases/latest/">&ldquo;latest&rdquo;</a>. The HTML does not look very strict. The capital tags remind me on how HTML used to be written ages ago. But that would work.</p>
<p>Just to make sure I don't miss any other options, I'm <a href="https://twitter.com/arueckauer/status/1134907160092168193">pinging</a> Pierre Joye - Development Team Leader.</p>
<h2 id="next">Next</h2>
<p>Each PHP version is currently offered for x86 and x64 system versions with each a thread safe and non-thread safe version. For now, I would only offer the x64 thread safe option, to go with Apache and PHP running as module. x86 versions should work similar and probably could be added pretty easily. However, I am not sure why one would want to use them anymore.</p>
]]></content>
        </item>
        
        <item>
            <title>Php Version Switcher: The Function</title>
            <link>https://arueckauer.github.io/posts/2019/05/php-version-switcher-the-function/</link>
            <pubDate>Fri, 31 May 2019 22:56:25 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/php-version-switcher-the-function/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D11
This is part four of a series of articles about the PHP Version Switcher.
 Part One: Php Version Switcher: PowerShell Module Part Two: Php Version Switcher: PowerShell Naming Convention Part Three: Php Version Switcher: The Structure   Today I finally breathe life into the module function. 🕺🏼
Administrator privileges Since the Apache services will be restarted, the module requires administrator privileges.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D11</em></p>
<p>This is part four of a series of articles about the <a href="https://github.com/arueckauer/pvs">PHP Version Switcher</a>.</p>
<ul>
<li>Part One: <a href="/posts/2019/05/php-version-switcher-powershell-module/">Php Version Switcher: PowerShell Module</a></li>
<li>Part Two: <a href="/posts/2019/05/php-version-switcher-powershell-naming-convention/">Php Version Switcher: PowerShell Naming Convention</a></li>
<li>Part Three: <a href="/posts/2019/05/php-version-switcher-the-structure/">Php Version Switcher: The Structure</a></li>
</ul>
<hr>
<p>Today I finally breathe life into the module function. 🕺🏼</p>
<h2 id="administrator-privileges">Administrator privileges</h2>
<p>Since the Apache services will be restarted, the module requires administrator privileges. I define the requirement in the module by adding the following line.</p>
<pre><code class="language-powershell">#Requires -RunAsAdministrator
</code></pre>
<p>When opening a new PowerShell, an error is raised.</p>
<p><img src="/img/php-version-switcher-function/requires-run-as-administrator.png" alt="Module requires administrator-privileges"></p>
<p>Now, I either</p>
<ul>
<li>a) add a condition/parameter that the module is only imported when running an elevated shell or</li>
<li>b) move the import to a profile that gets only loaded when running an elevated shell.</li>
</ul>
<p><a href="https://stackoverflow.com/users/2150063/hal9256">HAL9256</a> was so kind to help me out here by providing an <a href="https://stackoverflow.com/questions/56367327/how-to-import-a-powershell-module-for-administrators-only/56367460#56367460">answer</a>.</p>
<p>It works when I add the following condition to my <code>profile.ps1</code>.</p>
<pre><code class="language-powershell">$currentPrincipal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
if ($currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Import-Module pvs
}
</code></pre>
<h2 id="configuration">Configuration</h2>
<p>For right now, I will hard-code the available PHP versions in a switch statement. In the future I would like to extract the configuration or even automate it if possible. I add the following switch statement to my pvs function.</p>
<pre><code class="language-powershell">switch ($version) {
    &quot;7.0&quot; { $phpPath = &quot;C:\webserv\php-7.0.33-Win32-VC14-x64&quot; }
    &quot;7.1&quot; { $phpPath = &quot;C:\webserv\php-7.1.29-Win32-VC14-x64&quot; }
    &quot;7.2&quot; { $phpPath = &quot;C:\webserv\php-7.2.18-Win32-VC15-x64&quot; }
    &quot;7.3&quot; { $phpPath = &quot;C:\webserv\php-7.3.5-Win32-VC15-x64&quot; }
    &quot;7.4&quot; { $phpPath = &quot;C:\webserv\php-7.4-ts-windows-vc15-x64-r3322ae2&quot; }
    Default { throw &quot;Provided PHP version $version is not supported&quot; }
}
</code></pre>
<h2 id="remove-existing-symlink">Remove existing symlink</h2>
<p>The following lines remove the existing symlink.</p>
<pre><code class="language-powershell">Write-Host &quot;Removing SymbolicLink...&quot; -ForegroundColor DarkCyan
Write-Host &quot;&quot;
(Get-Item C:\webserv\php\).Delete()
</code></pre>
<h2 id="create-new-symlink">Create new symlink</h2>
<p>The following lines create the new symlink.</p>
<pre><code class="language-powershell">Write-Host &quot;Creating SymbolicLink...&quot; -ForegroundColor DarkCyan
Write-Host &quot;&quot;
New-Item -ItemType SymbolicLink -Path C:\webserv\ -Name php -Value $phpPath
</code></pre>
<h2 id="restart-apache-service">Restart Apache service</h2>
<p>The following lines restart the Apache service.</p>
<pre><code class="language-powershell">Write-Host &quot;Restarting Apache...&quot; -ForegroundColor DarkCyan
Write-Host &quot;&quot;
C:\webserv\httpd-2.4.39-win64-VC15\Apache24\bin\httpd.exe -k restart
</code></pre>
<h2 id="summary">Summary</h2>
<p>My <code>pvs.psm1</code> file looks like the following.</p>
<pre><code class="language-powershell">&lt;#
  .Synopsis
  PHP version switcher for Windows

  .Description
  This function switches to a specified PHP version in an environment where
  multiple PHP versions are installed as Apache Modules.

  .Parameter version
  The PHP version to switch to.

  .Example
  pvs 7.3
#&gt;

#Requires -RunAsAdministrator

# @todo Add configuration file with
# - PHP versions
# - Apache path
# - Smylink path &amp; name
# - Directory(/ies) containing log files
# @todo Parameter to just restart Apache
# @todo Parameter to delete log files
function pvs {
    [CmdletBinding()]

    # Fetch version to switch to
    Param (
        [Parameter(Mandatory = $true, ValueFromPipeline = $true)] [Alias(&quot;v&quot;)] [String]$version
    )

    switch ($version) {
        &quot;7.0&quot; { $phpPath = &quot;C:\webserv\php-7.0.33-Win32-VC14-x64&quot; }
        &quot;7.1&quot; { $phpPath = &quot;C:\webserv\php-7.1.29-Win32-VC14-x64&quot; }
        &quot;7.2&quot; { $phpPath = &quot;C:\webserv\php-7.2.18-Win32-VC15-x64&quot; }
        &quot;7.3&quot; { $phpPath = &quot;C:\webserv\php-7.3.5-Win32-VC15-x64&quot; }
        &quot;7.4&quot; { $phpPath = &quot;C:\webserv\php-7.4-ts-windows-vc15-x64-r3322ae2&quot; }
        Default { throw &quot;Provided PHP version $version is not supported&quot; }
    }

    Write-Host &quot;PHP Version Switcher 1.0.0 by Andi Rückauer&quot; -ForegroundColor Blue
    Write-Host &quot;&quot;
    Write-Host &quot;Switching to version: $version...&quot; -ForegroundColor DarkCyan
    Write-Host &quot;&quot;

    # Remove SymbolicLink
    # @todo Only delete, if it does exist. Get-Item throws an error otherwise.
    Write-Host &quot;Removing SymbolicLink...&quot; -ForegroundColor DarkCyan
    Write-Host &quot;&quot;
    (Get-Item C:\webserv\php\).Delete()

    # Create new symlink
    Write-Host &quot;Creating SymbolicLink...&quot; -ForegroundColor DarkCyan
    Write-Host &quot;&quot;
    New-Item -ItemType SymbolicLink -Path C:\webserv\ -Name php -Value $phpPath
re
    # Restart Apache
    # @todo If log files are to be deleted: Stop Apache service, delete log files, start Apache service
    Write-Host &quot;Restarting Apache...&quot; -ForegroundColor DarkCyan
    Write-Host &quot;&quot;
    C:\webserv\httpd-2.4.39-win64-VC15\Apache24\bin\httpd.exe -k restart
}

Export-ModuleMember -Function pvs
</code></pre>
<p>As you may have noticed, I added already some <code>@todo</code> tags for improvement and further ideas.</p>
<h2 id="test">Test</h2>
<p>I will now test the <code>pvs</code> module by switching from PHP 7.2 to PHP 7.3.</p>
<pre><code class="language-powershell">php -v;pvs 7.3;php -v
</code></pre>
<p><img src="/img/php-version-switcher-function/pvs-in-action.png" alt="PHP Version Switcher in action"></p>
<p>Bingo! 🙌🏼</p>
<h2 id="next-steps">Next steps</h2>
<p>There is already a to-do list with improvements. Configuration is probably one of the most important due to reusability reasons. I would prefer a less verbose output.</p>
<p>What would you add or change? Let me know on <a href="https://twitter.com/arueckauer">Twitter</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Php Version Switcher: The Structure</title>
            <link>https://arueckauer.github.io/posts/2019/05/php-version-switcher-the-structure/</link>
            <pubDate>Thu, 30 May 2019 22:47:03 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/php-version-switcher-the-structure/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D10
This is part three of a series of articles about the PHP Version Switcher.
 Part One: Php Version Switcher: PowerShell Module Part Two: Php Version Switcher: PowerShell Naming Convention Part Four: Php Version Switcher: The Function   Today I will talk about the structural concept of the PHP Version Switcher.
On Windows you need to add the path of your PHP location to the system environment variable PATH.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D10</em></p>
<p>This is part three of a series of articles about the <a href="https://github.com/arueckauer/pvs">PHP Version Switcher</a>.</p>
<ul>
<li>Part One: <a href="/posts/2019/05/php-version-switcher-powershell-module/">Php Version Switcher: PowerShell Module</a></li>
<li>Part Two: <a href="/posts/2019/05/php-version-switcher-powershell-naming-convention/">Php Version Switcher: PowerShell Naming Convention</a></li>
<li>Part Four: <a href="/posts/2019/05/php-version-switcher-the-function/">Php Version Switcher: The Function</a></li>
</ul>
<hr>
<p>Today I will talk about the structural concept of the PHP Version Switcher.</p>
<p>On Windows you need to add the path of your PHP location to the system environment variable <code>PATH</code>. Switching in-between different PHP versions would mean to also to update the <code>PATH</code> each time. Furthermore, if Apache is supposed to be running the same PHP version, the <code>LoadModule</code> must be updated to the &ldquo;new&rdquo; PHP location. That's just laborious and not fun at all. But PHP Version Switcher to the rescue! 🤹🏼‍♂️</p>
<h2 id="directory-structure">Directory structure</h2>
<p>Everything related to my webserver goes into the directory <code>C:\webserv</code>. There's Apache, CouchDB, Elasticsearch, Ruby, sendmail etc. and the latest versions of PHP 5.6 through 7.4 (the latter being a non-stable snapshot).</p>
<p><img src="/img/php-version-switcher-structure/directory-listing-of-c-webserv.png" alt="Directory listing of C:\webserv"></p>
<h2 id="symlink">Symlink</h2>
<p>As you might have noticed, among the many PHP directories, there is on just plain called <code>php</code>. This is a symbolic link to the currently set PHP version. This directory is also what I put into my <code>PATH</code> and <code>httpd.conf</code>.</p>
<p>The <code>php_shared</code> folder contains files common among PHP installations. Currently it only houses the <code>cacert.pem</code>.</p>
<h2 id="tasks-of-the-php-version-switcher">Tasks of the PHP Version Switcher</h2>
<p>The <code>pvs</code> now does three things:</p>
<ol>
<li>Remove the current symlink <code>C:\webserv\php</code>.</li>
<li>Create a new symlink referring to the provided PHP version.</li>
<li>Restart the Apache service.</li>
</ol>
<p>Et voilà, the machine is running a different PHP version.</p>
<p>How this script looks in detail, I will discuss in one of the following posts.</p>
]]></content>
        </item>
        
        <item>
            <title>Php Version Switcher: PowerShell Naming Convention</title>
            <link>https://arueckauer.github.io/posts/2019/05/php-version-switcher-powershell-naming-convention/</link>
            <pubDate>Wed, 29 May 2019 20:03:47 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/php-version-switcher-powershell-naming-convention/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D9
This is part two of a series of articles about the PHP Version Switcher.
 Part One: Php Version Switcher: PowerShell Module Part Three: Php Version Switcher: The Structure Part Four: Php Version Switcher: The Function   Yesterday I started off, moving for my PHP version switcher to a new home by creating a PowerShell module.
Whilst the import of the module and invocation of the function worked, the Import-Module throw a warning:</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D9</em></p>
<p>This is part two of a series of articles about the <a href="https://github.com/arueckauer/pvs">PHP Version Switcher</a>.</p>
<ul>
<li>Part One: <a href="/posts/2019/05/php-version-switcher-powershell-module/">Php Version Switcher: PowerShell Module</a></li>
<li>Part Three: <a href="/posts/2019/05/php-version-switcher-the-structure/">Php Version Switcher: The Structure</a></li>
<li>Part Four: <a href="/posts/2019/05/php-version-switcher-the-function/">Php Version Switcher: The Function</a></li>
</ul>
<hr>
<p><a href="/posts/2019/05/php-version-switcher-powershell-module/">Yesterday</a> I started off, moving for my PHP version switcher to a new home by creating a PowerShell module.</p>
<p>Whilst the import of the module and invocation of the function worked, the <code>Import-Module</code> throw a warning:</p>
<blockquote>
<p>WARNING: The names of some imported commands from the module &lsquo;Php-VersionSwitcher&rsquo; include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.</p>
</blockquote>
<p>Obviously, the module and/or function name breaks some PowerShell naming convention. As suggested, I ran <code>Get-Verb</code> which provided following output.</p>
<pre><code class="language-powershell">C:\Users\Rueckauer\source&gt; Get-Verb

Verb        Group
----        -----
Add         Common
Clear       Common
Close       Common
Copy        Common
Enter       Common
Exit        Common
Find        Common
Format      Common
Get         Common
Hide        Common
Join        Common
Lock        Common
Move        Common
New         Common
Open        Common
Optimize    Common
Pop         Common
Push        Common
Redo        Common
Remove      Common
Rename      Common
Reset       Common
Resize      Common
Search      Common
Select      Common
Set         Common
Show        Common
Skip        Common
Split       Common
Step        Common
Switch      Common
Undo        Common
Unlock      Common
Watch       Common
Backup      Data
Checkpoint  Data
Compare     Data
Compress    Data
Convert     Data
ConvertFrom Data
ConvertTo   Data
Dismount    Data
Edit        Data
Wait        Lifecycle
Debug       Diagnostic
Measure     Diagnostic
Ping        Diagnostic
Repair      Diagnostic
Resolve     Diagnostic
Test        Diagnostic
Trace       Diagnostic
Connect     Communications
Disconnect  Communications
Read        Communications
Receive     Communications
Send        Communications
Write       Communications
Block       Security
Grant       Security
Protect     Security
Revoke      Security
Unblock     Security
Unprotect   Security
Use         Other
</code></pre>
<p>Doing some more research I learned that it's a convention by starting off with one of the verbs above and appending whatever noun. Also, that <code>PS</code> is a (not so strictly) reserved prefix.</p>
<p>Okay, so I could rename my module to <code>Switch-PhpVersion</code>. As a matter of fact, I changed it and the warning went away. However, these long names bother me a bit. I want to quickly type and execute a command. Now there are currently only 4 <code>Switch-*</code> commands on my machine. But still, I would prefer something shorter.</p>
<p><img src="/img/php-version-switcher-ps-naming-convention/switch-commands.png" alt="Commands starting with Switch-"></p>
<p>So, I decided to rename module and function etc. to <code>pvs</code>. Which btw is also the current name of the PHP version switcher batch file.</p>
<h2 id="repository">Repository</h2>
<p>I've created a new repository for this project. To follow along and view the current state, head over to <a href="https://github.com/arueckauer/pvs">https://github.com/arueckauer/pvs</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Php Version Switcher: PowerShell Module</title>
            <link>https://arueckauer.github.io/posts/2019/05/php-version-switcher-powershell-module/</link>
            <pubDate>Tue, 28 May 2019 20:36:42 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/php-version-switcher-powershell-module/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D8
This is part one of a series of articles about the PHP Version Switcher.
 Part Two: Php Version Switcher: PowerShell Naming Convention Part Three: Php Version Switcher: The Structure Part Four: Php Version Switcher: The Function   Most of our costumers provide Windows Servers for the PHP applications we implement and maintain for them. Although it has become much easier to get a PHP running under Windows than ten years ago, it&#39;s still not the choice environment for a typical PHP web application.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D8</em></p>
<p>This is part one of a series of articles about the <a href="https://github.com/arueckauer/pvs">PHP Version Switcher</a>.</p>
<ul>
<li>Part Two: <a href="/posts/2019/05/php-version-switcher-powershell-naming-convention/">Php Version Switcher: PowerShell Naming Convention</a></li>
<li>Part Three: <a href="/posts/2019/05/php-version-switcher-the-structure/">Php Version Switcher: The Structure</a></li>
<li>Part Four: <a href="/posts/2019/05/php-version-switcher-the-function/">Php Version Switcher: The Function</a></li>
</ul>
<hr>
<p>Most of our costumers provide Windows Servers for the PHP applications we implement and maintain for them. Although it has become much easier to get a PHP running under Windows than ten years ago, it's still not the choice environment for a typical PHP web application.</p>
<p>Last year a co-worker and I discussed the possibility of providing each project with a <a href="https://www.vagrantup.com/">Vagrant</a> box for development purposes that runs a comparable setup as the production environment. Until then each developer had his own WAMP setup and most likely non looked like any other development or production environment. I had a Linux machine in mind. Making the transition from Windows to Linux and providing the necessary infrastructure is not done in just one day.</p>
<p>In the discussion I addressed the laborious manual process of switching in-between PHP versions. Then it dawned on me that by using symlinks, it might be possible to easily switch to another PHP version. Later on, I started working on the setup and wrote a batch file - and surely it worked! 🙌😊</p>
<p>Lately I have become fond of PowerShell. Today I want to start rewriting that batch file of the PHP version switcher into a PowerShell module. For now, I am starting with a PowerShell Module. Tomorrow I continue with the rewrite. An additional feature is a PHP version manager, which would allow the installing and removing PHP versions. I'll see how far that can be automated on another day.</p>
<h2 id="creating-a-powershell-module">Creating a PowerShell Module</h2>
<p>The functionality of the PHP version switcher will be placed in a Cmdlet. The plan is to make the Cmdlet available through a Module and possibly publish it on <a href="https://www.powershellgallery.com/packages/">PowerShell Gallery</a> and/or <a href="https://chocolatey.org/packages">chocolatey</a>.</p>
<p>To create my first PowerShell module, I follow the article <a href="https://docs.microsoft.com/en-us/powershell/developer/module/how-to-write-a-powershell-script-module">How to Write a PowerShell Script Module</a>. Right now I only need steps 1 and 2. If you want to know more about the steps or further steps not mentioned here, head over to the referenced article.</p>
<h3 id="1-save-powershell-script-with-a-psm1-extension">1. Save PowerShell script with a .psm1 extension</h3>
<p>Since I don't have an existing PowerShell script and can't just dump in the batch file, I am starting with a fresh function. For now, I just want to declare my function and parameters. Then give the user some output. The real functionality will be added later.</p>
<pre><code class="language-powershell">function Php-VersionSwitcher
{
    Param (
        [Parameter(Mandatory=$true, ValueFromPipeline=$true)] [Alias(&quot;v&quot;)] [String]$version
    )

    Write-Host &quot;PHP Version Switcher 1.0.0 by Andi Rückauer&quot; -ForegroundColor Blue
    Write-Host &quot;&quot;
    Write-Host &quot;Switching to version: $version...&quot; -ForegroundColor DarkCyan
    Write-Host &quot;&quot;
}
</code></pre>
<p>I save this to the file <code>Php-VersionSwitcher.psm1</code>.</p>
<h3 id="2-export-modulemember">2. Export-ModuleMember</h3>
<p>The function would be exposed by default. It is recommended however, to explicitly declare functions one wants to expose. Here it goes.</p>
<pre><code class="language-powershell">Export-ModuleMember -Function Php-VersionSwitcher
</code></pre>
<h3 id="create-powershell-module-manifest">Create PowerShell Module Manifest</h3>
<p>Next, I follow the instructions found in <a href="https://docs.microsoft.com/en-us/powershell/developer/module/how-to-write-a-powershell-module-manifest">How to Write a PowerShell Module Manifest</a>. I'll go with option 1.b. and create the Manifest with the <a href="https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/New-ModuleManifest">New-ModuleManifest</a> cmdlet.</p>
<pre><code class="language-powershell">New-ModuleManifest .\Php-VersionSwitcher.psd1 -ModuleVersion 1.0 -Author &quot;Andi Rückauer&quot;
</code></pre>
<p>I open the <code>Php-VersionSwitcher.psd1</code> and update necessary and removing unnecessary information. This is what it looks like now.</p>
<pre><code class="language-powershell">@{

    # Die diesem Manifest zugeordnete Skript- oder Binärmoduldatei.
    RootModule          = 'Php-VersionSwitcher.psm1'

    # Die Versionsnummer dieses Moduls
    ModuleVersion       = '1.0.0'

    # ID zur eindeutigen Kennzeichnung dieses Moduls
    GUID                = '69305790-69cd-4ffe-af1c-f7ec6e486d13'

    # Autor dieses Moduls
    Author              = 'Andi Rückauer'

    # Unternehmen oder Hersteller dieses Moduls
    CompanyName         = 'Unbekannt'

    # Urheberrechtserklärung für dieses Modul
    Copyright           = '(c) 2019 Andi Rückauer. Alle Rechte vorbehalten.'

    # Beschreibung der von diesem Modul bereitgestellten Funktionen
    Description         = 'Switching PHP versions on Windows made easy'

    # Die für dieses Modul mindestens erforderliche Version des Windows PowerShell-Moduls
    PowerShellVersion   = '5.0'

    # Aus diesem Modul zu exportierende Funktionen. Um optimale Leistung zu erzielen, verwenden Sie keine Platzhalter und löschen den Eintrag nicht. Verwenden Sie ein leeres Array, wenn keine zu exportierenden Funktionen vorhanden sind.
    FunctionsToExport   = @('Php-VersionSwitcher')

    # Aus diesem Modul zu exportierende Cmdlets. Um optimale Leistung zu erzielen, verwenden Sie keine Platzhalter und löschen den Eintrag nicht. Verwenden Sie ein leeres Array, wenn keine zu exportierenden Cmdlets vorhanden sind.
    CmdletsToExport     = @()

    # Die aus diesem Modul zu exportierenden Variablen
    VariablesToExport   = '*'

    # Aus diesem Modul zu exportierende Aliase. Um optimale Leistung zu erzielen, verwenden Sie keine Platzhalter und löschen den Eintrag nicht. Verwenden Sie ein leeres Array, wenn keine zu exportierenden Aliase vorhanden sind.
    AliasesToExport     = @()

    # Die privaten Daten, die an das in &quot;RootModule/ModuleToProcess&quot; angegebene Modul übergeben werden sollen. Diese können auch eine PSData-Hashtabelle mit zusätzlichen von PowerShell verwendeten Modulmetadaten enthalten.
    PrivateData = @{

        PSData = @{

            # 'Tags' wurde auf das Modul angewendet und unterstützt die Modulermittlung in Onlinekatalogen.
            Tags         = @('php', 'version')

            # Eine URL zur Lizenz für dieses Modul.
            LicenseUri   = 'https://github.com/arueckauer/Php-VersionSwitcher/blob/master/LICENSE.txt'

            # Eine URL zur Hauptwebsite für dieses Projekt.
            ProjectUri   = 'https://github.com/arueckauer/Php-VersionSwitcher'

            # Eine URL zu einem Symbol, das das Modul darstellt.
            # IconUri = ''

            # 'ReleaseNotes' des Moduls
            ReleaseNotes = 'https://github.com/arueckauer/Php-VersionSwitcher/blob/master/CHANGELOG.md'

        }

    }

}

</code></pre>
<h2 id="giving-the-module-a-new-home">Giving the module a new home</h2>
<p>Since I am using a custom PowerShell profile and <a href="https://github.com/dahlbyk/posh-git">posh-git</a>, I do already have a <code>WindowsPowerShell</code> folder in my user's documents path (<code>C:\Users\&lt;Username&gt;\Documents\WindowsPowerShell</code>). If you're using a machine, where you don't have that folder, have a look at the <a href="https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/Import-Module?view=powershell-6">Import-Module</a> might help you getting there.</p>
<p>I am moving the two created files <code>Php-VersionSwitcher.psm1</code> and <code>Php-VersionSwitcher.psd1</code> to a new home for my custom module: <code>C:\Users\Rueckauer\Documents\WindowsPowerShell\Modules\Php-VersionSwitcher\1.0.0</code>.</p>
<h2 id="import-module">Import-Module</h2>
<p>In my PowerShell profile (<code>C:\Users\Rueckauer\Documents\WindowsPowerShell\profile.ps1</code>) I add a line to import my new module.</p>
<pre><code class="language-powershell">Import-Module Php-VersionSwitcher
</code></pre>
<h2 id="test-it">Test it</h2>
<p>Now I power up a new PowerShell and try to access the <code>Php-VersionSwitcher</code> function.</p>
<p>Hm, I do get a warning. 🤔</p>
<blockquote>
<p>WARNUNG: Die Namen einiger importierter Befehle auf Modul &ldquo;Php-VersionSwitcher&rdquo; enthalten nicht genehmigte Verben, sodass deren Auffindbarkeit erschwert werden kann. Wenn Sie die Befehle mit nicht genehmigten Verben finden möchten, führen Sie den Import-Module-Befehl erneut mit dem Verbose-Parameter aus. Sie können durch Eingeben von &ldquo;Get-Verb&rdquo; eine Liste der genehmigten Verben anzeigen.</p>
</blockquote>
<p>Something is not right with the module name. I need to figure that out later. Let's see, if it works despite the warning.</p>
<p><img src="/img/php-version-switcher-powershell-module/php-versionswitcher.png" alt="Execution of Php-VersionSwitcher"></p>
<p>Yes, neat! 💪🏻</p>
<p>Okay, that's it for today. Next time I will breath some life into that function.</p>
]]></content>
        </item>
        
        <item>
            <title>Difference of Squares</title>
            <link>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</link>
            <pubDate>Mon, 27 May 2019 20:28:26 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D7
 Today I am solving the Difference of Squares of the PHP track on Exercism.
Exercism offers its users learning new programming languages through exercises with the valuable feedback of mentors. It currently has 50 different language tracks like C#, Go, Kotlin, TypeScript and many others. Head over to Exercism to join.
Introduction The source of this exercise is Problem 6 of the Euler project.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D7</em></p>
<hr>
<p>Today I am solving the <em>Difference of Squares</em> of the PHP track on <a href="https://exercism.io/">Exercism</a>.</p>
<p>Exercism offers its users learning new programming languages through exercises with the valuable feedback of mentors. It currently has 50 different language tracks like C#, Go, Kotlin, TypeScript and many others. Head over to Exercism to <a href="https://exercism.io/users/sign_up">join</a>.</p>
<h2 id="introduction">Introduction</h2>
<p>The source of this exercise is <a href="https://projecteuler.net/problem=6">Problem 6</a> of the Euler project.</p>
<blockquote>
<p>The sum of the squares of the first ten natural numbers is,</p>
<p><code>12 + 22 + ... + 102 = 385</code></p>
<p>The square of the sum of the first ten natural numbers is,</p>
<p><code>(1 + 2 + ... + 10)2 = 552 = 3025</code></p>
<p>Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is <code>3025 − 385 = 2640</code>.</p>
<p>Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.</p>
</blockquote>
<h2 id="first-step">First step</h2>
<p>Usually I start by downloading the tests, creating the required file (in this case <code>difference-of-squares.php</code>) and if possible, provide the required function(s) with a correct signature. Since I already know from the introduction section, the <code>difference()</code> function returns the difference of <code>squareOfSum()</code> and <code>sumOfSquares()</code>. So, I go ahead and write that down. I'm starting off with the following lines.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

function squareOfSum(int $number) : int
{
    return 0;
}

function sumOfSquares(int $number) : int
{
    return 0;
}

function difference(int $number) : int
{
    return squareOfSum($number) - sumOfSquares($number);
}
</code></pre>
<p>I run the tests. As expected, they are all failing. But it confirms to me, that there are no syntax error or errors of undefined functions. So far, so good.</p>
<p>Next, I like to break down the exercise. I can see, that three functions are required. I start with the first one <code>squareOfSum()</code>. I focus on one test at a time. I comment out all tests except the first and implement its described feature.</p>
<h2 id="square-of-sum">Square of Sum</h2>
<p>The description of <code>squareOfSum()</code> is straight forward. I'm thinking of first creating an array of numbers starting from 1 to n. <a href="https://php.net/range">range()</a> seems to be perfect for that. Next, I need to calculate the sum. Since I already have an array, I use <a href="https://php.net/array_sum">array_sum()</a>. And finally, I square the sum and return it.</p>
<pre><code class="language-php">&lt;?php

function squareOfSum(int $number) : int
{
    $sum = array_sum(range(1, $number));
    return $sum * $sum;
}

</code></pre>
<p>To validate my implementation, I uncomment all tests asserting the result of <code>squareOfSum()</code> and run the tests. Success! 👍</p>
<h2 id="sum-of-squares">Sum of squares</h2>
<p>The second function is doing the same in a different order. My first thought is, if I could abstract any functionality from the first function which I could use in the second. They only have the <code>range()</code> call in common. It would be overkill to abstract that into a separate function. So, I leave it as it is and return to the implementation.</p>
<p>Again, I need a range. This time however I need to square the element values. A simple callback should do with the help of <code>array_map()</code> and followed by <code>array_sum()</code>.</p>
<pre><code class="language-php">&lt;?php

function sumOfSquares(int $number) : int
{
    $array = array_map(
        static function (int $number) {
            return $number * $number;
        },
        range(1, $number)
    );

    return array_sum($array);
}

</code></pre>
<p>I uncomment all the remaining tests and run them. Again, successfully. 🙌</p>
<h2 id="clean-up">Clean-up</h2>
<p>Before submitting my solution, I run code analysis tools in PhpStorm and check for error or warnings. Usually this is very helpful. It helps me to (1) learn more about PHP and how I could improve and (2) show potential errors which I did not see.</p>
<p>In this case <a href="https://github.com/vimeo/psalm">Psalm</a> is throwing 4 errors:</p>
<pre><code class="language-powershell">Scanning files...
Analyzing files...

ERROR: InvalidReturnType - difference-of-squares\difference-of-squares.php:5:37 - The declared return type 'int' for squareOfSum is incorrect, got 'float|int'
function squareOfSum(int $number) : int


ERROR: InvalidReturnStatement - difference-of-squares\difference-of-squares.php:8:12 - The type 'float|int' does not match the declared return type 'int' for squareOfSum
    return $sum * $sum;


ERROR: InvalidReturnType - difference-of-squares\difference-of-squares.php:11:38 - The declared return type 'int' for sumOfSquares is incorrect, got 'int|float'
function sumOfSquares(int $number) : int


ERROR: InvalidReturnStatement - difference-of-squares\difference-of-squares.php:20:12 - The type 'int|float' does not match the declared return type 'int' for sumOfSquares
    return array_sum($array);


------------------------------
4 errors found
------------------------------

Checks took 0.37 seconds and used 29.759MB of memory
Psalm was able to infer types for 100% of the codebase
</code></pre>
<p>But I am not sure how Psalm can get a <code>float</code> value from adding and square an <code>integer</code> value? So, I leave it as it is and submit my solution.</p>
<h2 id="my-submitted-solution">My submitted solution</h2>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

function squareOfSum(int $number) : int
{
    $sum = array_sum(range(1, $number));
    return $sum * $sum;
}

function sumOfSquares(int $number) : int
{
    $array = array_map(
        static function (int $number) {
            return $number * $number;
        },
        range(1, $number)
    );

    return array_sum($array);
}

function difference(int $number) : int
{
    return squareOfSum($number) - sumOfSquares($number);
}

</code></pre>
<h2 id="mentoring">Mentoring</h2>
<p>Within the next few days a mentor will review my code and provide feedback. So far, I have been very blessed with good reviewers who took their time to give suggestions and refer to other resources. This is very helpful.</p>
<p>Sometimes the feedback is not as pleasant as I was hoping. 😄 I then take a step back and take my time before reading it again. This time with an open mind to see, what the mentor is trying to show me. It has always been a great learning experience for me.</p>
<p>As soon as a solution gets accepted, you can share your solution with the community and inspect what others have submitted. This is alxvery helpful and oftentimes an eye opener.</p>
]]></content>
        </item>
        
        <item>
            <title>Use dotenv to configure a Zend Expressive application</title>
            <link>https://arueckauer.github.io/posts/2019/05/use-dotenv-to-configure-a-zend-expressive-application/</link>
            <pubDate>Sat, 25 May 2019 20:43:15 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/use-dotenv-to-configure-a-zend-expressive-application/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D6
  [The Twelve-Factor App] requires strict separation of config from code.
 Taken from factor three of The Twelve-Factor App.
Today I am studying about how to achieve this requirement making usage of phpdotenv in a Zend Expressive context.
I will not go into details on and advantages of this concept. A leave that up to other resources.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D6</em></p>
<hr>
<blockquote>
<p>[The Twelve-Factor App] requires strict separation of config from code.</p>
</blockquote>
<p><em>Taken from <a href="https://12factor.net/config">factor three</a> of The Twelve-Factor App.</em></p>
<p>Today I am studying about how to achieve this requirement making usage of <a href="https://github.com/vlucas/phpdotenv">phpdotenv</a> in a Zend Expressive context.</p>
<p>I will not go into details on and advantages of this concept. A leave that up to other resources.</p>
<h2 id="phpdotenv">phpdotenv</h2>
<p>This package</p>
<blockquote>
<p>Loads environment variables from <code>.env</code> to <code>getenv()</code>, <code>$_ENV</code> and <code>$_SERVER</code> automagically.</p>
</blockquote>
<p>It has a clean setup and interface. To load an <code>.env</code> file use</p>
<pre><code class="language-php">$dotenv = Dotenv\Dotenv::create(__DIR__);
$dotenv-&gt;load();
</code></pre>
<p>Then you can access it via</p>
<pre><code class="language-php">$s3Bucket = getenv('S3_BUCKET');
$s3Bucket = $_ENV['S3_BUCKET'];
$s3Bucket = $_SERVER['S3_BUCKET'];
</code></pre>
<p>The documentation mentions also the possibility to access variable through the request class. This is out-of-scope of this blog entry, since I want to access env vars only in configuration files.</p>
<h2 id="install-phpdotenv">Install phpdotenv</h2>
<p>I install the package via <a href="https://getcomposer.org">Composer</a>.</p>
<pre><code class="language-powershell">composer require vlucas/phpdotenv
</code></pre>
<h2 id="create-a-dotenv-file">Create a dotenv file</h2>
<p>Next, I create a <code>.env</code> file.</p>
<pre><code>DOCTRINE_CONNECTION_HOST=&quot;localhost&quot;
DOCTRINE_CONNECTION_PORT=&quot;3306&quot;
DOCTRINE_CONNECTION_USER=&quot;db_user&quot;
DOCTRINE_CONNECTION_PASSWORD=&quot;my-53cr37&quot;
DOCTRINE_CONNECTION_DBNAME=&quot;database&quot;
DOCTRINE_CONNECTION_charset=&quot;utf8mb4&quot;
</code></pre>
<h2 id="load-dotenv">Load dotenv</h2>
<p>Now <code>phpdotenv</code> needs to be put to work and do its magic. In my <code>index.php</code> I add the following two lines right after requiring the composer autoload file.</p>
<pre><code class="language-php">$dotenv = Dotenv\Dotenv::create(__DIR__);
$dotenv-&gt;load();
</code></pre>
<h2 id="load-configuration-from-dotenv">Load configuration from dotenv</h2>
<p>My configuration file with the database is updated, to use the env vars now available through <code>getenv()</code>.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

return [
    'doctrine' =&gt; [
        'connection' =&gt; [
            'orm_default' =&gt; [
                'params' =&gt; [
                    'host'     =&gt; getenv('DOCTRINE_CONNECTION_HOST'),
                    'port'     =&gt; getenv('DOCTRINE_CONNECTION_PORT'),
                    'user'     =&gt; getenv('DOCTRINE_CONNECTION_USER'),
                    'password' =&gt; getenv('DOCTRINE_CONNECTION_PASSWORD'),
                    'dbname'   =&gt; getenv('DOCTRINE_CONNECTION_DBNAME'),
                    'charset'  =&gt; getenv('DOCTRINE_CONNECTION_CHARSET'),
                ],
            ],
        ],
    ],
];

</code></pre>
<h2 id="goal-accomplished">Goal accomplished</h2>
<p>A quick check on my API confirms that the env vars are utilized correctly. 👍</p>
]]></content>
        </item>
        
        <item>
            <title>Day 5: A change for the better</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-5-a-change-for-the-better/</link>
            <pubDate>Fri, 24 May 2019 23:37:51 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-5-a-change-for-the-better/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D5
 Yesterday I ran into an issue where the build process of an application depended on a proper configured application. There is a distributed configuration file. But for the build process to run successfully, the distributed file has to be copied (and if necessary adjusted) manually.
I see some issues with that.
 Build has a dependency on configuration. The build process for an application should stay the same.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D5</em></p>
<hr>
<p>Yesterday I ran into an issue where the build process of an application depended on a proper configured application. There is a distributed configuration file. But for the build process to run successfully, the distributed file has to be copied (and if necessary adjusted) manually.</p>
<p>I see some issues with that.</p>
<ol>
<li><strong>Build has a dependency on configuration.</strong> The build process for an application should stay the same. It must not produce a different outcome depending on the local setup.</li>
<li><strong>Build process will not run on CI/CD.</strong> In this setup the application will never be run in CI/CD.</li>
<li><strong>Repetitive tasks</strong>. Why should every developer manage configuration, if it can be automated? Automation will lower risk of human error and speed up the process. On the topic of automating things, I can recommend following <a href="https://github.com/rdbartram">Ryan Bartram</a>, the author of <a href="https://www.dftai.ch/">Don't forget to automate it</a>. I got the chance to get to know him on the <a href="https://www.zurich.azurebootcamp.net/">Global Azure Bootcamp</a>, great and funny guy!</li>
</ol>
<h2 id="proper-way">Proper way</h2>
<p>The proper way to fix this, is to address the author of the <del>abomination</del> feature and improve the build process. This is what I will do.</p>
<h2 id="a-connected-issue">A connected issue</h2>
<p>While solving the issue of getting the build to work, I was thinking about the application setup. Most of our projects require local configuration before they are able to run. If you're not familiar with an application, it can be a tedious task to find out all requirements and dependencies. Oftentimes we end up sharing our local configuration files. ¯\_(ツ)\_/¯</p>
<p>But what if you could checkout a project which would run out-of-the-box? For development you typically would use virtualization with a configured machine/container laying in the repository, boot up the machine and voilà.</p>
<h2 id="small-steps">Small steps</h2>
<p>Before configuring virtualizations, I wanted to make a smaller step which I and others could use instantly. The idea was to automate the process of copying required configuration files. Some manual steps like database credentials would still be required, but at least the configuration files/templates exist.</p>
<h2 id="configuration-types">Configuration types</h2>
<p>There are different types of configurations.</p>
<ol>
<li><strong>Global</strong> - The application is dependent on it. This could be a default locale, template paths and so on. These settings are committed to the VCS.</li>
<li><strong>Local</strong> - Database credentials etc. The application depends on them. However, they are not committed to VCS, because they differ from environment to environment and/or they could be sensitive data.</li>
<li><strong>Development</strong> - Settings that are only required in a development environment. That is displaying debugging information, a turned off cache etc.</li>
</ol>
<p>The first type is already in the VCS and does not require local adjustments. The local configuration is what really is interesting. The application depends on it, but the configuration may only exist as a distributed configuration file. The development configuration could potentially be automated as well, but this will not be in today's scope.</p>
<h2 id="composer-scripts-ftw">Composer scripts FTW</h2>
<p>Very quickly I found a solution by putting <a href="https://getcomposer.org/doc/articles/scripts.md">Composer scripts</a> to work. At first I put a PHP command directly in the <code>scripts</code> section of the <code>composer.json</code>. However, that just didn't feel right. It was very hard to read and maintain. So, I defined a callback.</p>
<pre><code class="language-json">{
  // [..]
  &quot;scripts&quot;: {
    &quot;post-install-cmd&quot;: [&quot;App\\ComposerScripts::postInstall&quot;]
    // [..]
  }
}
</code></pre>
<p>Next, I implemented the referenced <code>ComposerScripts</code> to copy the distributed configuration files, if no local copy exists.</p>
<pre><code class="language-php">&lt;?php

declare(strict_types = 1);

namespace App;

class ComposerScripts
{
    private static $configurationFiles = [
        'config/autoload/services.local.php.dist' =&gt; 'config/autoload/services.local.php',
        'config/autoload/doctrine.local.php.dist' =&gt; 'config/autoload/doctrine.local.php',
    ];

    public static function postInstall() : void
    {
        foreach (static::$configurationFiles as $distributed =&gt; $destination) {
            if (! file_exists($destination)) {
                copy($distributed, $destination);
            }
        }
    }
}
</code></pre>
<p>Beautiful. It works like a charm.</p>
<p>This for sure is a poor man's solution, quick and dirty. In the sense of Kaizen, it is a change for the better and will continue to improve.</p>
]]></content>
        </item>
        
        <item>
            <title>Day 4: Autoloading Optimization in Composer</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-4-autoloading-optimization-in-composer/</link>
            <pubDate>Thu, 23 May 2019 23:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-4-autoloading-optimization-in-composer/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D4
 Today I&#39;m studying the Autoloader Optimization article of the Composer documentation.
Purpose The optimization is designed to reduce the performance impact of the autoloader. It is not intended for use in development as it will have undesired side-effects.
Optimization levels There are two levels of optimization and the second level comes with two options. These two options cannot be combined.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D4</em></p>
<hr>
<p>Today I'm studying the <a href="https://getcomposer.org/doc/articles/autoloader-optimization.md">Autoloader Optimization</a> article of the Composer documentation.</p>
<h2 id="purpose">Purpose</h2>
<p>The optimization is designed to reduce the performance impact of the autoloader. It is not intended for use in development as it will have undesired side-effects.</p>
<h2 id="optimization-levels">Optimization levels</h2>
<p>There are two levels of optimization and the second level comes with two options. These two options cannot be combined.</p>
<ul>
<li>Optimization Level 1: Class map generation</li>
<li>Optimization Level 2/A: Authoritative class maps</li>
<li>Optimization Level 2/B: APCu cache</li>
</ul>
<p>I will not get into detail, which level and options is doing what. The article is very brief and clear already.</p>
<h2 id="meat-on-the-bone">Meat on the bone</h2>
<p>Now, what does this actually look like in practice? To compare the differences, I will test it on an actual application. I will compare</p>
<ul>
<li>Level 0: No optimization - <code>composer install</code>,</li>
<li>Level 1: Class map generation - <code>composer dump-autoload -a</code> and</li>
<li>Level 2/A: Authoritative class maps - <code>composer dump-autoload -o</code>.</li>
</ul>
<h3 id="create-new-project">Create new project</h3>
<p>To compare the different optimization levels any application utilizing the PSR-4 standard will do. I choose an empty <a href="https://symfony.com/">Symfony</a> application.</p>
<pre><code class="language-powershell">composer create-project symfony/website-skeleton my-project
</code></pre>
<h3 id="create-autoloading-with-optimization-levels-0-1-and-2a">Create autoloading with optimization levels 0, 1 and 2/A</h3>
<p>The <code>create-project</code> command will already execute an <code>install</code>. The application has now no autoloading optimization and is ready for development. I copy the <code>.\vendor\composer</code> folder to a different location. I then execute <code>composer dump-autoload -o</code> and <code>composer dump-autoload -a</code> and copy the <code>.\vendor\composer</code> after each command execution.</p>
<h3 id="whats-the-difference">What's the difference?</h3>
<p>I then compare the three copies:</p>
<h4 id="level-0">Level 0</h4>
<p>If no optimization is done, the autoloading is missing the class map which is generated for the other two options in <code>autoload_classmap.php</code> and <code>autoload_static.php</code>.</p>
<h4 id="level-1">Level 1</h4>
<p>Level 1 registers PSR-0 and PSR-4 directories to the <code>Composer\Autoload\ClassLoader</code>. If a given class cannot be found, it falls back to look in the filesystem according to the registered rules.</p>
<p><code>.\vendor\composer\autoload_real.php</code></p>
<pre><code class="language-php">// [..]
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace =&gt; $path) {
                $loader-&gt;set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace =&gt; $path) {
                $loader-&gt;setPsr4($namespace, $path);
            }
// [..]
</code></pre>
<h4 id="level-2a">Level 2/A</h4>
<p>Whereas Level 2/A does not register PSR-0 and PSR-4 directories and instead sets <code>$classMapAuthoritative</code>in <code>Composer\Autoload\ClassLoader</code> to <code>true</code>.</p>
<blockquote>
<p>Turns off searching the prefix and fallback directories for classes that have not been registered with the class map.</p>
</blockquote>
<p><code>.\vendor\composer\autoload_real.php</code></p>
<pre><code class="language-php">// [..]
        $loader-&gt;setClassMapAuthoritative(true);
// [..]
</code></pre>
<h2 id="conclusion">Conclusion</h2>
<p>This study has helped me gain a better understanding of what is happening behind the scene in composer's autoloading. Although everything is already very well documented in the article, I learn much better, if I take things apart.</p>
<p>So definitely in production.</p>
<pre><code class="language-powershell">composer install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --classmap-authoritative
</code></pre>
]]></content>
        </item>
        
        <item>
            <title>Day 3: Keep a Changelog</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-3-keep-a-changelog/</link>
            <pubDate>Wed, 22 May 2019 20:39:27 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-3-keep-a-changelog/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D3
 Today I was working with keep a changelog, especially with Matthew Weier O&#39;Phinney&amp;lsquo;s implementation of it. I am fascinated by the idea of managing the CHANGELOG from the command line.
Installation Setup is thanks to composer straight-forward. You can either install it locally or globally. I went with the latter.
composer global require phly/keep-a-changelog  If you haven&#39;t already, remember to add the global composer bin path to your PATH environment variable.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D3</em></p>
<hr>
<p>Today I was working with <a href="https://keepachangelog.com/">keep a changelog</a>, especially with <a href="https://mwop.net/">Matthew Weier O'Phinney</a>&lsquo;s <a href="https://github.com/phly/keep-a-changelog">implementation</a> of it. I am fascinated by the idea of managing the CHANGELOG from the command line.</p>
<h2 id="installation">Installation</h2>
<p>Setup is thanks to composer straight-forward. You can either install it locally or globally. I went with the latter.</p>
<pre><code class="language-powershell">composer global require phly/keep-a-changelog
</code></pre>
<p>If you haven't already, remember to add the global composer bin path to your PATH environment variable.</p>
<h2 id="commands">Commands</h2>
<p>Now let's have a look at it.</p>
<p><img src="/img/day-3-keep-a-changelog/keep-a-changelog-commands.png" alt="keep-a-changelog commands"></p>
<h2 id="setup">Setup</h2>
<p>Getting started is as simple as</p>
<pre><code class="language-powershell">keep-a-changelog new
</code></pre>
<p>By default <code>keep-a-changelog</code> starts with version <code>0.1.0</code>. The option <code>-i, --initial-version=INITIAL-VERSION</code> allows you to overwrite it. If you want a filename other then <code>CHANGELOG.md</code>, use option <code>-f, --file=FILE</code>.</p>
<h2 id="configuration">Configuration</h2>
<p>In the configuration a (provider api) token, provider and custom domain may be stored. It can be initialized with</p>
<pre><code class="language-powershell">keep-a-changelog config
</code></pre>
<p>You then will be asked to provide the required information. By using the option <code>-g, --global</code>, it is possible to store the configuration globally. This helps reusing the configuration in other projects and prevent accidentally committing it to the VCS.</p>
<h2 id="available-providers">Available Providers</h2>
<p>The package is shipped with two Providers:</p>
<ol>
<li>GitHub (default) and</li>
<li>GitLab.</li>
</ol>
<p>Since my employer is using <a href="https://beanstalkapp.com/">Beanstalk</a>, I got curious, if it was possible to implement a provider it.</p>
<h2 id="curiosity">Curiosity</h2>
<p>I cloned the repository and digged into the code. Quickly I came across a piece of code which could be a party-pooper. The <code>EntryCommand::preparePatchLink()</code> method <a href="https://github.com/phly/keep-a-changelog/blob/2610134afb6104bda7b4c198903f382cec4b8d50/src/EntryCommand.php#L146">throws an exception</a> if no valid PR link is generated by the provider. Now <a href="https://blog.beanstalkapp.com/post/101864285674/introducing-code-review">Beanstalk don't do no PRs</a>. A <a href="https://twitter.com/arueckauer/status/1131251308114186240">quick check</a> with mwop restored hope, saying <code>--pr</code> is never a required option.</p>
<h2 id="to-infinity-and-beyond">To infinity and beyond</h2>
<p>Awesome. I rolled up my sleeves and started implementing a Beanstalk provider. Thanks to the neat code the internal features were done in couple of minutes. Now only adding a Beanstalk API client and that would be it. At least that is what I thought.</p>
<h2 id="disillusionment">Disillusionment</h2>
<p>Looking for candidates on <a href="https://github.com/search?l=PHP&amp;q=beanstalk+api&amp;type=Repositories">GitHub</a> and <a href="https://packagist.org/?query=beanstalk%20api">Packagist</a> did not look good at all. There might be a package or two that might work, but neither received any updates in years and the code has great improvement potential.</p>
<p>Implementing a PHP client library for the <a href="http://api.beanstalkapp.com/">Beanstalk API</a> goes beyond the scope of today's challenge.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Although there is currently no working provider for Beanstalk, I still want to see the keep-a-changelog in action in a project. On another day I will evaluate the tool in a GitHub or GitLab project and see how it fits into our workflow. So long.</p>
]]></content>
        </item>
        
        <item>
            <title>Day 2: Clean Expressive Skeleton</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-2-clean-expressive-skeleton/</link>
            <pubDate>Tue, 21 May 2019 20:45:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-2-clean-expressive-skeleton/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D2
 Whenever starting a new Zend Expressive project, I use the handy zendframework/zend-expressive-skeleton. It creates an almost empty Expressive application structure with your choice of
 code structure, DI container, router, template engine and error handler.  It comes also with two exemplary handlers and conditions for various routers and template engines. I wondered, what a cleaned-up skeleton would look like and how many bits and pieces were actually there which could be removed.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D2</em></p>
<hr>
<p>Whenever starting a new <a href="https://getexpressive.org">Zend Expressive</a> project, I use the handy <code>zendframework/zend-expressive-skeleton</code>. It creates an almost empty Expressive application structure with your choice of</p>
<ul>
<li>code structure,</li>
<li>DI container,</li>
<li>router,</li>
<li>template engine and</li>
<li>error handler.</li>
</ul>
<p>It comes also with two exemplary handlers and conditions for various routers and template engines. I wondered, what a cleaned-up skeleton would look like and how many bits and pieces were actually there which could be removed.</p>
<h2 id="create-a-new-project">Create a new project</h2>
<p>To create a new skeleton application, I used <code>composer create-project</code>.</p>
<pre><code class="language-powershell">composer create-project zendframework/zend-expressive-skeleton clean-skeleton
</code></pre>
<h2 id="composerjson">composer.json</h2>
<p>First stop is the <code>composer.json</code>. I update the following section to my needs.</p>
<ul>
<li><code>name</code></li>
<li><code>description</code></li>
<li><code>homepage</code></li>
<li><code>license</code></li>
</ul>
<p>Then I removed the following sections - you may want to update these to your needs, especially if you plan to publish your project/library on <a href="https://packagist.org">Packagist</a>.</p>
<ul>
<li><code>keywords</code></li>
<li><code>extra</code></li>
<li><code>support</code></li>
</ul>
<p>Then I removed the <code>post-create-project-cmd</code> from the <code>scripts</code> section.</p>
<h3 id="further-changes">Further changes</h3>
<p>If you're using some other code style tool like <a href="https://cs.symfony.com/">PHP-CS-Fixer</a>, you may want to update the <code>require-dev</code> and in the <code>scripts</code> section the <code>cs-check</code> and <code>cs-fix</code> commands accordingly. Since I sticked to the defaults, I left them as they were.</p>
<p>In the end, my <code>composer.json</code> looked like the following.</p>
<pre><code class="language-json">{
  &quot;name&quot;: &quot;arueckauer/clean-skeleton&quot;,
  &quot;description&quot;: &quot;A zend expressive skeleton purged of all unnecessary items&quot;,
  &quot;type&quot;: &quot;project&quot;,
  &quot;homepage&quot;: &quot;https://github.com/arueckauer/clean-skeleton&quot;,
  &quot;license&quot;: &quot;MIT&quot;,
  &quot;config&quot;: {
    &quot;sort-packages&quot;: true
  },
  &quot;require&quot;: {
    &quot;php&quot;: &quot;^7.1&quot;,
    &quot;zendframework/zend-component-installer&quot;: &quot;^2.1.1&quot;,
    &quot;zendframework/zend-config-aggregator&quot;: &quot;^1.0&quot;,
    &quot;zendframework/zend-diactoros&quot;: &quot;^1.7.1 || ^2.0&quot;,
    &quot;zendframework/zend-expressive&quot;: &quot;^3.0.1&quot;,
    &quot;zendframework/zend-expressive-helpers&quot;: &quot;^5.0&quot;,
    &quot;zendframework/zend-stdlib&quot;: &quot;^3.1&quot;,
    &quot;zendframework/zend-servicemanager&quot;: &quot;^3.3&quot;,
    &quot;zendframework/zend-expressive-fastroute&quot;: &quot;^3.0&quot;
  },
  &quot;require-dev&quot;: {
    &quot;phpunit/phpunit&quot;: &quot;^7.0.1&quot;,
    &quot;roave/security-advisories&quot;: &quot;dev-master&quot;,
    &quot;squizlabs/php_codesniffer&quot;: &quot;^2.9.1&quot;,
    &quot;zendframework/zend-expressive-tooling&quot;: &quot;^1.0&quot;,
    &quot;zfcampus/zf-development-mode&quot;: &quot;^3.1&quot;,
    &quot;filp/whoops&quot;: &quot;^2.1.12&quot;
  },
  &quot;autoload&quot;: {
    &quot;psr-4&quot;: {
      &quot;App\\&quot;: &quot;src/App/src/&quot;
    }
  },
  &quot;autoload-dev&quot;: {
    &quot;psr-4&quot;: {
      &quot;AppTest\\&quot;: &quot;test/AppTest/&quot;
    }
  },
  &quot;scripts&quot;: {
    &quot;development-disable&quot;: &quot;zf-development-mode disable&quot;,
    &quot;development-enable&quot;: &quot;zf-development-mode enable&quot;,
    &quot;development-status&quot;: &quot;zf-development-mode status&quot;,
    &quot;expressive&quot;: &quot;expressive --ansi&quot;,
    &quot;check&quot;: [&quot;@cs-check&quot;, &quot;@test&quot;],
    &quot;clear-config-cache&quot;: &quot;php bin/clear-config-cache.php&quot;,
    &quot;cs-check&quot;: &quot;phpcs&quot;,
    &quot;cs-fix&quot;: &quot;phpcbf&quot;,
    &quot;serve&quot;: &quot;php -S 0.0.0.0:8080 -t public/&quot;,
    &quot;test&quot;: &quot;phpunit --colors=always&quot;,
    &quot;test-coverage&quot;: &quot;phpunit --colors=always --coverage-clover clover.xml&quot;
  }
}
</code></pre>
<p>A <code>composer update</code> confirmed that no updates were required after making the adjustments.</p>
<h2 id="license">License</h2>
<p>I replaced the LICENSE file with the <a href="https://choosealicense.com">license of my choice</a>.</p>
<h2 id="coding-standard">Coding Standard</h2>
<p>If desired, you can update name and rules in <code>phpcs.xml.dist</code>. For the purpose of this test, they remained unchanged in my case.</p>
<h2 id="readme">Readme</h2>
<p>I emptied the readme file, leaving only an h1 with the project name. Usually I fill the readme up with information about the package, setup etc. as the project grows.</p>
<h2 id="shipped-handlers">Shipped Handlers</h2>
<p>Next, I removed the Handler classes with its containing folder, tests and configuration references.</p>
<p>Deleted directories:</p>
<ul>
<li><code>src/App/src/Handler</code></li>
<li><code>test/AppTest/Handler</code></li>
</ul>
<p>Also, I removed the defined routes in <code>config/routes.php</code> and the dependency definitions in <code>src/App/src/ConfigProvider.php</code>.</p>
<h2 id="configuration">Configuration</h2>
<p>In <code>config/config.php</code> I removed Swoole config. If you're using Swoole, you can replace it by an explicit inclusion of the ConfigProvider.</p>
<h2 id="done">Done</h2>
<p>To be honest, my first impression of what can be purged of the skeleton was much more. But there is no clutter whatsoever, just some examples. This challenge has helped me better understand the setup of the skeleton package and showed me just how neat it is organized. I love it.</p>
<h2 id="other-skeleton-resources">Other Skeleton resources</h2>
<p>There are two other skeletons for PHP applications which I want to mention at this point. They both are a closer look worth it, if you're starting new PHP projects on a fairly regular basis or want some reference from time to time.</p>
<ol>
<li><a href="https://github.com/thephpleague/skeleton">thephpleague/skeleton</a> and</li>
<li><a href="https://github.com/php-pds/skeleton">php-pds/skeleton</a></li>
</ol>
<p>The thephpleague/skeleton comes with templates for GitHub issues and pull-requests. And also, a <a href="https://github.com/thephpleague/skeleton/blob/master/prefill.php">prefill</a> command which replaces variables like vendor and package names and urls throughout the cloned repo.</p>
]]></content>
        </item>
        
        <item>
            <title>Day 1: Getting started with Terraform</title>
            <link>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</link>
            <pubDate>Mon, 20 May 2019 22:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/day-1-getting-started-with-terraform/</guid>
            <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D1
 This year I attended the Global Azure Bootcamp in Zürich. It was a very well organized conference with lots of interesting sessions. I definitely will go again next year!
One of my favorites was Terraform and Azure - How to GitOps by Sandro Koechli and Jörn Stenkamp. They introduced the idea of managing infrastructure as code with Git. This concept was new to me and very exciting.</description>
            <content type="html"><![CDATA[<p><em>This article is part of my <a href="/tags/100-days-of-code/">#100DaysOfCode</a> and #100DaysOfBlogging challenge. R1D1</em></p>
<hr>
<p>This year I attended the <a href="https://www.zurich.azurebootcamp.net/">Global Azure Bootcamp in Zürich</a>. It was a very well organized conference with lots of interesting sessions. I definitely will go again next year!</p>
<p>One of my favorites was <em><a href="https://speakerdeck.com/azurezurich/gabc2019-terraform-and-azure-how-to-gitops-by-sandro-kochli-and-jorn-stenkamp">Terraform and Azure - How to GitOps</a></em> by <a href="https://www.linkedin.com/in/sandro-koechli/">Sandro Koechli</a> and <a href="https://www.linkedin.com/in/joern-stenkamp-732b58100/">Jörn Stenkamp</a>. They introduced the idea of managing infrastructure as code with Git. This concept was new to me and very exciting. Unfortunately time did not allow for some demo.</p>
<p>Today I worked through the <a href="https://learn.hashicorp.com/terraform/getting-started/build">Getting Started</a> chapter for <a href="https://www.terraform.io/">Terraform</a>. I set up an AWS account and wrote my first Terraform configuration. Via the CLI an infrastructure can be initialized, applied, changed and destroyed (among other commands like plan and show).</p>
<p>I gained a basic understanding of how Terraform works. The configuration of <a href="https://www.terraform.io/docs/providers/index.html">Providers</a> and Resources is still very overwhelming.</p>
]]></content>
        </item>
        
        <item>
            <title>100 Days of Code</title>
            <link>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</link>
            <pubDate>Mon, 20 May 2019 06:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/100-days-of-code/</guid>
            <description>Lately quite a few posts on the #100DaysOfCode challenge have come up on my Twitter timeline. I was curious what it is all about. So, I started to do some research and I really liked what I was reading.
In this post I am writing about my own commitment to the challenge. If you want to know more about it yourself, start reading the initial article on medium or go straight to the official website.</description>
            <content type="html"><![CDATA[<p>Lately quite a few posts on the <a href="https://twitter.com/search?q=%23100DaysOfCode">#100DaysOfCode</a> challenge have come up on my Twitter timeline. I was curious what it is all about. So, I started to do some research and I really liked what I was reading.</p>
<p>In this post I am writing about my own commitment to the challenge. If you want to know more about it yourself, start reading the initial article on <a href="https://medium.freecodecamp.org/join-the-100daysofcode-556ddb4579e4">medium</a> or go straight to the <a href="https://www.100daysofcode.com/">official website</a>.</p>
<h2 id="official-rules">Official rules</h2>
<p>The <a href="https://www.100daysofcode.com/">#100DaysOfCode</a> challenge outlines two main rules:</p>
<blockquote>
<ol>
<li>Code minimum an hour every day for the next 100 days.</li>
<li>Tweet your progress every day with the #100DaysOfCode hashtag.</li>
</ol>
</blockquote>
<p>It also talks about other <a href="https://www.100daysofcode.com/rules/">considerations</a> like reaching out to others who are also doing the challenge or keeping a <a href="https://github.com/Kallaway/100-days-of-code">100 days journal</a>.</p>
<h2 id="my-rules">My rules</h2>
<p>My personal motivation is to keep learning and dive into subjects other than what is required at my current job. I have a broad interest and would like to use this challenge to study, experience and learn. To accomplish these goals, I will adapt the rules a little.</p>
<h3 id="1-code-almost-every-day-for-the-next-100-days">1. Code (almost) every day for the next 100 days</h3>
<p>With <em>almost</em> I am not intending to create a loophole or justify slacking off. Sunday is a day of rest where I do not work and try to spend time with my family and spiritual matters. So, I am committing to 6 days of coding a week.</p>
<p>On a coding day I do not require myself to spend at least one hour on the challenge. Rather I am committing myself to making meaningful use of the time. It should be first a learning experience (even challenging) and second fun as well.</p>
<h3 id="2-blog-about-it">2. Blog about it</h3>
<p>This might be a second challenge I am trying to accomplish at the same time. Instead of just tweet about it, I want to record my learnings in a blog post. The latter is more of a habit-forming challenge than the initial.</p>
<h2 id="topic">Topic</h2>
<p>One of the most productive factors for me is focus. Being able to focus on just one task helps me work very effectively. In more of a natural way I am living a clean desk, zero inbox and other policies or principles.</p>
<p>Just recently I switched from the old beloved <a href="https://www.wunderlist.com/">Wunderlist</a> to a new and shiny <a href="https://todo.microsoft.com/">Microsoft To-Do</a> to keep track of ideas and work that needs to be done. In a list called <em>Play.Fail.Succeed.</em> I keep a collection of topics, technologies, methods and so on which I want to study and learn more about it.</p>
<p>Secondly, I use <a href="https://getpocket.com/">Pocket</a> to keep track of resources of interest, articles I want to read later and so forth.</p>
<p>Both tools provide excellent resources for my #100DaysOfCode challenge.</p>
<p>In this challenge I will focus on DevOps. I am very interested in automating things and decrease the amount of time spent in repetitive tasks. By doing this challenge I hope to advance my knowledge and skills greatly. I want to gain a better understanding of</p>
<ul>
<li>Provisioning,</li>
<li>Orchestration,</li>
<li>Configuration Management,</li>
<li>Deployment and</li>
<li>Automation in general.</li>
</ul>
<h2 id="commitment">Commitment</h2>
<p>Starting today I'm publicly committing to the 100DaysOfCode Challenge with the here outlined rules! Learn more and join me!</p>
<p>Gude Laune</p>
]]></content>
        </item>
        
        <item>
            <title>From Flat to Modular</title>
            <link>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</link>
            <pubDate>Fri, 17 May 2019 06:30:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/from-flat-to-modular/</guid>
            <description>Transforming of a flat application structure to a modular one in a Zend Expressive project
In an Expressive project I ran into the issue, where the application grew much larger than initially expected. How about that? The project got initialized with a flat code structure, which is the default selection of the Expressive Skeleton. Flat basically means the application is organized in a single module in contrast to endless modules in the modular structure.</description>
            <content type="html"><![CDATA[<p><em>Transforming of a flat application structure to a modular one in a Zend Expressive project</em></p>
<p>In an <a href="https://docs.zendframework.com/zend-expressive/">Expressive</a> project I ran into the issue, where the application grew much larger than initially expected. How about that? The project got initialized with a flat code structure, which is the default selection of the <a href="https://github.com/zendframework/zend-expressive-skeleton">Expressive Skeleton</a>. Flat basically means the application is organized in a single module in contrast to endless modules in the modular structure. It also means not only having separate modules but also separate namespaces. This makes handling class names much easier.</p>
<p>Looking back on it now I tend to always choose a modular structure. The only use case for a flat structure would be a micro application with very little backend code. Even then it is questionable as to why not using a modular structure, since the difference between the two are not that big and converting the structure later on is much more effort. But I am getting ahead of myself.</p>
<p>So the single module horded a ton of classes with their factories. This got quite heavy and sometimes confusing. To clear up all the confusion I decided to convert the code structure from flat to modular.</p>
<h2 id="flat-vs-modular-the-comparison">Flat vs. modular: the comparison</h2>
<p>I could not find any documentation or user contributions on how to convert the structure. To find out what the differences are, I decided to create two new projects: one with a flat and one with a modular structure and then compare the two.</p>
<p>I create a new project with flat code structure. All default selections were chosen.</p>
<pre><code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive-flat
</code></pre>
<p>For modular structure first question <em>What type of installation would you like?</em> was answered with 3 - Modular. For all other options the default selections where chosen.</p>
<pre><code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive-modular
</code></pre>
<p><img src="/img/from-flat-to-modular/create-project-with-modular-code-structure.png" alt="Create project with modular code structure"></p>
<p>The structural differences of the two projects are (1) the location of the source file within the <code>App</code> module, (2) a template folder and (3) the autoloading configuration.</p>
<table>
<thead>
<tr>
<th></th>
<th>Flat</th>
<th>Modular</th>
</tr>
</thead>
<tbody>
<tr>
<td>Source App Module</td>
<td><code>src/App</code></td>
<td><code>src/App/src</code></td>
</tr>
<tr>
<td>Template Ordner</td>
<td><em>n/a</em></td>
<td><code>src/App/templates</code></td>
</tr>
<tr>
<td>Autoload configuration</td>
<td><code>&quot;App\\&quot;: &quot;src/App/&quot;</code></td>
<td><code>&quot;App\\&quot;: &quot;src/App/src/&quot;</code></td>
</tr>
</tbody>
</table>
<h2 id="making-the-transition">Making the transition</h2>
<p>Consequently, I needed to make the following changes to convert the project structure:</p>
<ol>
<li>Move contents of <code>src/App</code> to <code>src/App/src</code></li>
<li><em>Optional:</em> Move the templates from within the <code>App</code> folder to <code>src /App/templates</code> and adjust the configured templates path (in my case in <code>config/autoload/application.global.php</code>)</li>
<li>Update the autoload configuration in <code>composer.json</code> to <code>&quot;App\\&quot;: &quot;src/App/src/&quot;</code></li>
<li>Execute <code>composer dump-autoload</code> to update the autoloading classes</li>
</ol>
<p>That's it, the transition is made.</p>
<p>But my initial issue was not solved. I went ahead and re-organized the <code>App</code> module, moving various folders into their own module. For each folder I repeated the following steps.</p>
<ol>
<li>Create a new module <code>$ composer expressive module:create {ModuleName}</code></li>
<li>Moved classes from <code>src/App/src/{ModuleName}/</code> to <code>src/{ModuleName}/src/</code></li>
<li>Updated namespace of classes and imports from <code>App\{ModuleName}</code> to <code>{ModuleName}</code></li>
<li>Moved dependencies definitions from <code>backend/App/src/ConfigProvider.php</code> to <code>backend/{ModuleName}/src/ConfigProvider.php</code></li>
</ol>
<p>Tadaa! Now the setup is much cleaner and simpler. Mission accomplished.</p>
<p>Gude Laune!</p>
]]></content>
        </item>
        
        <item>
            <title>Just do it</title>
            <link>https://arueckauer.github.io/posts/2019/05/just-do-it/</link>
            <pubDate>Thu, 16 May 2019 13:00:00 +0200</pubDate>
            
            <guid>https://arueckauer.github.io/posts/2019/05/just-do-it/</guid>
            <description>The idea of starting my own blog has accompanied me for years. Since I was afraid, it would not see regular updates and quickly become a lonesome tumbleweed, I&#39;ve never put it to action.
However I could never set aside having a tool to record and contain my thought. So here goes nothing.
Reasons to start and (not) to end My main motivation of starting this blog is to have a</description>
            <content type="html"><![CDATA[<p>The idea of starting my own blog has accompanied me for years. Since I was afraid, it would not see regular updates and quickly become a lonesome tumbleweed, I've never put it to action.</p>
<p>However I could never set aside having a tool to record and contain my thought. So here goes nothing.</p>
<h2 id="reasons-to-start-and-not-to-end">Reasons to start and (not) to end</h2>
<p>My main motivation of starting this blog is to have a</p>
<ul>
<li>journal to record my personal progress in software-development and possibly other topics of interest,</li>
<li>notepad for my learnings to go back to and</li>
<li>container for thoughts in gerneral.</li>
</ul>
<p>These are purely personal reasons and writing for an audience other than myself is not a priority at the moment. Also I am not getting payed for it, so this should be fun!</p>
<blockquote>
<p>Can we just have some fun?</p>
</blockquote>
<p><em>David Picciuto</em> from <a href="https://makesomething.com/">Make Something</a></p>
<p>I definitely do not want to pressure myself to create content on a defined regularity or to set any expectations on quality (which will be difficult).</p>
<h2 id="do-it">Do it</h2>
<p><a href="https://en.wikipedia.org/wiki/Spencer_W._Kimball">Spencer W. Kimball</a>, an American business, civic, and religious leader, is said to have had a sign on his desk saying:</p>
<blockquote>
<p>Do it. Do it right. Do it right now.</p>
</blockquote>
<p>What I believe he meant with it is: The opportunity to get something accomplished will never be better or easier than right now. Putting something off will make it more difficult as time passes.</p>
<p>I'm really looking forward to this adventure, Gude Laune!</p>
]]></content>
        </item>
        
    </channel>
</rss>
