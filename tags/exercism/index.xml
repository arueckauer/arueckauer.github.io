<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>exercism on Andi R√ºckauer</title>
    <link>https://arueckauer.github.io/tags/exercism/</link>
    <description>Recent content in exercism on Andi R√ºckauer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 13 Jun 2019 23:42:55 +0200</lastBuildDate>
    
	<atom:link href="https://arueckauer.github.io/tags/exercism/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use return types as much as possible?</title>
      <link>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</link>
      <pubDate>Thu, 13 Jun 2019 23:42:55 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D22
A mentor commented on my yesterday&amp;rsquo;s solution to the Grade School exercise.
 Good solution
Awesome! using strict_types
It&amp;rsquo;s approved for me but try to use return types as much as possible, I&amp;rsquo;m missing initGradeIfItDoesNotExist
 This post will reflect some of my personal thoughts. Since the mentor&amp;rsquo;s suggestion could be just some personal preference, I will not name the mentor.</description>
    </item>
    
    <item>
      <title>Grade School</title>
      <link>https://arueckauer.github.io/posts/2019/06/grade-school/</link>
      <pubDate>Wed, 12 Jun 2019 23:32:10 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/grade-school/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D21
This Exercism exercise is straight forward.
An extract from the instructions:
 Given students&amp;rsquo; names along with the grade that they are in, create a roster for the school.
In the end, you should be able to:
 Add a student&amp;rsquo;s name to the roster for a grade Get a list of all students enrolled in a grade Get a sorted list of all students in all grades.</description>
    </item>
    
    <item>
      <title>Meetup (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</link>
      <pubDate>Tue, 11 Jun 2019 21:29:52 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D20
Next up in the PHP sidetrack is the Meetup exercise.
A function is provided with the arguments
 (int) year, (int) month, (string) descriptor and (string) weekday  and expected to process the input and return an instance of DateTime with the corresponding date.
While year, month and weekday are an exact representation of their values, the descriptor is a bit more complicated.</description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</link>
      <pubDate>Mon, 10 Jun 2019 21:31:48 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D19
Today I am solving the Sieve of Eratosthenes side exercise of the Exercism PHP track.
 In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2.</description>
    </item>
    
    <item>
      <title>Difference of Squares -Part II</title>
      <link>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</link>
      <pubDate>Mon, 03 Jun 2019 19:25:05 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D13
In the meanwhile, dstockto reviewed and approved my solution. ü§òüèº Funny story: He found my blog and saw my submission here before seeing it on Exercism.
He gave me an interesting additional challenge, to use &amp;ldquo;closed&amp;rdquo; form math-based solutions. This would also allow performance improvement, since the current implementation will take longer the larger $number is.
Square Of Sum For this function dstockto mentioned the Gauss formula.</description>
    </item>
    
    <item>
      <title>Difference of Squares</title>
      <link>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</link>
      <pubDate>Mon, 27 May 2019 20:28:26 +0200</pubDate>
      
      <guid>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</guid>
      <description>This article is part of my #100DaysOfCode and #100DaysOfBlogging challenge. R1D7
Today I am solving the Difference of Squares of the PHP track on Exercism.
Exercism offers its users learning new programming languages through exercises with the valuable feedback of mentors. It currently has 50 different language tracks like C#, Go, Kotlin, TypeScript and many others. Head over to Exercism to join.
Introduction The source of this exercise is Problem 6 of the Euler project.</description>
    </item>
    
  </channel>
</rss>