<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exercism on Andi R√ºckauer</title>
    <link>https://arueckauer.github.io/tags/exercism/</link>
    <description>Recent content in Exercism on Andi R√ºckauer</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 15 Jun 2019 20:57:36 +0200</lastBuildDate>
    <atom:link href="https://arueckauer.github.io/tags/exercism/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Robot Simulator Chapter 2</title>
      <link>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</link>
      <pubDate>Sat, 15 Jun 2019 20:57:36 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator-chapter-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D24&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;After a mentor left some feedback:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;I like that you&amp;rsquo;ve split out the direction and position. I think you can go a bit further though.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I went back to the drawing board. üòä Seriously, I read the feedback on my mobile and let the thought process do its work. Then I took pen and paper and outlined an improved structure. The result can be found on &lt;a href=&#34;https://github.com/arueckauer/exercism-php/tree/master/robot-simulator&#34;&gt;GitHub&lt;/a&gt;. Where I might upload all my solutions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Robot Simulator</title>
      <link>https://arueckauer.github.io/posts/2019/06/robot-simulator/</link>
      <pubDate>Fri, 14 Jun 2019 21:30:50 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/robot-simulator/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D23&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;instructions&#34;&gt;Instructions&lt;/h2&gt;&#xA;&lt;p&gt;Today&amp;rsquo;s challenge is to write a robot simulator. A robot is placed on a hypothetical infinite grid phasing either north, east, south or west. It has three possible movements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;turn right,&lt;/li&gt;&#xA;&lt;li&gt;turn left and&lt;/li&gt;&#xA;&lt;li&gt;advance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A robot can also follow instructions on how to proceed.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The letter-string &amp;ldquo;RAALAL&amp;rdquo; means:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Turn right&lt;/li&gt;&#xA;&lt;li&gt;Advance twice&lt;/li&gt;&#xA;&lt;li&gt;Turn left&lt;/li&gt;&#xA;&lt;li&gt;Advance once&lt;/li&gt;&#xA;&lt;li&gt;Turn left yet again&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Say a robot starts at {7, 3} facing north. Then running this stream of instructions should leave it at {9, 4} facing west.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;roll-up-my-sleeves&#34;&gt;Roll up my sleeves&lt;/h2&gt;&#xA;&lt;p&gt;First, I provide a structure that is syntactical correct.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use return types as much as possible?</title>
      <link>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</link>
      <pubDate>Thu, 13 Jun 2019 23:42:55 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/use-return-types-as-much-as-possible/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D22&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;A mentor commented on my &lt;a href=&#34;https://arueckauer.github.io/posts/2019/06/grade-school/&#34;&gt;yesterday&amp;rsquo;s solution&lt;/a&gt; to the Grade School exercise.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Good solution&lt;/p&gt;&#xA;&lt;p&gt;Awesome! using strict_types&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s approved for me but try to use return types as much as possible, I&amp;rsquo;m missing &lt;strong&gt;initGradeIfItDoesNotExist&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;This post will reflect some of my personal thoughts. Since the mentor&amp;rsquo;s suggestion could be just some personal preference, I will not name the mentor.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;I am very grateful for each one of them taking time and providing valuable feedback. This has been an awesome experience. And since I am doing these exercises to learn, the caused reflection is what I am looking for. Thank you!&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grade School</title>
      <link>https://arueckauer.github.io/posts/2019/06/grade-school/</link>
      <pubDate>Wed, 12 Jun 2019 23:32:10 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/grade-school/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D21&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;This &lt;a href=&#34;https://exercism.io&#34;&gt;Exercism&lt;/a&gt; exercise is straight forward.&lt;/p&gt;&#xA;&lt;p&gt;An extract from the instructions:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Given students&amp;rsquo; names along with the grade that they are in, create a roster for the school.&lt;/p&gt;&#xA;&lt;p&gt;In the end, you should be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add a student&amp;rsquo;s name to the roster for a grade&lt;/li&gt;&#xA;&lt;li&gt;Get a list of all students enrolled in a grade&lt;/li&gt;&#xA;&lt;li&gt;Get a sorted list of all students in all grades. Grades should sort as 1, 2, 3, etc., and students within a grade should be sorted alphabetically by name.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Note that all our students only have one name. (It&amp;rsquo;s a small town, what do you want?)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Meetup (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</link>
      <pubDate>Tue, 11 Jun 2019 21:29:52 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/meetup-side-exercise/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D20&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Next up in the PHP sidetrack is the &lt;em&gt;Meetup&lt;/em&gt; exercise.&lt;/p&gt;&#xA;&lt;p&gt;A function is provided with the arguments&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(int) year,&lt;/li&gt;&#xA;&lt;li&gt;(int) month,&lt;/li&gt;&#xA;&lt;li&gt;(string) descriptor and&lt;/li&gt;&#xA;&lt;li&gt;(string) weekday&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;and expected to process the input and return an instance of &lt;code&gt;DateTime&lt;/code&gt; with the corresponding date.&lt;/p&gt;&#xA;&lt;p&gt;While year, month and weekday are an exact representation of their values, the descriptor is a bit more complicated. It can hold one of the following values:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sieve of Eratosthenes (Side Exercise)</title>
      <link>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</link>
      <pubDate>Mon, 10 Jun 2019 21:31:48 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/sieve-of-eratosthenes-side-exercise/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D19&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Today I am solving the Sieve of Eratosthenes side exercise of the &lt;a href=&#34;https://exercism.io&#34;&gt;Exercism&lt;/a&gt; PHP track.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for finding all prime numbers up to any given limit.&#xA;It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the first prime number, 2. The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime. This is the sieve&amp;rsquo;s key distinction from using trial division to sequentially test each candidate number for divisibility by each prime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Difference of Squares -Part II</title>
      <link>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</link>
      <pubDate>Mon, 03 Jun 2019 19:25:05 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/06/difference-of-squares-part-ii/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D13&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;In the meanwhile, &lt;a href=&#34;https://twitter.com/dstockto&#34;&gt;dstockto&lt;/a&gt; reviewed and approved my solution. ü§òüèº Funny story: He found my blog and saw my submission here before seeing it on Exercism.&lt;/p&gt;&#xA;&lt;p&gt;He gave me an interesting additional challenge, to use &amp;ldquo;closed&amp;rdquo; form math-based solutions. This would also allow performance improvement, since the current implementation will take longer the larger &lt;code&gt;$number&lt;/code&gt; is.&lt;/p&gt;&#xA;&lt;h2 id=&#34;square-of-sum&#34;&gt;Square Of Sum&lt;/h2&gt;&#xA;&lt;p&gt;For this function dstockto mentioned the &lt;a href=&#34;https://de.wikipedia.org/wiki/Gau%C3%9Fsche_Summenformel&#34;&gt;Gauss formula&lt;/a&gt;. This is a form to sum the first n positive integers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Difference of Squares</title>
      <link>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</link>
      <pubDate>Mon, 27 May 2019 20:28:26 +0200</pubDate>
      <guid>https://arueckauer.github.io/posts/2019/05/difference-of-squares/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of my &lt;a href=&#34;https://arueckauer.github.io/tags/100-days-of-code/&#34;&gt;#100DaysOfCode&lt;/a&gt; and #100DaysOfBlogging challenge. R1D7&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Today I am solving the &lt;em&gt;Difference of Squares&lt;/em&gt; of the PHP track on &lt;a href=&#34;https://exercism.io/&#34;&gt;Exercism&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Exercism offers its users learning new programming languages through exercises with the valuable feedback of mentors. It currently has 50 different language tracks like C#, Go, Kotlin, TypeScript and many others. Head over to Exercism to &lt;a href=&#34;https://exercism.io/users/sign_up&#34;&gt;join&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The source of this exercise is &lt;a href=&#34;https://projecteuler.net/problem=6&#34;&gt;Problem 6&lt;/a&gt; of the Euler project.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
